/**************************************************************************
 *				(c) Copyright UNIVERSIDAD CENTRAL DEL ECUADOR. 
 *                            www.uce.edu.ec

 * Este programa de computador es propiedad de la UNIVERSIDAD CENTRAL DEL ECUADOR
 * y esta protegido por las leyes y tratados internacionales de derechos de 
 * autor. El uso, reproducción o distribución no autorizada de este programa, 
 * o cualquier porción de él, puede dar lugar a sanciones criminales y 
 * civiles severas, y serán procesadas con el grado máximo contemplado 
 * por la ley.
 
 ************************************************************************* 
   
 ARCHIVO:     EstudianteDtoServicioJdbcImpl.java	  
 DESCRIPCION: Clase donde se implementan los metodos para el servicio jdbc del DTO de estudiante. 
 *************************************************************************
                           	MODIFICACIONES
                            
 FECHA         		     AUTOR          					COMENTARIOS
 13-ABR-2017 		  Dennis Collaguazo			          Emisión Inicial
 ***************************************************************************/
package ec.edu.uce.academico.ejb.servicios.jdbc.impl;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.sql.DataSource;

import ec.edu.uce.academico.ejb.dtos.CarreraDto;
import ec.edu.uce.academico.ejb.dtos.EstudianteJdbcDto;
import ec.edu.uce.academico.ejb.excepciones.EstudianteDtoJdbcException;
import ec.edu.uce.academico.ejb.excepciones.EstudianteDtoJdbcNoEncontradoException;
import ec.edu.uce.academico.ejb.servicios.jdbc.interfaces.EstudianteDtoServicioJdbc;
import ec.edu.uce.academico.ejb.utilidades.constantes.CarreraConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.DetalleMatriculaConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.FichaEstudianteConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.FichaInscripcionConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.FichaMatriculaConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.GeneralesConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.InstitucionAcademicaConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.JdbcConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.NivelConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.PeriodoAcademicoConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.PersonaConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.RecordEstudianteConstantes;
import ec.edu.uce.academico.ejb.utilidades.constantes.SolicitudTerceraMatriculaConstantes;
import ec.edu.uce.academico.ejb.utilidades.servicios.GeneralesUtilidades;
import ec.edu.uce.academico.ejb.utilidades.servicios.MensajeGeneradorUtilidades;
import ec.edu.uce.academico.jpa.entidades.publico.ComprobantePago;
import ec.edu.uce.academico.jpa.entidades.publico.FichaMatricula;
import ec.edu.uce.academico.jpa.entidades.publico.PeriodoAcademico;
import ec.edu.uce.academico.jpa.entidades.publico.RolFlujoCarrera;

/**
 * EJB EstudianteDtoServicioJdbcImpl.
 * Clase donde se implementan los metodos para el servicio jdbc del DTO de estudiante.
 * @author dcollaguazo.
 * @version 1.0
 */
@Stateless
public class EstudianteDtoServicioJdbcImpl implements EstudianteDtoServicioJdbc {
	
	@Resource(mappedName=GeneralesConstantes.APP_DATA_SURCE)
	private DataSource ds;
	@Resource(lookup=GeneralesConstantes.APP_DATA_SOURCE_SAU)
	private DataSource dsSau;
	@PersistenceContext(unitName=GeneralesConstantes.APP_UNIDAD_PERSISTENCIA)
	private EntityManager em;
	
	/* ********************************************************************************* *
	 * ************************** METODOS DE CONSULTA ********************************** *
	 * ********************************************************************************* */
	/**
	 * Método que busca un estudiante por carrera, apellido paterno, identificacion.
	 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
	 * @param listCarreras - lista de carreras en caso de que haya seleccionado todas las carreras disponibles para el ususario.
	 * @param apellidoPaterno - apellido del estudiante que se requiere buscar.
	 * @param identificacion -identificacion del estudiante que se requiere buscar.
	 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
	 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
	 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
	 */
		public List<EstudianteJdbcDto> buscarEstudianteXPeriodocarreraNivelTituloApPaternoIndetificacion(int idPeriodo, int idCarrera,List<CarreraDto> listCarreras, int idNivel, String apellidoPaterno, String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
			List<EstudianteJdbcDto> retorno = null;
			PreparedStatement pstmt = null;
			Connection con = null;
			ResultSet rs = null;
			try {
				StringBuilder sbSql = new StringBuilder();
				sbSql.append(" SELECT ");
				sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
				sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
							sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
				sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
				sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
				sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
				sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
							sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
				sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
				sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
				sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
				sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
				sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
				sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
				sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
				sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
				sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
				sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
							sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
				sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
				sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
				sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
				sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
							sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
				sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
							sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
				sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
				sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
				sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
				sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
				sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
				sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
				
				sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
				sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
				
				sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
				sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
				sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
				sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
				sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
				sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
				
				sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
							sbSql.append(" END AS universidadid ");
				sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
							sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
							sbSql.append(" END AS universidaddesc ");
				
				sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
				sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
				sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
				sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
				sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
				sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
				sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
				
				sbSql.append(" FROM ");
				sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
							sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
							sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
							sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
							sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
							sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
				
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
							sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
							sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
							sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
							sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
							sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
							sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
							sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
							sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRMT_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
							sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
							sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
							sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
							sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);
				
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
							sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
							sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
							
				sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
							sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
				
				sbSql.append(" WHERE "); sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(") like  ? ");
				sbSql.append(" AND ");sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(") like ? ");
				
				//verifico si selecciono todas las carreras o una sola
				if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
					sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" in ( ");
					for (int i = 0; i < listCarreras.size(); i++) {
						sbSql.append(" ? ");
						if(i != listCarreras.size() -1) {
				         sbSql.append(","); 
				        }
					}
					sbSql.append(" ) ");
				}else{//caso para una sola carrera
					sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
				}
				sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
				sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
				sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
				//FIN QUERY
				con = ds.getConnection();
				pstmt = con.prepareStatement(sbSql.toString());
				pstmt.setString(1, "%"+apellidoPaterno.toUpperCase()+"%"); //cargo el apellido paterno
				pstmt.setString(2, "%"+identificacion.toUpperCase()+"%"); //cargo la identificacion
				//seteo en en el prepared statement la carrera o la lista de carreras
				int contador = 2;
				if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para setear la lista de carreras
					for (CarreraDto item : listCarreras) {
						contador++;
						pstmt.setInt(contador, item.getCrrId()); //cargo las carreras ids
					}
				}else{//caso para setear una sola carrrera
					contador++;
					pstmt.setInt(contador, idCarrera); //cargo el id de carrera
				}
				contador++;
				pstmt.setInt(contador, idNivel);
				contador++;
				pstmt.setInt(contador, idPeriodo);
				rs = pstmt.executeQuery();
				retorno = new ArrayList<EstudianteJdbcDto>();
				while(rs.next()){
					retorno.add(transformarResultSetADto(rs));
				}
				
			} catch (SQLException e) {
				throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
			} catch (Exception e) {
				throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
			} finally {
				try {
					if (rs != null) {
						rs.close();
					}
					if (pstmt != null) {
						pstmt.close();
					}
					if (con != null) {
						con.close();
					}
				} catch (SQLException e) {
					}	
			}
			if(retorno == null || retorno.size()<=0){
				throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
			}
			return retorno;
		}
		
		/**
		 * Método que busca un estudiante por carrera, apellido paterno, identificacion.
		 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
		 * @param apellidoPaterno - apellido del estudiante que se requiere buscar.
		 * @param identificacion -identificacion del estudiante que se requiere buscar.
		 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
		 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
		 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
		 */
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodocarreraNivelTituloApPaternoIndetificacionAlterno(int idPeriodo, int idCarrera, int idNivel, String apellidoPaterno, String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
								sbSql.append(" END AS ");
								sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);
					sbSql.append(" AS paisdesc ");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);
					sbSql.append(" AS cantondesc ");
					
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
								sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
								sbSql.append(" END AS universidaddesc ");
					
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRMT_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);
						
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" WHERE "); sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(") like  ? ");
					sbSql.append(" AND ");sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(") like ? ");
					sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					sbSql.append(" GROUP BY ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					sbSql.append(" ,inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" ,inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setString(1, "%"+apellidoPaterno.toUpperCase()+"%"); //cargo el apellido paterno
					pstmt.setString(2, "%"+identificacion.toUpperCase()+"%"); //cargo la identificacion
					pstmt.setInt(3, idCarrera); //cargo el id de carrera
					pstmt.setInt(4, idNivel);
					pstmt.setInt(5, idPeriodo);
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoAlterno(rs));
					}
					
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por carrera, apellido paterno, identificacion.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idNivel -nivel en el que se requiere buscar.
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodocarreraNivel(int idPeriodo, int idCarrera, int idNivel, int idParalelo, String identificacion, String apellidoPaterno) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
				//	sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", "); //habilito MQ
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(", ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS paisdesc");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");
									
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" WHERE ");
					
						sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
//						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
						
						if(idParalelo != -99){
							sbSql.append(" AND ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ? ");
						}
						sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
//					
					    sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");
					
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(2, idCarrera); //cargo el id carrera
					pstmt.setInt(3, idNivel); //cargo el id nivel
					if(idParalelo != -99){
						pstmt.setInt(4, idParalelo);
						pstmt.setString(5, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
						pstmt.setString(6, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					}else{
						pstmt.setString(4, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
						pstmt.setString(5, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					}
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivel(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por carrera, apellido paterno, identificacion.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idNivel -nivel en el que se requiere buscar.
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarXPeriodocarreraNivelMatriculado(int idPeriodo, int idCarrera, int idNivel, String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);					
					sbSql.append(", ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					
//					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
//					sbSql.append(" AS paisid ");
//					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
//					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
//					sbSql.append(" END AS paisdesc");
//					
//					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
//					sbSql.append(" AS cantonid ");
//					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
//					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
//					sbSql.append(" END AS cantondesc");
									
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
//								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
//								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
//								
//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
//								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" WHERE ");
					
						sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
					
					sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
//					
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					
					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(2, idCarrera); //cargo el id carrera
					pstmt.setInt(3, idNivel); //cargo el id nivel
					pstmt.setString(4, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion

					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelMatricula(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por carrera, apellido paterno, identificacion.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idNivel -nivel en el que se requiere buscar.
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarXPeriodocarreraNivelMatriculadoLista(int idPeriodo, int idCarrera, int idNivel, String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.PLCR_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_TIPO);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON "); sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON "); sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON "); sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON "); sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON "); sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON "); sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON "); 	sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON "); sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON "); sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON "); sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON "); sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON "); sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON "); sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" WHERE "); sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
						sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);sbSql.append(" = ? ");
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");

						if (idNivel != GeneralesConstantes.APP_ID_BASE) {
							sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(" = ? ");	
						}
						
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);

					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idPeriodo); 
					pstmt.setInt(2, idCarrera); 
					pstmt.setString(3, GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%");

					if (idNivel != GeneralesConstantes.APP_ID_BASE) {
						pstmt.setInt(4, idNivel); 
					}
					rs = pstmt.executeQuery();
					retorno = new ArrayList<>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelMatriculaLista(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			@Override
			public List<EstudianteJdbcDto> buscarXPeriodoNivelacionMatriculadoLista(int idPeriodo, String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.PLCR_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_TIPO);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON "); sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON "); sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON "); sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON "); sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON "); sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON "); sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON "); 	sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON "); sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON "); sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON "); sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON "); sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON "); sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON "); sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" WHERE "); sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
					sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(" = ");sbSql.append(FichaMatriculaConstantes.NIVELACION_VALUE);
//					sbSql.append(" AND ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.PRIMERA_MATRICULA_VALUE);
					
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);

					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idPeriodo); 
					pstmt.setString(2, GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%");
					rs = pstmt.executeQuery();
					retorno = new ArrayList<>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelMatriculaLista(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca una lista de estudiantes por carrera nivel materia apellidos o identificación
			 * @param idPeriodo - idPeriodo id del periodo academico a buscar
			 * @param idCarrera - idCarrera id de la carrera a buscar
			 * @param idNivel - idNivel id del nivel a buscar
			 * @param idParalelo - idParalelo id del paralelo a buscar
			 * @param idMateria - idMateria id de la materia a buscar
			 * @param docente - docente id del detalle puesto para identificar el docente que busca estudiantes
			 * @param apellidoPaterno - apellidoPaterno a buscar
			 * @param identificacion - identificación número de cédula o pasaporte a buscar
			 * @return - retorna una lista de estudiantes con los parametros ingresados
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXperiodoXcarreraNivelMateriaApPaternoIndetificacion(int idPeriodo, int idCarrera, int idNivel, int idParalelo, int idMateria, int docente, String apellidoPaterno, String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {

					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
					//				sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);

					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARGA_HORARIA);sbSql.append(" crhr ON ");
					sbSql.append(" crhr.");sbSql.append(JdbcConstantes.CRHR_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);


					sbSql.append(" WHERE "); 
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					sbSql.append(" AND ");sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(") like  ? ");
					sbSql.append(" AND ");sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(") like ? ");

					sbSql.append(" AND ");sbSql.append(" crhr.");sbSql.append(JdbcConstantes.CRHR_DTPS_ID);sbSql.append(" = ? ");

					if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					}
					if(idCarrera != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
					}
					if(idNivel != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
					}
					if(idParalelo != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ? ");
					}
					if(idMateria != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ? ");
					}

					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);

					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					
					pstmt.setString(1, "%"+apellidoPaterno.toUpperCase()+"%"); //cargo el apellido paterno
					pstmt.setString(2, "%"+identificacion.toUpperCase()+"%"); //cargo la identificacion
					pstmt.setInt(3, docente); //cargo el docente

					int contador = 3;
					if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idPeriodo); //cargo el id del periodo academico
					}
					if(idCarrera != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idCarrera); //cargo el id de carrera
					}
					if(idNivel != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idNivel); //cargo el id de nivel
					}
					if(idParalelo != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idParalelo); //cargo el id de nivel
					}
					if(idMateria != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idMateria); //cargo el id de la materia
					}

					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelMateria(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}	
		
			
			/**
			 * Método que busca una lista de estudiantes por carrera nivel materia apellidos o identificación
			 * @param idPeriodo - idPeriodo id del periodo academico a buscar
			 * @param idCarrera - idCarrera id de la carrera a buscar
			 * @param idNivel - idNivel id del nivel a buscar
			 * @param idParalelo - idParalelo id del paralelo a buscar
			 * @param idMateria - idMateria id de la materia a buscar
			 * @param docente - docente id del detalle puesto para identificar el docente que busca estudiantes
			 * @param apellidoPaterno - apellidoPaterno a buscar
			 * @param identificacion - identificación número de cédula o pasaporte a buscar
			 * @return - retorna una lista de estudiantes con los parametros ingresados
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			@Override
			public List<EstudianteJdbcDto> buscarEstudianteXperiodoXcarreraNivelMateriaApPaternoIndetificacionPagados(int idPeriodo, int idCarrera, int idNivel, int idParalelo, int idMateria, int docente, String apellidoPaterno, String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {

					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
					//				sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);

					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARGA_HORARIA);sbSql.append(" crhr ON ");
					sbSql.append(" crhr.");sbSql.append(JdbcConstantes.CRHR_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);



					sbSql.append(" WHERE "); 
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					sbSql.append(" AND ");sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(") like  ? ");
					sbSql.append(" AND ");sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(") like ? ");

					sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);

					sbSql.append(" AND ");sbSql.append(" crhr.");sbSql.append(JdbcConstantes.CRHR_DTPS_ID);sbSql.append(" = ? ");

					if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					}
					if(idCarrera != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
					}
					if(idNivel != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
					}
					if(idParalelo != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ? ");
					}
					if(idMateria != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ? ");
					}

					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);

					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());

					pstmt.setString(1, "%"+apellidoPaterno.toUpperCase()+"%"); //cargo el apellido paterno
					pstmt.setString(2, "%"+identificacion.toUpperCase()+"%"); //cargo la identificacion
					pstmt.setInt(3, docente); //cargo el docente

					int contador = 3;
					if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idPeriodo); //cargo el id del periodo academico
					}
					if(idCarrera != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idCarrera); //cargo el id de carrera
					}
					if(idNivel != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idNivel); //cargo el id de nivel
					}
					if(idParalelo != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idParalelo); //cargo el id de nivel
					}
					if(idMateria != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idMateria); //cargo el id de la materia
					}

					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelMateria(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
					}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}

			/**
			 * Método que busca una lista de estudiantes por carrera nivel materia apellidos o identificación
			 * @param idPeriodo - idPeriodo id del periodo academico a buscar
			 * @param idCarrera - idCarrera id de la carrera a buscar
			 * @param idNivel - idNivel id del nivel a buscar
			 * @param idParalelo - idParalelo id del paralelo a buscar
			 * @param idMateria - idMateria id de la materia a buscar
			 * @param docente - docente id del detalle puesto para identificar el docente que busca estudiantes
			 * @param apellidoPaterno - apellidoPaterno a buscar
			 * @param identificacion - identificación número de cédula o pasaporte a buscar
			 * @return - retorna una lista de estudiantes con los parametros ingresados
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			@Override
			public List<EstudianteJdbcDto> buscarEstudianteXperiodoXcarreraNivelMateriaApPaternoIndetificacionPagadosAlterno(int idPeriodo, int idCarrera, int idNivel, int idParalelo, int idMateria, int docente, String apellidoPaterno, String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {

					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
					//				sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);

					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARGA_HORARIA);sbSql.append(" crhr ON ");
					//					sbSql.append(" crhr.");sbSql.append(JdbcConstantes.CRHR_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);



					sbSql.append(" WHERE "); 
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					sbSql.append(" AND ");sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(") like  ? ");
					sbSql.append(" AND ");sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(") like ? ");

					sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);

					//					sbSql.append(" AND ");sbSql.append(" crhr.");sbSql.append(JdbcConstantes.CRHR_DTPS_ID);sbSql.append(" = ? ");

					if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					}
					if(idCarrera != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
					}
					if(idNivel != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
					}
					if(idParalelo != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ? ");
					}
					if(idMateria != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ? ");
					}

					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);

					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());

					pstmt.setString(1, "%"+apellidoPaterno.toUpperCase()+"%"); //cargo el apellido paterno
					pstmt.setString(2, "%"+identificacion.toUpperCase()+"%"); //cargo la identificacion
					//					pstmt.setInt(3, docente); //cargo el docente

					int contador = 2;
					if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idPeriodo); //cargo el id del periodo academico
					}
					if(idCarrera != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idCarrera); //cargo el id de carrera
					}
					if(idNivel != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idNivel); //cargo el id de nivel
					}
					if(idParalelo != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idParalelo); //cargo el id de nivel
					}
					if(idMateria != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idMateria); //cargo el id de la materia
					}

					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelMateria(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
					}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}

			/**
			 * Método que busca una lista de estudiantes por carrera nivel materia apellidos o identificación
			 * @param idPeriodo - idPeriodo id del periodo academico a buscar
			 * @param idCarrera - idCarrera id de la carrera a buscar
			 * @param idNivel - idNivel id del nivel a buscar
			 * @param idParalelo - idParalelo id del paralelo a buscar
			 * @param idMateria - idMateria id de la materia a buscar
			 * @param docente - docente id del detalle puesto para identificar el docente que busca estudiantes
			 * @param apellidoPaterno - apellidoPaterno a buscar
			 * @param identificacion - identificación número de cédula o pasaporte a buscar
			 * @return - retorna una lista de estudiantes con los parametros ingresados
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXperiodoXcarreraNivelMateriaApPaternoIndetificacionPagadosNoRetirados(int idPeriodo, int idCarrera, int idNivel, int idParalelo, int idMateria, int docente, String apellidoPaterno, String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {

					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
					//				sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);

					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					
//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARGA_HORARIA);sbSql.append(" crhr ON ");
					//					sbSql.append(" crhr.");sbSql.append(JdbcConstantes.CRHR_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);



					sbSql.append(" WHERE "); 
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
//					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					sbSql.append(" AND UPPER(prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(") like  ? ");
					sbSql.append(" AND ");sbSql.append(" UPPER(prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(") like ? ");

					sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" not in ( ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_INSCRITO_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_ANULACION_MATRICULA_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_FORTUITAS_VALUE);sbSql.append(" ) ");
					

					//					sbSql.append(" AND ");sbSql.append(" crhr.");sbSql.append(JdbcConstantes.CRHR_DTPS_ID);sbSql.append(" = ? ");

					if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					}
					if(idCarrera != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
					}
					if(idNivel != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
					}
					if(idParalelo != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ? ");
					}
					if(idMateria != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ? ");
					}

					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);

					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());

					pstmt.setString(1, "%"+apellidoPaterno.toUpperCase()+"%"); //cargo el apellido paterno
					pstmt.setString(2, "%"+identificacion.toUpperCase()+"%"); //cargo la identificacion
					//					pstmt.setInt(3, docente); //cargo el docente

					int contador = 2;
					if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idPeriodo); //cargo el id del periodo academico
					}
					if(idCarrera != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idCarrera); //cargo el id de carrera
					}
					if(idNivel != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idNivel); //cargo el id de nivel
					}
					if(idParalelo != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idParalelo); //cargo el id de nivel
					}
					if(idMateria != GeneralesConstantes.APP_ID_BASE){
						contador ++;
						pstmt.setInt(contador, idMateria); //cargo el id de la materia
					}

					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelMateria(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
					}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
		/**
		 * Método que busca un estudiante por id del estudiante.
		 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
		 * @return Dto estudiante.
		 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
		 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
		 */
			public EstudianteJdbcDto buscarEstudianteXId(int idEstudiante) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				EstudianteJdbcDto retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
								sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
								sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
								sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
								sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
								sbSql.append(" END AS universidaddesc ");
					
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);
						
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);			
					sbSql.append(" WHERE ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					rs = pstmt.executeQuery();
					if(rs.next()){
						retorno = transformarResultSetADto(rs);
					}else{
						retorno = null;
					}
					
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.estudiante.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.estudiante.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.no.result.exception")));
				}
				return retorno;
			}

			/**
			 * Método que busca un estudiante por id del estudiante y por id de matrícula.
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> listaMateriasXfcmtXidentificacion(String idEstudiante, int idMatricula) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					
					sbSql.append(" select  distinct ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CREDITOS);
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_NUMERAL);
					
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);
					
					sbSql.append(" ,(SELECT fces.fces_id  FROM ficha_estudiante fces,ficha_matricula fcmt,comprobante_pago cmpa  ");
					sbSql.append("    where fces.FCES_ID = fcmt.FCES_ID and fcmt.fcmt_id = cmpa.fcmt_id and cmpa.cmpa_id =dtmt.cmpa_id)  as ");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" , (SELECT fcmt.fcmt_fecha_matricula  FROM ficha_estudiante fces,ficha_matricula fcmt,comprobante_pago cmpa  ");
					sbSql.append(" where fces.FCES_ID = fcmt.FCES_ID and fcmt.fcmt_id = cmpa.fcmt_id and cmpa.cmpa_id =dtmt.cmpa_id)  as ");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					
					sbSql.append(" , (SELECT fcmt.fcmt_id  FROM ficha_estudiante fces,ficha_matricula fcmt,comprobante_pago cmpa  ");
					sbSql.append(" where fces.FCES_ID = fcmt.FCES_ID and fcmt.fcmt_id = cmpa.fcmt_id and cmpa.cmpa_id =dtmt.cmpa_id)  as ");sbSql.append(JdbcConstantes.FCMT_ID);
					
					
					sbSql.append(" , (SELECT fcmt.fcmt_valor_total  FROM ficha_estudiante fces,ficha_matricula fcmt,comprobante_pago cmpa  ");
					sbSql.append(" where fces.FCES_ID = fcmt.FCES_ID and fcmt.fcmt_id = cmpa.fcmt_id and cmpa.cmpa_id =dtmt.cmpa_id)  as ");sbSql.append(JdbcConstantes.FCMT_VALOR_TOTAL);
					
					sbSql.append(" , (select rces1.RCES_estado from  RECORD_ESTUDIANTE rces1  where  rces1.mlcrpr_id = mlcrpr.mlcrpr_ID  ");
					sbSql.append(" AND rces1.FCES_ID =  ((SELECT fces.fces_id  FROM ficha_estudiante fces,ficha_matricula fcmt,comprobante_pago cmpa "); 
					sbSql.append("    where fces.FCES_ID = fcmt.FCES_ID and fcmt.fcmt_id = cmpa.fcmt_id and cmpa.cmpa_id =dtmt.cmpa_id) )) as ");sbSql.append(JdbcConstantes.RCES_ESTADO);
					
					sbSql.append(" FROM   ");
					sbSql.append(" detalle_matricula dtmt,  ");
					sbSql.append(" malla_curricular_paralelo mlcrpr,  ");
					sbSql.append(" paralelo prl,  ");
					sbSql.append(" malla_curricular_materia mlcrmt,  ");
					
					sbSql.append(" materia mtr,  ");
					sbSql.append(" NIVEL nvl,  ");
					sbSql.append(" carrera crr,  ");
					sbSql.append(" periodo_academico prac,  ");
					sbSql.append(" ficha_matricula fcmt,  ");
					sbSql.append(" comprobante_pago cmpa,  ");
					sbSql.append(" record_estudiante rces,  ");
					sbSql.append(" ficha_estudiante fces  ");
					
					sbSql.append(" where  ");
					sbSql.append(" dtmt.mlcrpr_id = mlcrpr.mlcrpr_id  ");
					sbSql.append(" and mlcrpr.prl_id = prl.prl_id  ");
					sbSql.append(" and mlcrpr.mlcrmt_id = mlcrmt.mlcrmt_id  ");
					sbSql.append(" and mlcrmt.mtr_id = mtr.mtr_id  ");
					sbSql.append(" AND mlcrmt.NVL_ID = nvl.NVL_ID  ");
					
					sbSql.append(" AND crr.crr_id  = mtr.crr_id  ");
					sbSql.append(" AND prl.prac_id  = prac.prac_id  ");
					
					sbSql.append(" AND mlcrpr.mlcrpr_id = dtmt.mlcrpr_id  ");
					sbSql.append(" AND cmpa.cmpa_id = dtmt.cmpa_id  ");
					sbSql.append(" AND fcmt.fcmt_id = cmpa.fcmt_id  ");
					
					sbSql.append(" AND rces.mlcrpr_id = mlcrpr.mlcrpr_id  ");
					
					sbSql.append(" AND rces.fces_id = fces.fces_id  ");
					sbSql.append(" AND fces.fces_id = fcmt.fces_id  ");
					
					sbSql.append(" AND rces.rces_estado not in (-1,3,10,12) ");
					
//					sbSql.append(" AND dtmt.dtmt_estado = 0  ");
					
					sbSql.append(" and dtmt.cmpa_id = ( SELECT  cmpa.cmpa_id  "); 
					sbSql.append(" FROM  ");
					 sbSql.append(" PERSONA prs  "); 
					sbSql.append("  LEFT JOIN FICHA_ESTUDIANTE fces ON prs.PRS_ID = fces.PRS_ID  ");  
					 sbSql.append(" LEFT JOIN FICHA_INSCRIPCION fcin ON fcin.FCIN_ID  = fces.FCIN_ID  ");   
					sbSql.append(" LEFT JOIN CONFIGURACION_CARRERA cncr ON fcin.CNCR_ID =  cncr.CNCR_ID  "); 
					sbSql.append(" LEFT JOIN CARRERA crr ON cncr.CRR_ID =  crr.CRR_ID   ");
					sbSql.append(" LEFT JOIN DEPENDENCIA dpn ON crr.DPN_ID =  dpn.DPN_ID   ");
					sbSql.append(" LEFT JOIN FICHA_MATRICULA fcmt ON fcmt.FCES_ID =  fces.FCES_ID  "); 
					sbSql.append(" LEFT JOIN COMPROBANTE_PAGO cmpa ON cmpa.FCMT_ID =  fcmt.FCMT_ID  ");
					sbSql.append(" WHERE  ");
					sbSql.append(" prs.PRS_Identificacion  = ?  ");  
					sbSql.append(" and fcmt.fcmt_id = ? )  ");
					sbSql.append(" order by fcmt.fcmt_nivel_ubicacion , mtr.mtr_descripcion ");
					
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					
										
					pstmt.setString(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idMatricula); //cargo el id de la matrícula
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoListaMatriculasXidentificacionXfcmt(rs));
					}
					
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.no.result.exception")));
				}
				return retorno;
			}
			
			
			/**
			 * Método que busca un estudiante por id del estudiante y por id de matrícula.
			 * @author Arturo Villafuerte - ajvillafuerte
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> listaMateriasXfcmtXidentificacionFull(String idEstudiante, int idMatricula) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					
					sbSql.append(" select  distinct ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_HORAS_PRAC_SEMA);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_HORAS_CIEN);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CREDITOS);
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,dtmt.");sbSql.append("DTMT_VALOR_POR_MATERIA");
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_NUMERAL);
					
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					
					sbSql.append(" ,(SELECT distinct fces.fces_id  FROM ficha_estudiante fces,ficha_matricula fcmt,comprobante_pago cmpa  ");
					sbSql.append("    where fces.FCES_ID = fcmt.FCES_ID and fcmt.fcmt_id = cmpa.fcmt_id and cmpa.cmpa_id =dtmt.cmpa_id)  as ");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" , (SELECT distinct fcmt.fcmt_fecha_matricula  FROM ficha_estudiante fces,ficha_matricula fcmt,comprobante_pago cmpa  ");
					sbSql.append(" where fces.FCES_ID = fcmt.FCES_ID and fcmt.fcmt_id = cmpa.fcmt_id and cmpa.cmpa_id =dtmt.cmpa_id)  as ");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					
					sbSql.append(" , (SELECT distinct fcmt.fcmt_id  FROM ficha_estudiante fces,ficha_matricula fcmt,comprobante_pago cmpa  ");
					sbSql.append(" where fces.FCES_ID = fcmt.FCES_ID and fcmt.fcmt_id = cmpa.fcmt_id and cmpa.cmpa_id =dtmt.cmpa_id)  as ");sbSql.append(JdbcConstantes.FCMT_ID);
					
					
					sbSql.append(" , (SELECT distinct fcmt.fcmt_valor_total  FROM ficha_estudiante fces,ficha_matricula fcmt,comprobante_pago cmpa  ");
					sbSql.append(" where fces.FCES_ID = fcmt.FCES_ID and fcmt.fcmt_id = cmpa.fcmt_id and cmpa.cmpa_id =dtmt.cmpa_id)  as ");sbSql.append(JdbcConstantes.FCMT_VALOR_TOTAL);
					
					sbSql.append(" , (select distinct rces1.RCES_estado from  RECORD_ESTUDIANTE rces1  where  rces1.mlcrpr_id = mlcrpr.mlcrpr_ID  ");
					sbSql.append(" AND rces1.FCES_ID =  ((SELECT fces.fces_id  FROM ficha_estudiante fces,ficha_matricula fcmt,comprobante_pago cmpa "); 
					sbSql.append("    where fces.FCES_ID = fcmt.FCES_ID and fcmt.fcmt_id = cmpa.fcmt_id and cmpa.cmpa_id =dtmt.cmpa_id) )) as ");sbSql.append(JdbcConstantes.RCES_ESTADO);
					
					sbSql.append(" FROM   ");
					sbSql.append(" detalle_matricula dtmt,  ");
					sbSql.append(" malla_curricular_paralelo mlcrpr,  ");
					sbSql.append(" paralelo prl,  ");
					sbSql.append(" malla_curricular_materia mlcrmt,  ");
					
					sbSql.append(" materia mtr,  ");
					sbSql.append(" NIVEL nvl,  ");
					sbSql.append(" carrera crr,  ");
					sbSql.append(" dependencia dpn,  ");
					sbSql.append(" periodo_academico prac  ");
					sbSql.append(" where  ");
					sbSql.append(" dtmt.mlcrpr_id = mlcrpr.mlcrpr_id  ");
					sbSql.append(" and mlcrpr.prl_id = prl.prl_id  ");
					sbSql.append(" and mlcrpr.mlcrmt_id = mlcrmt.mlcrmt_id  ");
					sbSql.append(" and mlcrmt.mtr_id = mtr.mtr_id  ");
					sbSql.append(" AND mlcrmt.NVL_ID = nvl.NVL_ID  ");
					
					sbSql.append(" AND crr.crr_id  = mtr.crr_id  ");
					sbSql.append(" AND crr.dpn_id  = dpn.dpn_id  ");
					sbSql.append(" AND prl.prac_id  = prac.prac_id  ");
					
					
					sbSql.append(" and dtmt.cmpa_id = ( SELECT  MAX(cmpa.cmpa_id)  "); 
					sbSql.append(" FROM  ");
					sbSql.append(" PERSONA prs  "); 
					sbSql.append("  LEFT JOIN FICHA_ESTUDIANTE fces ON prs.PRS_ID = fces.PRS_ID  ");  
					sbSql.append(" LEFT JOIN FICHA_INSCRIPCION fcin ON fcin.FCIN_ID  = fces.FCIN_ID  ");   
					sbSql.append(" LEFT JOIN CONFIGURACION_CARRERA cncr ON fcin.CNCR_ID =  cncr.CNCR_ID  "); 
					sbSql.append(" LEFT JOIN CARRERA crr ON cncr.CRR_ID =  crr.CRR_ID   ");
					sbSql.append(" LEFT JOIN DEPENDENCIA dpn ON crr.DPN_ID =  dpn.DPN_ID   ");
					sbSql.append(" LEFT JOIN FICHA_MATRICULA fcmt ON fcmt.FCES_ID =  fces.FCES_ID  "); 
					sbSql.append(" LEFT JOIN COMPROBANTE_PAGO cmpa ON cmpa.FCMT_ID =  fcmt.FCMT_ID  ");
					sbSql.append(" WHERE  ");
					sbSql.append(" prs.PRS_Identificacion  = ?  ");  
					sbSql.append(" and fcmt.fcmt_id = ? )  ");
					sbSql.append(" order by nvl.nvl_numeral , mtr.mtr_descripcion ");
					  
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					
					pstmt.setString(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idMatricula); //cargo el id de la matrícula
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoListaMatriculasXidentificacionXfcmtFull(rs));
					}
					
				} catch (SQLException e) {
					e.printStackTrace();
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por id del estudiante y por id de matrícula.
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			@Override
			public List<EstudianteJdbcDto> buscarEstudianteXIdPersonaXIdMatriculaPosgrado(int idEstudiante, int idMatricula, int idPrac) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//FICHA ESTUDIANTE
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); sbSql.append(" IS NULL THEN ");sbSql.append("'SIN CODIGO'");
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					//sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					//sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					
					
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idMatricula); //cargo el id de la matrícula
					pstmt.setInt(3, idPrac); //cargo el id del perido academico
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADto(rs));
					}
					
				} catch (SQLException e) {
					e.printStackTrace();
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					e.printStackTrace();
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por id del estudiante y por id de matrícula y por periodo academico para listar con todos los parametros de busqueda.
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
			 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXIdPersonaXIdMatriculaXidPeriodoAcademicoParaEstado(int idEstudiante, int idMatricula, int idPrac, int estadoDtmt, int estadoCambio) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//FICHA ESTUDIANTE
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					//FICHA MATRICULA
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					
					sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
					sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
					sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
											sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
											sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
											
					sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					
					sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
					sbSql.append(" AND ( ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
					sbSql.append(" AND ( ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
//					sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
											
//					sbSql.append(" AND ");
//					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_SOLICITADO_VALUE);
					sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
					if(estadoCambio != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");
						sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" = ? ");
					}
					sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
					pstmt.setInt(4, idPrac); //cargo el id del perido academico
					pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
					if(estadoCambio != GeneralesConstantes.APP_ID_BASE){
						pstmt.setInt(6, estadoCambio); //cargo el el estado cambio del detalle matricula
					}
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoAlternoUno(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
//				if(retorno == null || retorno.size()<=0){
//					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por id del estudiante y por id de matrícula y por periodo academico para listar con todos los parametros de busqueda.
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
			 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteMateriaRetiradaXIdPersonaXIdMatriculaXidPeriodoAcademicoParaEstado(int idEstudiante, int idMatricula, int idPrac, int estadoDtmt, int estadoCambio) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//FICHA ESTUDIANTE
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					//FICHA MATRICULA
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					
					sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
					sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
					sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
											sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
											sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
											
					sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					
					sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
					sbSql.append(" AND ( ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
					sbSql.append(" AND ( ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
//					sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
											
//					sbSql.append(" AND ");
//					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_SOLICITADO_VALUE);
					sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
					if(estadoCambio != GeneralesConstantes.APP_ID_BASE){
						sbSql.append(" AND ");
						sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);
						sbSql.append(" AND ");
						sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" = ? ");
					}
					sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
					pstmt.setInt(4, idPrac); //cargo el id del perido academico
					pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
					if(estadoCambio != GeneralesConstantes.APP_ID_BASE){
						pstmt.setInt(6, estadoCambio); //cargo el el estado cambio del detalle matricula
					}
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoAlternoUno(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
//				if(retorno == null || retorno.size()<=0){
//					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//				}
				return retorno;
			}
			
			
			/**ok
			 * Método que busca un estudiante por id del estudiante y por id de matrícula y por periodo academico para listar con todos los parametros de busqueda.
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
			 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXIdPersonaXIdMatriculaXidPeriodoAcademicoParaEstadoRetiroVer(int idEstudiante, int idMatricula, int idPrac, int estadoDtmt, int estadoCambio) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//FICHA ESTUDIANTE
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION);
					sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
					sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
					
					//FICHA MATRICULA
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					//MALLA CURRICULAR PARALELO
					sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
					sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
					sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
											sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
											sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
											
					sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					
//					sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
//											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//											sbSql.append(" OR ");
//											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
//					sbSql.append(" AND ( ");
//											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
//											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//											sbSql.append(" OR ");
//											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
//					sbSql.append(" AND ( ");
//											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
//											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//											sbSql.append(" OR ");
//											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
											
//					sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
											
//					sbSql.append(" AND ");
//					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_SOLICITADO_VALUE);
					sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
//					sbSql.append(" AND ");
//					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
//					if(estadoCambio != GeneralesConstantes.APP_ID_BASE){
//						sbSql.append(" AND ");
//						sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" = ? ");
//					}
					sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
					pstmt.setInt(4, idPrac); //cargo el id del perido academico
//					pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
//					if(estadoCambio != GeneralesConstantes.APP_ID_BASE){
//						pstmt.setInt(6, estadoCambio); //cargo el el estado cambio del detalle matricula
//					}
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoRetiroSol(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
//				if(retorno == null || retorno.size()<=0){
//					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//				}
				return retorno;
			}
			
			/**ok
			 * Método que busca un estudiante por id del estudiante y por id de matrícula y por periodo academico para listar con todos los parametros de busqueda.
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
			 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXIdPersonaXIdMatriculaXidPeriodoAcademicoParaEstadoRetiro(int idEstudiante, int idMatricula, int idPrac, int estadoDtmt, int estadoCambio) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//FICHA ESTUDIANTE
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
					
					//FICHA MATRICULA
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					//MALLA CURRICULAR PARALELO
					sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
					sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
					sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
											sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
											sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
											
					sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					
					sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
					sbSql.append(" AND ( ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
					sbSql.append(" AND ( ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
//					sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
											
//					sbSql.append(" AND ");
//					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_SOLICITADO_VALUE);
					sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
//					sbSql.append(" AND ");
//					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
//					if(estadoCambio != GeneralesConstantes.APP_ID_BASE){
//						sbSql.append(" AND ");
//						sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" = ? ");
//					}
					sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
					pstmt.setInt(4, idPrac); //cargo el id del perido academico
//					pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
//					if(estadoCambio != GeneralesConstantes.APP_ID_BASE){
//						pstmt.setInt(6, estadoCambio); //cargo el el estado cambio del detalle matricula
//					}
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoRetiroSol(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
//				if(retorno == null || retorno.size()<=0){
//					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//				}
				return retorno;
			}
			
			/**ok
			 * Método que busca un estudiante por id del estudiante y por id de matrícula y por periodo academico para listar estudiantes con matriculas no retiradas
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
			 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteRetiroMatriculaXprsIdXmtrIdXpracIdXdtmtEstado(int idEstudiante, int idMatricula, int idPrac, int estadoDtmt) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//FICHA ESTUDIANTE
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION);
					sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
					sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
					
					//FICHA MATRICULA
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					//MALLA CURRICULAR PARALELO
					sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
					sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
					sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
											sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
											sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
											
					sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					
					sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
					sbSql.append(" AND ( ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
					sbSql.append(" AND ( ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
//					sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
											
//					sbSql.append(" AND ");
//					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_SOLICITADO_VALUE);
					sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
					
//					sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" not in ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);
//										  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" is null ) ");
					
					sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" not in ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);
										  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" is null ) ");
					sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" not in ( ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_APROBADO_VALUE);
										  sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_NEGADO_VALUE);sbSql.append(" ) ");
										  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" is null ) ");
					sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
					pstmt.setInt(4, idPrac); //cargo el id del perido academico
					pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoRetiroSol(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
//				if(retorno == null || retorno.size()<=0){
//					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//				}
				return retorno;
			}
			
			
			/**ok
			 * Método que busca un estudiante por id del estudiante y por id de matrícula y por periodo academico para listar estudiantes con matriculas no retiradas y con control de tercera matrícula
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
			 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteRetiroMatriculaXprsIdXmtrIdXpracIdXdtmtEstadoCtrlTerceraMatricula(int idEstudiante, int idMatricula, int idPrac, int estadoDtmt) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					
					sbSql.append(" (select ");
					sbSql.append(" mtr2.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" from ");
					sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr2 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt2 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr2 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt2 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa2 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt2 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces2 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs2 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl2 ");
					sbSql.append(" where ");
					sbSql.append(" prs2.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ");sbSql.append(" fces2.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
					sbSql.append(" and ");sbSql.append(" fces2.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt2.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
					sbSql.append(" and ");sbSql.append(" fcmt2.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa2.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" and ");sbSql.append(" cmpa2.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt2.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" and ");sbSql.append(" mtr2.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");sbSql.append(" mlcrmt2.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" and ");sbSql.append(" mlcrmt2.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrpr2.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
					sbSql.append(" and ");sbSql.append(" mlcrpr2.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");sbSql.append(" dtmt2.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);
					sbSql.append(" and ");sbSql.append(" prl2.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr2.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" and ");sbSql.append(" dtmt2.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_INACTIVO_VALUE);
					sbSql.append(" and (( ");sbSql.append(" dtmt2.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);
					sbSql.append(" and ");sbSql.append(" dtmt2.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_APROBADO_VALUE);
					sbSql.append(" ) or ( ");sbSql.append(" dtmt2.");sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_HISTORICO_RETIRO_SOLICITADO_VALUE);
					sbSql.append(" and ");sbSql.append(" dtmt2.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_APROBADO_VALUE);sbSql.append(" )) ");
					sbSql.append(" and ");sbSql.append(" dtmt2.");sbSql.append(JdbcConstantes.DTMT_NUMERO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.TERCERA_MATRICULA_VALUE);
					sbSql.append(" and ");sbSql.append(" prs2.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" and ");sbSql.append(" mtr2.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" ) as retirotercera ");
					sbSql.append(" , ");
					
					//FICHA ESTUDIANTE
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION);
					sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
					sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
					
					//FICHA MATRICULA
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					//MALLA CURRICULAR PARALELO
					sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
					sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
					sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
											sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
											sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
											
					sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					
					sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
					sbSql.append(" AND ( ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
					sbSql.append(" AND ( ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
											sbSql.append(" OR ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
//					sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
											
//					sbSql.append(" AND ");
//					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_SOLICITADO_VALUE);
					sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
					
//					sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" not in ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);
//										  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" is null ) ");
					
					sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" not in ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);
										  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" is null ) ");
					sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" not in ( ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_APROBADO_VALUE);
										  sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_NEGADO_VALUE);sbSql.append(" ) ");
										  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" is null ) ");
					sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(3, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(4, idMatricula); //cargo el id de la matrícula
					pstmt.setInt(5, idPrac); //cargo el id del perido academico
					pstmt.setInt(6, estadoDtmt); //cargo el el estado del detalle matricula
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoRetiroSolCtrlSolicitudTerceraMatr(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
//				if(retorno == null || retorno.size()<=0){
//					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//				}
				return retorno;
			}
			
			
			/**ok
			 * Método que busca un estudiante por id del estudiante y por id de matrícula y por periodo academico para listar estudiantes con matriculas no retiradas
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
			 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteValidarRetiroMatriculaXprsIdXmtrIdXpracIdXdtmtEstado(int idEstudiante, int idMatricula, int idPrac, int estadoDtmt) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//FICHA ESTUDIANTE
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
					
					//FICHA MATRICULA
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					//MALLA CURRICULAR PARALELO
					sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
					sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
					sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
											sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
											sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
											
					sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					
					//validación con notas para retiros
											
//					sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
//											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//											sbSql.append(" OR ");
//											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
//					sbSql.append(" AND ( ");
//											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
//											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//											sbSql.append(" OR ");
//											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
//					sbSql.append(" AND ( ");
//											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
//											sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//											sbSql.append(" OR ");
//											sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
											
											
//					sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
					sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
											
//					sbSql.append(" AND ");
//					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_SOLICITADO_VALUE);
					sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
					
//					sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);sbSql.append(" ) ");
					
					sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);sbSql.append(" ) ");
					sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" not in ( ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_APROBADO_VALUE);
										  sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_NEGADO_VALUE);sbSql.append(" ) ");
										  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" is null ) ");
					sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
					pstmt.setInt(4, idPrac); //cargo el id del perido academico
					pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoRetiroSol(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
//				if(retorno == null || retorno.size()<=0){
//					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por id del estudiante y por id de matrícula para cer las materias de una matricula
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXIdPersonaXIdMatriculaNuevo(int idEstudiante, int idMatricula) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT ");
					//FICHA ESTUDIANTE
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ");				
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ");
					sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ");			
					sbSql.append(" WHERE ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
					sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
					sbSql.append(" AND cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" AND ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);		
					sbSql.append(" AND ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);		
					sbSql.append(" AND ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
					sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);					
					sbSql.append(" AND ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);	
					sbSql.append(" AND ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);	
					sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					
					//FIN QUERY
					
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idMatricula); //cargo el id de la matrícula
					rs = pstmt.executeQuery();
					
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesIdPersonaXIdMatriculaNuevo(rs));
					}
					
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por id de matrícula.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXIdMatricula(int idMatricula) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//FICHA ESTUDIANTE
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					//FICHA MATRICULA
					sbSql.append(" ,fcmt." );sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt." );sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
				
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					//sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					//sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					//FIN QUERY
					
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idMatricula); //cargo el id de la matrícula
					rs = pstmt.executeQuery();
					
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADto(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.estudiante.idMatricula.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.idMatricula.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.idMatricula.no.result.exception")));
				}
				return retorno;
			}
			
			
			public List<EstudianteJdbcDto> buscarEstudianteXIdentificacionXNotas(String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT ");
					//PERIODO ACADEMICO
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_ID);
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					
					//FICHA MATRICULA
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); sbSql.append(" IS NULL THEN ");sbSql.append("'SIN CODIGO'");
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//DETALLE MATRICULA
					sbSql.append(" ,rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);
//					sbSql.append(" ,CASE rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);
//					sbSql.append(" WHEN ");sbSql.append(0);sbSql.append(" THEN ");sbSql.append(" 'MATRICULADO' ");
//					sbSql.append(" WHEN ");sbSql.append(1);sbSql.append(" THEN ");sbSql.append(" 'APROBADO' ");
//					sbSql.append(" WHEN ");sbSql.append(2);sbSql.append(" THEN ");sbSql.append(" 'REPROBADO' ");
//					sbSql.append(" ELSE ");sbSql.append(" 'ERROR' ");sbSql.append(" END AS ");sbSql.append(JdbcConstantes.RCES_ESTADO);
					//CALIFICACION
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_NOTA1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_NOTA1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_NOTA1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_NOTA2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_NOTA2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_NOTA2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_NOTAS);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_NOTAS);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PROMEDIO_NOTAS);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_SUPLETORIO);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_SUPLETORIO);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_SUPLETORIO);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_TOTAL);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_TOTAL);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_TOTAL);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);
					
					
					sbSql.append(" , dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					
					sbSql.append(" FROM ");
					
					sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt , ");
					sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ,  ");
					sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt , ");
									
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);
					sbSql.append(" fcin ON  fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);
					sbSql.append(" prs ON  fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces ON  fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CALIFICACION);
					sbSql.append(" clf ON  rces.");sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" = clf.");sbSql.append(JdbcConstantes.CLF_RCES_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);
					sbSql.append(" mlcrpr ON  rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);
					sbSql.append(" mlcrmt ON  mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);
					sbSql.append(" mtr ON  mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = mtr.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);
					sbSql.append(" prl ON  mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = prl.");sbSql.append(JdbcConstantes.PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);
					sbSql.append(" nvl ON  mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);
					sbSql.append(" prac ON  prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = prl.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);
					sbSql.append(" cncr ON  fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);
					sbSql.append(" crr ON  cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);
					sbSql.append(" dpn ON  crr.");sbSql.append(JdbcConstantes.DPN_ID);sbSql.append(" = dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" WHERE ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" = ? ");
					
					sbSql.append(" and fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = fces.");sbSql.append(JdbcConstantes.FCES_ID); 
					sbSql.append(" and fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" and dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);
					sbSql.append(" and dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
				sbSql.append(" ORDER BY ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_NUMERAL);
				sbSql.append(" , mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
				//FIN QUERY
				con = ds.getConnection();
				pstmt = con.prepareStatement(sbSql.toString());
				
				
				pstmt.setString(1, identificacion); //cargo el periodo academico
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarNotasResultSetADto(rs));
					}
					
				} catch (SQLException e) {
					e.printStackTrace();
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					e.printStackTrace();
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.no.result.exception")));
				}
				return retorno;
			}
			
			
			/**
			 * Método que busca un estudiante por id del estudiante y por id de matrícula y por periodo academico.
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @param idPrac - id del periodo academico seleccionado para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXIdentificacionXProemdio(String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					
					sbSql.append(" TRUNC (avg(clf.");sbSql.append(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);sbSql.append("),2)/2 as ");sbSql.append("notaProme");
					
					sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ");
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);
					sbSql.append(" mlcrmt ON  mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = mlcrmt.");sbSql.append(JdbcConstantes.MTR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);
					sbSql.append(" mlcrpr ON  mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = mlcrpr.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);
					sbSql.append(" prl ON  prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = mlcrpr.");sbSql.append(JdbcConstantes.PRL_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces ON  rces.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CALIFICACION);
					sbSql.append(" clf ON  clf.");sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" = rces.");sbSql.append(JdbcConstantes.RCES_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);
					sbSql.append(" fces ON  fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = rces.");sbSql.append(JdbcConstantes.FCES_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);
					sbSql.append(" prs ON  prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = fces.");sbSql.append(JdbcConstantes.PRS_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);
					sbSql.append(" mlcr ON  mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = mlcrmt.");sbSql.append(JdbcConstantes.MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);
					sbSql.append(" crr ON  crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = mlcr.");sbSql.append(JdbcConstantes.CRR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);
					sbSql.append(" dpn ON  crr.");sbSql.append(JdbcConstantes.DPN_ID);sbSql.append(" = dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);
					sbSql.append(" prac ON  prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = prl.");sbSql.append(JdbcConstantes.PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);
					sbSql.append(" fcmt ON  fcmt.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces.");sbSql.append(JdbcConstantes.FCES_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);
					sbSql.append(" nvl ON  nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = mlcrmt.");sbSql.append(JdbcConstantes.NVL_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);
					sbSql.append(" cmpa ON  cmpa.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					
					sbSql.append(" WHERE ");
					
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" = ? ");
					
				
				sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
				//FIN QUERY
				con = ds.getConnection();
				pstmt = con.prepareStatement(sbSql.toString());
				
				pstmt.setString(1, identificacion); //cargo el periodo academico
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarPromeResultSetADto(rs));
					}
					
				} catch (SQLException e) {
					e.printStackTrace();
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					e.printStackTrace();
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por id de matrícula.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteNivelacion() throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//PERSONA
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
//					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
//					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
//					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
//					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
//					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
//					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
//					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
//					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
//					//CARRERA
//					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
//					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
//					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,crr1.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" as crrIdArea");
//					sbSql.append(" ,crr1.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(" as crrDescripcionArea");
////					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					//DEPENDENCIA
//					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
//					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
////					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					//PERIODO ACADÉMICO
//					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
//					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
//					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
//					//PERIODO ACADÉMICO
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_MATRICULADO);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_ESTADO);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_PRAC_ID);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);
//					sbSql.append(" , CASE WHEN fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
//					sbSql.append(" ELSE fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCIN_CARRERA);
//					sbSql.append(" , CASE WHEN fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
//					sbSql.append(" ELSE fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_TIPO);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_USRO_ID);
//					sbSql.append(" , CASE WHEN fcin.");sbSql.append(JdbcConstantes.FCIN_NOTA_ENES); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
//					sbSql.append(" ELSE fcin.");sbSql.append(JdbcConstantes.FCIN_NOTA_ENES); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCIN_NOTA_ENES);
//					sbSql.append(" , CASE WHEN fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_AREA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
//					sbSql.append(" ELSE fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_AREA); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCIN_CNCR_AREA);
//					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ID);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin , ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces , ");
					
					sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs , ");
				

					sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr , ");
					sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr1 , ");

					sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn , ");
					sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr , ");
					sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac,  ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt,  ");
					sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces  ");
					sbSql.append(" WHERE ");
					
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_TIPO);sbSql.append(" = ");sbSql.append(FichaInscripcionConstantes.TIPO_INSCRITO_NIVELACION_VALUE);
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);sbSql.append(" is not null ");
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA);sbSql.append(" is not null ");
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_ID);sbSql.append(" = fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);
					sbSql.append(" and fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
					sbSql.append(" and prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);sbSql.append(" = crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" and crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" and prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" and crr1.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);
					sbSql.append(" and fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					sbSql.append(" and prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);sbSql.append(" = ");sbSql.append(PeriodoAcademicoConstantes.ESTADO_EN_CIERRE_VALUE);
					sbSql.append(" and rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_APROBADO_VALUE);
					sbSql.append(" and prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" not in ( ");
					sbSql.append(" select prs.prs_id from persona prs, ficha_estudiante fces, record_estudiante rces "
							+ " , malla_curricular_paralelo mlcrpr, paralelo prl where rces_estado=");
					sbSql.append(RecordEstudianteConstantes.ESTADO_REPROBADO_VALUE);
					sbSql.append("  and prs.prs_id=fces.prs_id and fces.fces_id=rces.fces_id and rces.mlcrpr_id=mlcrpr.mlcrpr_id "
							+ " and prl.prl_id=mlcrpr.prl_id and prl.prac_id=350)");
					
					
					
//					sbSql.append(" and prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" = '");sbSql.append("1727149104");sbSql.append("'");
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);sbSql.append(" <> 64 "); //Se  deshabilitó por migración a CIVIL (R)
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_OBSERVACION);sbSql.append(" NOT LIKE 'MIGRADO A SAU' ");
					sbSql.append(" and ROWNUM <500 ");
					sbSql.append(" ORDER BY prs_primer_apellido, prs_segundo_apellido ");
					//FIN QUERY
//					System.out.println(sbSql);
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoListaEstudiantesNivelacion(rs));
					}
				} catch (SQLException e) {
					e.printStackTrace();
//					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.estudiante.idMatricula.sql.exception")));
				} catch (Exception e) {
					e.printStackTrace();
//					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.idMatricula.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.idMatricula.no.result.exception")));
				}
				return retorno;
			}
			
			@Override
			public List<EstudianteJdbcDto> buscarEstudianteNivelacion1(String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//PERSONA
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
//					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
//					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
//					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
//					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
//					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
//					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
//					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
//					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
//					//CARRERA
//					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
//					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
//					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,crr1.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" as crrIdArea");
//					sbSql.append(" ,crr1.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(" as crrDescripcionArea");
////					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					//DEPENDENCIA
//					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
//					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
////					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					//PERIODO ACADÉMICO
//					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
//					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
//					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
//					//PERIODO ACADÉMICO
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_MATRICULADO);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_ESTADO);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_PRAC_ID);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);
//					sbSql.append(" , CASE WHEN fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
//					sbSql.append(" ELSE fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCIN_CARRERA);
//					sbSql.append(" , CASE WHEN fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
//					sbSql.append(" ELSE fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_TIPO);
//					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_USRO_ID);
//					sbSql.append(" , CASE WHEN fcin.");sbSql.append(JdbcConstantes.FCIN_NOTA_ENES); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
//					sbSql.append(" ELSE fcin.");sbSql.append(JdbcConstantes.FCIN_NOTA_ENES); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCIN_NOTA_ENES);
//					sbSql.append(" , CASE WHEN fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_AREA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
//					sbSql.append(" ELSE fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_AREA); 
//					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCIN_CNCR_AREA);
//					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ID);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin , ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces , ");
					
					sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs , ");
				

					sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr , ");
					sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr1 , ");

					sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn , ");
					sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr , ");
					sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac,  ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt,  ");
					sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces  ");
					sbSql.append(" WHERE ");
					
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_TIPO);sbSql.append(" = ");sbSql.append(FichaInscripcionConstantes.TIPO_INSCRITO_NIVELACION_VALUE);
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);sbSql.append(" is not null ");
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA);sbSql.append(" is not null ");
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_ID);sbSql.append(" = fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);
					sbSql.append(" and fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
					sbSql.append(" and prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);sbSql.append(" = crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" and crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" and prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" and crr1.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);
					sbSql.append(" and fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					sbSql.append(" and prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);sbSql.append(" = ");sbSql.append(PeriodoAcademicoConstantes.ESTADO_EN_CIERRE_VALUE);
					sbSql.append(" and rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_APROBADO_VALUE);
					sbSql.append(" and prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" not in ( ");
					sbSql.append(" select prs.prs_id from persona prs, ficha_estudiante fces, record_estudiante rces "
							+ " , malla_curricular_paralelo mlcrpr, paralelo prl where rces_estado=");
					sbSql.append(RecordEstudianteConstantes.ESTADO_REPROBADO_VALUE);
					sbSql.append("  and prs.prs_id=fces.prs_id and fces.fces_id=rces.fces_id and rces.mlcrpr_id=mlcrpr.mlcrpr_id "
							+ " and prl.prl_id=mlcrpr.prl_id and prl.prac_id=(select prac_id from periodo_academico where prac_estado = 2))");
					
					
					
					sbSql.append(" and prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE '%");sbSql.append(identificacion);sbSql.append("%'");
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);sbSql.append(" <> 64 "); //Se  deshabilitó por migración a CIVIL (R)
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_OBSERVACION);sbSql.append(" NOT LIKE 'MIGRADO A SAU' ");
					sbSql.append(" and ROWNUM <500 ");
					sbSql.append(" ORDER BY prs_primer_apellido, prs_segundo_apellido ");
					//FIN QUERY
//					System.out.println(sbSql);
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoListaEstudiantesNivelacion(rs));
					}
				} catch (SQLException e) {
//					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.estudiante.idMatricula.sql.exception")));
				} catch (Exception e) {
//					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.idMatricula.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.idMatricula.no.result.exception")));
				}
				return retorno;
			}
			
			@Override
			public List<EstudianteJdbcDto> buscarEstudianteReprobadoNivelacion(String identificacion) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//PERSONA
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_AREA);
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin , ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces , ");
					
					sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs , ");
				

					sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr , ");
					sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr1 , ");

					sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn , ");
					sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr , ");
					sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac,  ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt  ");
//					sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces  ");
					sbSql.append(" WHERE ");
					
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_TIPO);sbSql.append(" = ");sbSql.append(FichaInscripcionConstantes.TIPO_INSCRITO_NIVELACION_VALUE);
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);sbSql.append(" is not null ");
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA);sbSql.append(" is not null ");
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_ID);sbSql.append(" = fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);
					sbSql.append(" and fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
					sbSql.append(" and prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);sbSql.append(" = crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" and crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" and prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" and crr1.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);
//					sbSql.append(" and fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					sbSql.append(" and fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);sbSql.append(" = prac.");sbSql.append(JdbcConstantes.PRAC_ID);
//					sbSql.append(" and prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);sbSql.append(" = ");sbSql.append(PeriodoAcademicoConstantes.ESTADO_EN_CIERRE_VALUE);
//					sbSql.append(" and rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_REPROBADO_VALUE);
					
					if(identificacion.equals(GeneralesConstantes.APP_ID_BASE.toString())){
						sbSql.append(" and prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE '%%' ");
					}else{
						sbSql.append(" and prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE '%");sbSql.append(identificacion);sbSql.append("%'");	
					}
					
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);sbSql.append(" <> 64 "); //Se  deshabilitó por migración a CIVIL (R)
//					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_OBSERVACION);sbSql.append(" NOT LIKE 'MIGRADO A SAU' ");
//					sbSql.append(" and ROWNUM <500 ");
					sbSql.append(" ORDER BY prs_primer_apellido, prs_segundo_apellido ");
					//FIN QUERY
//					System.out.println(sbSql);
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoListaEstudiantesNivelacionTercera(rs));
					}
				} catch (SQLException e) {
					e.printStackTrace();
//					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.estudiante.idMatricula.sql.exception")));
				} catch (Exception e) {
					e.printStackTrace();
//					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.idMatricula.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.idMatricula.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por id de matrícula.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteNivelacionMigrarSIAC() throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT ");
					//PERSONA
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PERIODO ACADÉMICO
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_MATRICULADO);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_ESTADO);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_PRAC_ID);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_TIPO);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_USRO_ID);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_NOTA_ENES);
					sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_AREA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ID);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
				
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);

					sbSql.append(" WHERE ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_TIPO);sbSql.append(" = ");sbSql.append(FichaInscripcionConstantes.TIPO_INSCRITO_NIVELACION_VALUE);
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);sbSql.append(" is null ");
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA);sbSql.append(" is not null ");
					sbSql.append(" and fcin.");sbSql.append(JdbcConstantes.FCIN_PRAC_ID);sbSql.append(" = 1 ");
//					sbSql.append(" SELECT PRAC_ID FROM PERIODO_ACADEMICO WHERE PRAC_ESTADO =  ");
//					sbSql.append(PeriodoAcademicoConstantes.ESTADO_EN_CIERRE_VALUE);sbSql.append(" ) ");
					//FIN QUERY
					
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					rs = pstmt.executeQuery();
					
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoListaEstudiantesNivelacion(rs));
					}
				} catch (SQLException e) {
//					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.estudiante.idMatricula.sql.exception")));
				} catch (Exception e) {
//					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.idMatricula.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.idMatricula.no.result.exception")));
				}
				return retorno;
			}
			
			
			/**
			 * Método que busca un estudiante por id del estudiante y por id de matrícula.
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXIdPersonaXIdMatricula(int idEstudiante, int idMatricula, int idPrac) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//FICHA ESTUDIANTE
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); sbSql.append(" IS NULL THEN ");sbSql.append("'SIN CODIGO'");
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					//sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					//sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					
					
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idMatricula); //cargo el id de la matrícula
					pstmt.setInt(3, idPrac); //cargo el id del perido academico
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADto(rs));
					}
					
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por id del estudiante y por id de matrícula.
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
			 * @return lista del estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXIdPersonaXIdMatriculaRep(int idEstudiante, int idMatricula, int idPrac) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//FICHA ESTUDIANTE
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
					sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
					sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//ETNIA
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
					sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
					//UBICACIÓN
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
					//CONFIGURACIÓN CARRERA
					sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//					sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//INSTITUCIÓN ACADÉMICA
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
					sbSql.append(" END AS universidadid ");
					sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
					sbSql.append(" END AS universidaddesc ");
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//MATERIA
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); sbSql.append(" IS NULL THEN ");sbSql.append("'SIN CODIGO'");
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//PERIODO ACADÉMICO
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					//RECORD ESTUDIANTE
					sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
					sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
					sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
					//DETALLE MATRICULA
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
					sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
					sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
					//MALLA CURRICULAR PARALELO
					sbSql.append(" ,mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);
					
					sbSql.append(" WHERE ");
					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" not in ( ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_INSCRITO_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_ANULACION_MATRICULA_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_FORTUITAS_VALUE);sbSql.append(" ) ");
					
					sbSql.append(" AND ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					
					sbSql.append(" AND ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
					sbSql.append(" AND ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
					sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					
					
					pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
					pstmt.setInt(2, idMatricula); //cargo el id de la matrícula
					pstmt.setInt(3, idPrac); //cargo el id del perido academico
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoRep(rs));
					}
					
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.no.result.exception")));
				}
				return retorno;
			}

			
			
			/**
			 * Método que busca un estudiante por nivel, periodo, carrera, identificacion y presentar materias con notas.
			 * @param identificacion - identificacion del estudiantes.
			 * @param matriculaId - id de la mtricula seleccionada para visualizar los datos.
			 * @param periodoId - id de  periodo academico seleccionado para visualizar los datos.
			 * @param idCarrera - id de carrera seleccionado para visualizar los datos.
			 * @return lista de materias con notas.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteNotasXIdentificacionXMatriculaXPeriodoXCarrera(String identificacion, int matriculaId, int periodoId, int carreraId) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
					
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//PERIODO ACADEMICO
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_ID);
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					
					//FICHA MATRICULA
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);
					
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); sbSql.append(" IS NULL THEN ");sbSql.append("'SIN CODIGO'");
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//DETALLE MATRICULA
					sbSql.append(" ,rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);
//				
					//CALIFICACION
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_NOTA1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_NOTA1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_NOTA1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_NOTA2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_NOTA2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_NOTA2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_NOTAS);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_NOTAS);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PROMEDIO_NOTAS);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_SUPLETORIO);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_SUPLETORIO);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_SUPLETORIO);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_TOTAL);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_TOTAL);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_TOTAL);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);
					//SELECT ANIDADO
					sbSql.append(", (SELECT ");			
					sbSql.append(" dtmtAux.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmtAux ");			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrprAux ");
					sbSql.append(" ON ");sbSql.append(" dtmtAux.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrprAux.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpaAux ");
					sbSql.append(" ON ");sbSql.append(" dtmtAux.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" = ");sbSql.append(" cmpaAux.");sbSql.append(JdbcConstantes.CMPA_ID);
					sbSql.append(" WHERE ");	
					sbSql.append(" cmpaAux.");sbSql.append(JdbcConstantes.CMPA_ID);
					sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);
					sbSql.append(" AND ");sbSql.append(" mlcrprAux.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(") as ");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					
			    	sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ");
					sbSql.append(" ON ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ");
					sbSql.append(" ON ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ");
					sbSql.append(" ON ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);
					sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ");
					sbSql.append(" ON ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CALIFICACION);sbSql.append(" clf ");
					sbSql.append(" ON ");sbSql.append(" clf.");sbSql.append(JdbcConstantes.CLF_RCES_ID);
					sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" ON ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ");
					sbSql.append(" ON ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ");
					sbSql.append(" ON ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ");
					sbSql.append(" ON ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ");
					sbSql.append(" ON ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ");
					sbSql.append(" ON ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
					sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ");
					sbSql.append(" ON ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);
					
							
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ");
					sbSql.append(" ON ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ");
					sbSql.append(" ON ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);
					
					sbSql.append(" WHERE ");	
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" = ? ");
					sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" = ? ");
					sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" = ? ");
					sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" = ? ");
					sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" not in (-1, 3, 10, 12) ");
					sbSql.append(" ORDER BY ");sbSql.append("mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setString(1, identificacion);
					pstmt.setInt(2, matriculaId);
					pstmt.setInt(3, periodoId);
					pstmt.setInt(4, carreraId);
					
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtobuscarEstudianteNotasXIdentificacionXMatriculaXPeriodoXCarrera(rs));
					}
					
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.notas.por.nivel.periodo.carrera.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.notas.por.nivel.periodo.carrera.identificacion.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.notas.por.nivel.periodo.carrera.identificacion.no.result.exception")));
				}
				return retorno;
			}
			
			@Override
			public List<EstudianteJdbcDto> buscarEstudianteNotasXIdentificacionXMatriculaXPeriodoXCarreraPosgrado(String identificacion, int matriculaId, int periodoId, int carreraId) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					//PERIODO ACADEMICO
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
					//PARALELO
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_ID);
					sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					
					//FICHA MATRICULA
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);
					
					//DEPENDENCIA
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					//CARRERA
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
					sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
					//MATERIA
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); sbSql.append(" IS NULL THEN ");sbSql.append("'SIN CODIGO'");
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_CODIGO);
					sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
					sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
					//NIVEL
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					//PERSONA
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
					sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
					//DETALLE MATRICULA
					sbSql.append(" ,rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);
//				
					//CALIFICACION
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_NOTA1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_NOTA1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_NOTA1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_NOTA2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_NOTA2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_NOTA2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_NOTAS);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PROMEDIO_NOTAS);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PROMEDIO_NOTAS);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_SUPLETORIO);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_SUPLETORIO);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_SUPLETORIO);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_TOTAL);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_TOTAL);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_ASISTENCIA_TOTAL);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION1);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION1);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION1);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION2);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION2);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_PARAM_RECUPERACION2);
					sbSql.append(" ,CASE WHEN clf.");sbSql.append(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);sbSql.append(" IS NULL THEN ");sbSql.append(-99);
					sbSql.append(" ELSE clf.");sbSql.append(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);
					//SELECT ANIDADO
					sbSql.append(", (SELECT ");			
					sbSql.append(" dtmtAux.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmtAux ");			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrprAux ");
					sbSql.append(" ON ");sbSql.append(" dtmtAux.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrprAux.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpaAux ");
					sbSql.append(" ON ");sbSql.append(" dtmtAux.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" = ");sbSql.append(" cmpaAux.");sbSql.append(JdbcConstantes.CMPA_ID);
					sbSql.append(" WHERE ");	
					sbSql.append(" cmpaAux.");sbSql.append(JdbcConstantes.CMPA_ID);
					sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);
					sbSql.append(" AND ");sbSql.append(" mlcrprAux.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(") as ");sbSql.append(JdbcConstantes.DTMT_NUMERO);
					
			    	sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ");
					sbSql.append(" ON ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ");
					sbSql.append(" ON ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ");
					sbSql.append(" ON ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);
					sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ");
					sbSql.append(" ON ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CALIFICACION);sbSql.append(" clf ");
					sbSql.append(" ON ");sbSql.append(" clf.");sbSql.append(JdbcConstantes.CLF_RCES_ID);
					sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" ON ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ");
					sbSql.append(" ON ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ");
					sbSql.append(" ON ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);
					sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ");
					sbSql.append(" ON ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ");
					sbSql.append(" ON ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ");
					sbSql.append(" ON ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
					sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ");
					sbSql.append(" ON ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);
					sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);
					
							
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ");
					sbSql.append(" ON ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ");
					sbSql.append(" ON ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);
					
					sbSql.append(" WHERE ");	
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
					sbSql.append(" = ? ");
//					sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
//					sbSql.append(" = ? ");
//					sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
//					sbSql.append(" = ? ");
					sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" = ? ");
					sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" not in (-1, 3, 10, 12) ");
					sbSql.append(" ORDER BY nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(",mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setString(1, identificacion);
//					pstmt.setInt(2, matriculaId);
//					pstmt.setInt(3, periodoId);
					pstmt.setInt(2, carreraId);
					
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtobuscarEstudianteNotasXIdentificacionXMatriculaXPeriodoXCarrera(rs));
					}
					
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.notas.por.nivel.periodo.carrera.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.notas.por.nivel.periodo.carrera.identificacion.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.notas.por.nivel.periodo.carrera.identificacion.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por periodo, carrera, apellido paterno, identificacion.
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param identificacion -identificacion del estudiante a buscar.
			 * @param apellidoPaterno - apellido paterno del estudiante a buscar
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXCarreraXIdentificacionxApellido(int idPeriodo, int idCarrera, String identificacion, String apellidoPaterno) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(", ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS paisdesc");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");
									
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" WHERE ");
					
//						sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
//						sbSql.append(" AND ");
						sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
					
					    sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");
					
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
//					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(1, idCarrera); //cargo el id carrera
					pstmt.setString(2, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
					pstmt.setString(3, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivel(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			
			/**
			 * Método que busca un estudiante por periodo, carrera, apellido paterno, identificacion.
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param identificacion -identificacion del estudiante a buscar.
			 * @param apellidoPaterno - apellido paterno del estudiante a buscar
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			@Override
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXCarreraXIdentificacionxApellidoPagados(int idPeriodo, int idCarrera, String identificacion, String apellidoPaterno) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(", ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS paisdesc");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");
									
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
								
					sbSql.append(" WHERE ");
					
//						sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
//						sbSql.append(" AND ");
						sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
					
					    sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");
					
					    sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
					    
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
//					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(1, idCarrera); //cargo el id carrera
					pstmt.setString(2, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
					pstmt.setString(3, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivel(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por periodo, carrera, apellido paterno, identificacion.
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param identificacion -identificacion del estudiante a buscar.
			 * @param apellidoPaterno - apellido paterno del estudiante a buscar
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXCarreraXIdentificacionxApellidoAux(int idPeriodo, int idCarrera, String identificacion, String apellidoPaterno) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS paisdesc");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");
									
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" WHERE ");
					
//						sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
//						sbSql.append(" AND ");
						sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
					
					    sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");
					
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
//					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(1, idCarrera); //cargo el id carrera
					pstmt.setString(2, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
					pstmt.setString(3, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelAux(rs));
						
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por periodo, carrera, apellido paterno, identificacion.
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param identificacion -identificacion del estudiante a buscar.
			 * @param apellidoPaterno - apellido paterno del estudiante a buscar
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			@Override
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXCarreraXIdentificacionxApellidoAuxPagados(int idPeriodo, int idCarrera, String identificacion, String apellidoPaterno) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
					
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS paisdesc");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");
									
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
								
					sbSql.append(" WHERE ");
					
//						sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
//						sbSql.append(" AND ");
						sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
					
					    sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");
//					    sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
					
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
//					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(1, idCarrera); //cargo el id carrera
					pstmt.setString(2, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
					pstmt.setString(3, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelAux(rs));
						
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			
			/**
			 * Método que busca un estudiante por carrera, apellido paterno, identificacion.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idNivel -nivel en el que se requiere buscar.
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXCarreraXNivel(int idPeriodo, int idCarrera, int idNivel) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
										
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					
					sbSql.append(" , ( select ubc3.ubc_descripcion from ubicacion ubc1, ubicacion ubc2, ubicacion ubc3 where ubc1.ubc_sub_id = ubc2.ubc_id and ubc2.ubc_sub_id = ubc3.ubc_id  and ubc1.ubc_id = ubcp.ubc_id) as paisdesc ");
					
//					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
//					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
//					sbSql.append(" END AS paisdesc");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");
									
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces, ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					
//								sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" WHERE ");
					
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
					sbSql.append(" AND ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" not in (-1,3,10,12) ");
					
					sbSql.append(" AND ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					
						sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
//						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(" = ? ");
						
											
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(2, idCarrera); //cargo el id carrera
					pstmt.setInt(3, idNivel); //cargo el id nivel
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoxCarreraxNivel(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * Método que busca un estudiante por carrera, apellido paterno, identificacion.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idNivel -nivel en el que se requiere buscar.
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXCarreraXNivelXIdentificacionXApellido(int idPeriodo, int idCarrera, int idNivel, String identificacion, String apellidoPaterno) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					
					
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS paisdesc");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");
									
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" WHERE ");
					
						sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					
						sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
//						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(" = ? ");
												
						sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
//					
					    sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");
					
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(2, idCarrera); //cargo el id carrera
					pstmt.setInt(3, idNivel); //cargo el id nivel
					pstmt.setString(4, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
					pstmt.setString(5, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoxCarreraxNivel(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			
			/**
			 * Método que busca un estudiante por carrera, apellido paterno, identificacion.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idNivel -nivel en el que se requiere buscar.
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			@Override
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXCarreraXNivelXIdentificacionXApellidoPagados(int idPeriodo, int idCarrera, int idNivel, String identificacion, String apellidoPaterno) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
					
					
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS paisdesc");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");
									
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);			
					sbSql.append(" WHERE ");
					
						sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					
						sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" not in (-1,3,10,12) ");//sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
						
//						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(" = ? ");
												
						sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
//					
					    sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");
					
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(2, idCarrera); //cargo el id carrera
					pstmt.setInt(3, idNivel); //cargo el id nivel
					pstmt.setString(4, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
					pstmt.setString(5, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoxCarreraxNivel(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			@Override
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXCarreraXIdentificacionXApellidoPosgrado(int idPeriodo, int idCarrera, String identificacion, String apellidoPaterno) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
//					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", ");
//					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
//					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
//					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//					sbSql.append(", ");
//					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
//					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
//					sbSql.append(" , nvl.");sbSql.append(JdbcConstantes.NVL_ID);
				 
//					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
//					sbSql.append(" AS paisid ");
//					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
//					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
//					sbSql.append(" END AS paisdesc");
					
//					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
//					sbSql.append(" AS cantonid ");
//					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
//					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
//					sbSql.append(" END AS cantondesc");
									
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);			
					sbSql.append(" WHERE ");
					
						sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					
						sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" not in (-1,3,10,12) ");//sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
						
//						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
												
						sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
//					
					    sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");
					
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(2, idCarrera); //cargo el id carrera
					pstmt.setString(3, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
					pstmt.setString(4, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoxCarreraxNivelPosgrado(rs));
					}
				} catch (SQLException e) {
					e.printStackTrace();
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					e.printStackTrace();
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
			/**
			 * MQ:Método que busca un estudiante por periodo, carrera, nivel, paralelo, identificacion, apellidoPaterno
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param idNivel -nivel en el que se requiere buscar.
			 * @param idParalelo -paralelo en que se requiere buscar.
			 * @param identifiacion -identificacion  del estudiante a buscar.
			 * @param apellidoPaterno - apellidoPaterno del estudiante a buscar.
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodocarreraXNivelxParaleloxIdentificacionXApellido(int idPeriodo, int idCarrera, int idNivel, int idParalelo, String identificacion, String apellidoPaterno) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
				    sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", "); 
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(", ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					
					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS paisdesc");
					
					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");
					
					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
								sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
				    sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
								sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
								sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
						sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
								sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
								sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
								sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
								sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
								sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
								sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
								sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
								sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
								sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
								
					sbSql.append(" WHERE ");
					
						sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					
						sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
						
						sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
						
						if(idParalelo != -99){
							sbSql.append(" AND ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ? ");
						}
						sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");
				
					    sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");
					
					sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(2, idCarrera); //cargo el id carrera
					pstmt.setInt(3, idNivel); //cargo el id nivel
					if(idParalelo != -99){
						pstmt.setInt(4, idParalelo);
						pstmt.setString(5, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
						pstmt.setString(6, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					}else{
						pstmt.setString(4, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
						pstmt.setString(5, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					}
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelInfo(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
						}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
		
			
			/**
			 * Método que busca un estudiante por periodo, carrera, nivel, paralelo, identificacion, apellidoPaterno
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param idNivel -nivel en el que se requiere buscar.
			 * @param idParalelo -paralelo en que se requiere buscar.
			 * @param identifiacion -identificacion  del estudiante a buscar.
			 * @param apellidoPaterno - apellidoPaterno del estudiante a buscar.
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXcarreraXNivelXParaleloXAsignaturaXIdentificacionXApellido(int idPeriodo, int idCarrera, int idNivel, int idParalelo, int idMateria, String identificacion, String apellidoPaterno) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");
					
					sbSql.append(" (select distinct ");sbSql.append(" crraux.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(" from ");
					sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crraux ");sbSql.append(" where ");
					sbSql.append(" crraux.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);
					sbSql.append(" ) as carreranvl , ");
					
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", "); 
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(", ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);

					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS paisdesc");

					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");

					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					
//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					
					sbSql.append(" WHERE ");

//					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);
					
					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" not in ( ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_INSCRITO_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_ANULACION_MATRICULA_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_FORTUITAS_VALUE);sbSql.append(" ) ");

					sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");

					sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");

					sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
					
					sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");

					sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");

					if(idParalelo != -99){
						sbSql.append(" AND ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ? ");
					}
					if(idMateria != -99){
						sbSql.append(" AND ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ? ");
					}

					if(idNivel == NivelConstantes.NIVEL_NIVELACION_VALUE){
						sbSql.append(" ORDER BY ");sbSql.append(" carreranvl ");
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					}else{
						sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					}
					
					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
					pstmt.setInt(2, idCarrera); //cargo el id carrera
					pstmt.setInt(3, idNivel); //cargo el id nivel
					pstmt.setString(4, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
					pstmt.setString(5, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno
					
					int contador = 5;
					if(idParalelo != -99){
						pstmt.setInt(++contador, idParalelo);
					}
					if(idMateria != -99){
						pstmt.setInt(++contador, idMateria);
					}
					
					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelInfoAux(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
					}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
	

			/**
			 * Método que busca un estudiante por periodo, carrera, nivel, paralelo, identificacion, apellidoPaterno
			 * @param idPerido - periodo en el que se desea buscar.
			 * @param idCarrera - id de la carrera que ha seleccionado en la búsqueda .
			 * @param idNivel -nivel en el que se requiere buscar.
			 * @param idParalelo -paralelo en que se requiere buscar.
			 * @param identifiacion -identificacion  del estudiante a buscar.
			 * @param apellidoPaterno - apellidoPaterno del estudiante a buscar.
			 * @return Lista de estudiantes que se ha encontrado con los parámetros ingresados en la búsqueda.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
			public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXcarreraXNivelXParaleloXAsignaturaXIdentificacionXApellidoReporte(int idPeriodo, int idCarrera, int idNivel, int idParalelo, int idMateria, String identificacion, String apellidoPaterno, int rcesEstado, List<CarreraDto> listCarrera) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
				List<EstudianteJdbcDto> retorno = null;
				PreparedStatement pstmt = null;
				Connection con = null;
				ResultSet rs = null;
				try {
					StringBuilder sbSql = new StringBuilder();
					sbSql.append(" SELECT DISTINCT");

					sbSql.append(" (select distinct ");sbSql.append(" crraux.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(" from ");
					sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crraux ");sbSql.append(" where ");
					sbSql.append(" crraux.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CARRERA_SIIU);
					sbSql.append(" ) as carreranvl , ");

					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(", ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(", "); 
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(", ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(", ");
					sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");
					sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(", ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(", ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);sbSql.append(", ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(", ");
					sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(", ");
					sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(", ");
					sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
					sbSql.append(", ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
					

					sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS paisid ");
					sbSql.append(" ,CASE WHEN ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS paisdesc");

					sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);
					sbSql.append(" AS cantonid ");
					sbSql.append(" ,CASE WHEN ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION); 
					sbSql.append(" END AS cantondesc");

					sbSql.append(" FROM ");
					sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);			
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
					sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
					sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
					sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);	
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
					sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
					sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
					sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

					//					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
					//					sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
					sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
					sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
					sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON ");
					sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
					
					sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
					sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);

					sbSql.append(" WHERE ");

					//					sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_ACTIVO_VALUE);

					sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" not in ( ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_INSCRITO_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_ANULACION_MATRICULA_VALUE);sbSql.append(" , ");
					sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_FORTUITAS_VALUE);sbSql.append(" ) ");

					sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");

//					sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
					
//					sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");

					sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" LIKE ? ");

					sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sbSql.append(" LIKE ? ");

					if(idParalelo != -99){
						sbSql.append(" AND ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ? ");
					}
					if(idMateria != -99){
						sbSql.append(" AND ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ? ");
					}
					if(rcesEstado != -99){
						sbSql.append(" AND ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ? ");
					}
					if(idNivel != -99){
						sbSql.append(" AND ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);sbSql.append(" = ? ");
					}
					
					if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" in ( ");
						for (int i = 0; i < listCarrera.size(); i++) {
							sbSql.append(" ? ");
							if(i != listCarrera.size() -1) {
					         sbSql.append(","); 
					        }
						}
						sbSql.append(" ) ");
					}else{//caso para una sola carrera
						sbSql.append(" AND ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ? ");
					}
					
					
					if(idNivel == NivelConstantes.NIVEL_NIVELACION_VALUE){
						sbSql.append(" ORDER BY ");sbSql.append(" carreranvl ");
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					}else{
						sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
					}

					//FIN QUERY
					con = ds.getConnection();
					pstmt = con.prepareStatement(sbSql.toString());
					pstmt.setInt(1, idPeriodo); //cargo el periodo academico
//					pstmt.setInt(2, idCarrera); //cargo el id carrera
//					pstmt.setInt(3, idNivel); //cargo el id nivel
					pstmt.setString(2, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase())+"%"); //cargo la identificacion
					pstmt.setString(3, "%"+GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase())+"%"); //cargo el apellido paterno

					int contador = 3;
					if(idParalelo != -99){
						pstmt.setInt(++contador, idParalelo);
					}
					if(idMateria != -99){
						pstmt.setInt(++contador, idMateria);
					}
					if(rcesEstado != -99){
						pstmt.setInt(++contador, rcesEstado);
					}
					if(idNivel != -99){
						pstmt.setInt(++contador, idNivel);
					}
					
					
					if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
						for (CarreraDto item : listCarrera) {
							pstmt.setInt(++contador, item.getCrrId()); //cargo las carreras ids
						}
					}else{//caso para una sola carrera
						pstmt.setInt(++contador, idCarrera);
					}
					
					

					rs = pstmt.executeQuery();
					retorno = new ArrayList<EstudianteJdbcDto>();
					while(rs.next()){
						retorno.add(transformarResultSetADtoEstudiantesPeriodoCarreraNivelInfoAuxReporte(rs));
					}
				} catch (SQLException e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
				} catch (Exception e) {
					throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
				} finally {
					try {
						if (rs != null) {
							rs.close();
						}
						if (pstmt != null) {
							pstmt.close();
						}
						if (con != null) {
							con.close();
						}
					} catch (SQLException e) {
					}	
				}
				if(retorno == null || retorno.size()<=0){
					throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
				}
				return retorno;
			}
			
	/**
	 * Método que busca un estudiante para validar Reingreso por
	 * identificacion, apellidoPaterno
	 * 
	 * @param identifiacion
	 *            -identificacion del estudiante a buscar.
	 * @param apellidoPaterno
	 *            - apellidoPaterno del estudiante a buscar.
	 * @return Lista de estudiantes que se ha encontrado con los parámetros
	 *         ingresados en la búsqueda.
	 * @throws EstudianteDtoJdbcException
	 *             - EstudianteDtoJdbcException excepción general
	 * @throws EstudianteDtoJdbcNoEncontradoException
	 *             - EstudianteDtoJdbcNoEncontradoException excepción cuando no
	 *             encuentra estudiantes con los parametros ingresados
	 */
	@Override
	public List<EstudianteJdbcDto> buscarEstudianteReingresoxIdentificacionXApellido(String identificacion,
			String apellidoPaterno, List<RolFlujoCarrera> listaCrr) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException {
		List<EstudianteJdbcDto> retorno = null;
		PreparedStatement pstmt = null;
		Connection con = null;
		ResultSet rs = null;
		try {
			StringBuilder sbSql = new StringBuilder();
			sbSql.append(" SELECT DISTINCT");
			sbSql.append(" prs.");
			sbSql.append(JdbcConstantes.PRS_ID);
			sbSql.append(", ");
			sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
			sbSql.append(", ");
			sbSql.append(" usro.");sbSql.append(JdbcConstantes.USRO_ID);
			sbSql.append(", ");
			sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
			sbSql.append(", ");
			sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
			sbSql.append(", ");
			sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
			sbSql.append(", ");
			sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
			sbSql.append(", ");
			sbSql.append(" CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
			sbSql.append(" IS NULL THEN ");sbSql.append("''");sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
			sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
			sbSql.append(", ");
			sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
			sbSql.append(", ");
			sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
			sbSql.append(", ");
			sbSql.append(" prs.");
			sbSql.append(JdbcConstantes.PRS_CELULAR);
			sbSql.append(", ");
			sbSql.append(" prs.");
			sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
			sbSql.append(", ");
			sbSql.append(" prs.");
			sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
			sbSql.append(", ");
			sbSql.append(" cncr.");
			sbSql.append(JdbcConstantes.CNCR_ID);
			sbSql.append(", ");
			sbSql.append(" crr.");
			sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
			sbSql.append(", ");
			sbSql.append(" crr.");
			sbSql.append(JdbcConstantes.CRR_DETALLE);
			sbSql.append(", ");
			sbSql.append(" dpn.");
			sbSql.append(JdbcConstantes.DPN_DESCRIPCION);

			sbSql.append(" FROM ");
			sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ");sbSql.append(" LEFT JOIN ");
			sbSql.append(JdbcConstantes.TABLA_USUARIO);sbSql.append(" usr ON ");sbSql.append(" prs.");
			sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ");sbSql.append(" usr.");sbSql.append(JdbcConstantes.PRS_ID);
			sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_USUARIO_ROL);sbSql.append(" usro ON ");
			sbSql.append(" usr.");sbSql.append(JdbcConstantes.USR_ID);sbSql.append(" = ");sbSql.append(" usro.");
			sbSql.append(JdbcConstantes.USRO_USR_ID);sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);
			sbSql.append(" fcin ON ");sbSql.append(" usro.");sbSql.append(JdbcConstantes.USRO_ID);sbSql.append(" = ");
			sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_USRO_ID);sbSql.append(" LEFT JOIN ");
			sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");sbSql.append(" fcin.");
			sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
			sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");sbSql.append(" cncr.");
			sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
			sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");sbSql.append(" crr.");
			sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

			sbSql.append(" WHERE ");

			sbSql.append(" fcin.FCIN_ESTADO_RETIRO");
			sbSql.append(" = ");
			sbSql.append(FichaInscripcionConstantes.ESTADO_RETIRO_INACTIVO_VALUE);

			sbSql.append(" AND ");
			sbSql.append(" prs.");
			sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
			sbSql.append(" LIKE ? ");

			sbSql.append(" AND ");
			sbSql.append(" crr.");
			sbSql.append(JdbcConstantes.CRR_ID);
			sbSql.append(" IN( ");
			for (int i=0;i<listaCrr.size();i++){
				sbSql.append(listaCrr.get(0).getRoflcrCarrera().getCrrId());
				if(i==listaCrr.size()-1){
					
				}else{
					sbSql.append(" , ");	
				}
			}
			sbSql.append(" ) ");
			
			sbSql.append(" AND ");
			sbSql.append(" prs.");
			sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
			sbSql.append(" LIKE ? ");

			sbSql.append(" ORDER BY ");
			sbSql.append(" prs.");
			sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
			// FIN QUERY
			
			con = ds.getConnection();
			pstmt = con.prepareStatement(sbSql.toString());
			pstmt.setString(1, "%" + GeneralesUtilidades.eliminarEspaciosEnBlanco(identificacion.toUpperCase()) + "%"); // cargo la identificacion
			pstmt.setString(2, "%" + GeneralesUtilidades.eliminarEspaciosEnBlanco(apellidoPaterno.toUpperCase()) + "%"); // cargo el apellido paterno
			rs = pstmt.executeQuery();
			retorno = new ArrayList<EstudianteJdbcDto>();
			while (rs.next()) {
				retorno.add(transformarResultSetADtoEstudianteReingreso(rs));
			}
		} catch (SQLException e) {
			throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades(
					"EstudianteJdbc.buscar.carrera.apellido.identificacion.sql.exception")));
		} catch (Exception e) {
			throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(
					new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.exception")));
		} finally {
			try {
				if (rs != null) {
					rs.close();
				}
				if (pstmt != null) {
					pstmt.close();
				}
				if (con != null) {
					con.close();
				}
			} catch (SQLException e) {
			}
		}
		if (retorno == null || retorno.size() <= 0) {
			throw new EstudianteDtoJdbcNoEncontradoException(
					MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades(
							"EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
		}
		return retorno;
	}
			
			
			/**
			 * Método que busca un estudiante por id del estudiante.
			 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
			 * @return Dto estudiante.
			 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
			 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
			 */
				public EstudianteJdbcDto buscarEstudianteXIdFichaEstudiante(int idFichaEstudiante) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
					EstudianteJdbcDto retorno = null;
					PreparedStatement pstmt = null;
					Connection con = null;
					ResultSet rs = null;
					try {
						StringBuilder sbSql = new StringBuilder();
						sbSql.append(" SELECT ");
						sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
						sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
									sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
						sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
									sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
						sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
									sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
						sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
									sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
						sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_NOTA_GRADO_SECUNDARIA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
						sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_NOTA_GRADO_SECUNDARIA); 
						sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_NOTA_GRADO_SECUNDARIA);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
						sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
									sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
						sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
									sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
						sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
						            sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
									sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
						sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
									sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_INAC_TTL_ID);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_COLEGIO_ID);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_UBC_COLEGIO);
						sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTUALIZACION_DATOS);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
						sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
						            sbSql.append(" IS NULL THEN ");sbSql.append("''");
									sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
						
						sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEXO); sbSql.append(" IS NULL THEN ");
						sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
						sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEXO); 
						sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEXO);
						
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
						sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
						sbSql.append(" IS NULL THEN ");sbSql.append("''");
									sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
						sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
						sbSql.append(" IS NULL THEN ");sbSql.append("''");
									sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_CELULAR);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
						
						sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_ESTADO_CIVIL);
						sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
						sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_ESTADO_CIVIL); 
						sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_ESTADO_CIVIL);
																
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_ACTUALIZACION_DATOS);
						
						sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_DISCAPACIDAD);
						sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
						sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_DISCAPACIDAD); 
						sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_DISCAPACIDAD);
						
						sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_TIPO_DISCAPACIDAD); 
						sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
						sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_TIPO_DISCAPACIDAD); 
						sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_TIPO_DISCAPACIDAD);
						
						sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_PORCE_DISCAPACIDAD);
						sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
						sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_PORCE_DISCAPACIDAD); 
						sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_PORCE_DISCAPACIDAD);
						
						sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_CARNET_CONADIS); 
						sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
						sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_CARNET_CONADIS); 
						sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_CARNET_CONADIS);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NUM_CARNET_CONADIS);	
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_CALLE_PRINCIPAL);	
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_CALLE_SECUNDARIA);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NUMERO_CASA);
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SECTOR_DOMICILIO);	
						sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_REFERENCIA_DOMICILIO);
						
						sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
						sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
						sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
						sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
						sbSql.append(" ,ubcprr.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS parroquiaid ");
						sbSql.append(" ,ubcprr.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS parroquiadesc ");
						sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_GENTILICIO);
						sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
						sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
						sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
						sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
						sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
						sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
						
						sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
									sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
									sbSql.append(" END AS colegioid ");
						sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
									sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
									sbSql.append(" END AS colegiodesc ");
					    sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_TIPO);
					                sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
									sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_TIPO); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.INAC_TIPO);
									
						sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_NIVEL); 
						            sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
									sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_NIVEL); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.INAC_NIVEL);
											
						sbSql.append(" ,ubccolegio.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantoncolegioid ");
						sbSql.append(" ,ubccolegio.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantoncolegiodesc ");

						sbSql.append(" ,ttl.");sbSql.append(JdbcConstantes.TTL_ID);

						sbSql.append(" , CASE WHEN ttl.");sbSql.append(JdbcConstantes.TTL_DESCRIPCION); 
						sbSql.append(" IS NULL THEN ");sbSql.append("''");
									sbSql.append(" ELSE ttl.");sbSql.append(JdbcConstantes.TTL_DESCRIPCION); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.TTL_DESCRIPCION);
									
						sbSql.append(" , CASE WHEN ttl.");sbSql.append(JdbcConstantes.TTL_TIPO); 
						            sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
									sbSql.append(" ELSE ttl.");sbSql.append(JdbcConstantes.TTL_TIPO); 
									sbSql.append(" END AS ");sbSql.append(JdbcConstantes.TTL_TIPO);
						
						sbSql.append(" FROM ");
						sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
									sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
									sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
									sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
									sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
									sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
									sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
									sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_COLEGIO_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
									sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcprr ON ");
									sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcprr.");sbSql.append(JdbcConstantes.UBC_ID);
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubccolegio ON ");
									sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_UBC_ID);sbSql.append(" = ");sbSql.append(" ubccolegio.");sbSql.append(JdbcConstantes.UBC_ID);
						sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_TITULO);sbSql.append(" ttl ON ");
									sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_TTL_ID);sbSql.append(" = ");sbSql.append(" ttl.");sbSql.append(JdbcConstantes.TTL_ID);
						
						sbSql.append(" WHERE ");
						sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ? ");
						//FIN QUERY
						con = ds.getConnection();
						pstmt = con.prepareStatement(sbSql.toString());
						
						pstmt.setInt(1, idFichaEstudiante); //cargo el id del estudiante
						rs = pstmt.executeQuery();
						if(rs.next()){
							retorno = transformarResultSetADtobuscarEstudianteXIdFichaEstudiante(rs);
						}else{
							retorno = null;
						}
						
					} catch (SQLException e) {
						throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.estudiante.sql.exception")));
					} catch (Exception e) {
						throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.estudiante.exception")));
					} finally {
						try {
							if (rs != null) {
								rs.close();
							}
							if (pstmt != null) {
								pstmt.close();
							}
							if (con != null) {
								con.close();
							}
						} catch (SQLException e) {
							}	
					}
					if(retorno == null){
						throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.no.result.exception")));
					}
					return retorno;
				}

			
				 /**
				 * Método que busca un estudiante por id del estudiante.
				 * @param idPersona - id de persona seleccionado para visualizar los datos.
				 * @return Dto estudiante.
				 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
				 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
				 */
					public EstudianteJdbcDto buscarEstudianteXIdPersona(int idPersona) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
						EstudianteJdbcDto retorno = null;
						PreparedStatement pstmt = null;
						Connection con = null;
						ResultSet rs = null;
						try {
							StringBuilder sbSql = new StringBuilder();
							sbSql.append(" SELECT ");
							sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
							sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
							            sbSql.append(" IS NULL THEN ");sbSql.append("''");
										sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
										sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
							sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEXO); sbSql.append(" IS NULL THEN ");
							sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEXO); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEXO);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
							sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
							sbSql.append(" IS NULL THEN ");sbSql.append("''");
										sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
										sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
							sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
							sbSql.append(" IS NULL THEN ");sbSql.append("''");
										sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
										sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_CELULAR);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
							sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_ESTADO_CIVIL);
							sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_ESTADO_CIVIL); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_ESTADO_CIVIL);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_ACTUALIZACION_DATOS);
							sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_DISCAPACIDAD);
							sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_DISCAPACIDAD); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_DISCAPACIDAD);
							sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_TIPO_DISCAPACIDAD); 
							sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_TIPO_DISCAPACIDAD); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_TIPO_DISCAPACIDAD);
							sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_PORCE_DISCAPACIDAD);
							sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_PORCE_DISCAPACIDAD); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_PORCE_DISCAPACIDAD);
							sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_CARNET_CONADIS); 
							sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
							sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_CARNET_CONADIS); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_CARNET_CONADIS);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NUM_CARNET_CONADIS);	
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_CALLE_PRINCIPAL);	
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_CALLE_SECUNDARIA);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NUMERO_CASA);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SECTOR_DOMICILIO);	
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_REFERENCIA_DOMICILIO);
							sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
							sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
							sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
							sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
							sbSql.append(" ,ubcprr.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS parroquiaid ");
							sbSql.append(" ,ubcprr.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS parroquiadesc ");
							sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_GENTILICIO);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_VINCULACION_SEGURO);
							
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FORMULARIO_SEGURO);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_FORMULARIO_SEGURO);
						
							sbSql.append(" FROM ");
							sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ");
							sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
										sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);
							sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
										sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);
							sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcprr ON ");
										sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcprr.");sbSql.append(JdbcConstantes.UBC_ID);
							
							sbSql.append(" WHERE ");
							sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
							//FIN QUERY
							con = ds.getConnection();
							pstmt = con.prepareStatement(sbSql.toString());
							pstmt.setInt(1, idPersona); //cargo el id del estudiante
							rs = pstmt.executeQuery();
							if(rs.next()){
								retorno = transformarResultSetADtobuscarEstudianteXIdPersona(rs);
							}else{
								retorno = null;
							}
							
						} catch (SQLException e) {
							
							throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.estudiante.sql.exception")));
						} catch (Exception e) {
						
							throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.estudiante.exception")));
						} finally {
							try {
								if (rs != null) {
									rs.close();
								}
								if (pstmt != null) {
									pstmt.close();
								}
								if (con != null) {
									con.close();
								}
							} catch (SQLException e) {
								}	
						}
						if(retorno == null){
							
							throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.no.result.exception")));
						}
						return retorno;
					}

					/**
					 * Método que busca un estudiante por id del estudiante.
					 * @param idPersona - id de persona seleccionado para visualizar los datos.
					 * @return Dto estudiante.
					 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
					 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
					 */
					public EstudianteJdbcDto buscarEstudianteXPeriodo(int idPersona, int idPeriodo) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
						EstudianteJdbcDto retorno = null;
						PreparedStatement pstmt = null;
						Connection con = null;
						ResultSet rs = null;
						try {
							StringBuilder sbSql = new StringBuilder();
							sbSql.append(" SELECT ");
							sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
							sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
							sbSql.append(" IS NULL THEN ");sbSql.append("''");
							sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
							sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
							sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
							
							sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ID);	
							sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);	
							sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ESTADO);
							sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);

							sbSql.append(" FROM ");
							sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs, ");
							sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces, ");
							sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt, ");
							sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ");
							
							sbSql.append(" WHERE ");
							sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
							sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
							sbSql.append(" AND fcin.");sbSql.append(JdbcConstantes.FCIN_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);
							
							sbSql.append(" AND fcin.");sbSql.append(JdbcConstantes.FCIN_ESTADO);sbSql.append(" = ");sbSql.append(FichaInscripcionConstantes.ACTIVO_VALUE);
							sbSql.append(" AND fcmt.");sbSql.append(JdbcConstantes.FCMT_ESTADO);sbSql.append(" = ");sbSql.append(FichaMatriculaConstantes.ESTADO_ACTIVO_VALUE);
							sbSql.append(" AND fcin.");sbSql.append(JdbcConstantes.FCIN_MATRICULADO);sbSql.append(" = ");sbSql.append(FichaInscripcionConstantes.SI_MATRICULADO_VALUE);
							sbSql.append(" AND fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);sbSql.append(" = ? ");
							sbSql.append(" AND prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
							//FIN QUERY
							con = ds.getConnection();
							pstmt = con.prepareStatement(sbSql.toString());
							pstmt.setInt(1, idPeriodo); //cargo el id del estudiante
							pstmt.setInt(2, idPersona); //cargo el id del periodo
							rs = pstmt.executeQuery();
							if(rs.next()){
								retorno = transformarResultSetADTOFicha(rs);
							}else{
								retorno = null;
							}

						} catch (SQLException e) {

							throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.estudiante.sql.exception")));
						} catch (Exception e) {

							throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.estudiante.exception")));
						} finally {
							try {
								if (rs != null) {
									rs.close();
								}
								if (pstmt != null) {
									pstmt.close();
								}
								if (con != null) {
									con.close();
								}
							} catch (SQLException e) {
							}	
						}
						if(retorno == null){

							throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.id.no.result.exception")));
						}
						return retorno;
					}
			
					
					
						
	

@Override
public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXProgramaPosgrado(int idPeriodo, int idCarrera)
		throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException {
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT ");
		
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
		sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_MATRICULADO);
		sbSql.append(" , CASE WHEN cmpa.");sbSql.append(JdbcConstantes.CMPA_ESTADO_PAGO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
		sbSql.append(" ELSE cmpa.");sbSql.append(JdbcConstantes.CMPA_ESTADO_PAGO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CMPA_ESTADO_PAGO);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);
		sbSql.append(" FROM ");
		
		sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin, ");
		sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs, ");
		sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr, ");
		sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn, ");
		sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr, ");
		sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt, ");
		sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa  ");
		
		sbSql.append(" WHERE ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
					
		sbSql.append(" AND ");
		sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
					
		sbSql.append(" AND ");
		sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					
		sbSql.append(" AND ");
		sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					
		sbSql.append(" AND ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
		
		sbSql.append(" AND ");
		sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_TIPO);sbSql.append(" = ");sbSql.append(CarreraConstantes.TIPO_POSGRADO_VALUE);
		sbSql.append(" AND ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
		sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
		//verifico si selecciono todas las carreras o una sola
		if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
			sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" > ? ");	
		}else{//caso para una sola carrera
			sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
		}
		
		if(idPeriodo == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
			sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" > ? ");	
		}else{//caso para una sola carrera
			sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
		}
		
		sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(", prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(", prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(", fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);
		//FIN QUERY
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		pstmt.setInt(1, idCarrera); 
		pstmt.setInt(2, idPeriodo); 
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetADtoPosgrado(rs));
		}
	} catch (SQLException e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.periodo.posgrado.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.periodo.posgrado.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
	if(retorno == null || retorno.size()<=0){
		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
	}
	return retorno;
} 


@Override
public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXProgramaPosgradoDireccionPosgrado(int idPeriodo, int idCarrera)
		throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException {
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT ");
		
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
					sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
					sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
					sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
		sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
//		sbSql.append(" , CASE WHEN cmpa.");sbSql.append(JdbcConstantes.CMPA_ESTADO_PAGO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
//		sbSql.append(" ELSE cmpa.");sbSql.append(JdbcConstantes.CMPA_ESTADO_PAGO); 
//		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.CMPA_ESTADO_PAGO);
//		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);
		sbSql.append(" FROM ");
		
		sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin, ");
		sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs, ");
		sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr, ");
		sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn, ");
		sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr, ");
		sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac, ");
		sbSql.append(JdbcConstantes.TABLA_USUARIO);sbSql.append(" usr, ");
		sbSql.append(JdbcConstantes.TABLA_USUARIO_ROL);sbSql.append(" usro ");
//		sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa  ");
		
		sbSql.append(" WHERE ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ");sbSql.append(" usr.");sbSql.append(JdbcConstantes.USR_PRS_ID);
					
		sbSql.append(" AND ");
		sbSql.append(" usr.");sbSql.append(JdbcConstantes.USR_ID);sbSql.append(" = ");sbSql.append(" usro.");sbSql.append(JdbcConstantes.USRO_USR_ID);
//					
		sbSql.append(" AND ");
		sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
					
		sbSql.append(" AND ");
		sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
					
		sbSql.append(" AND ");
		sbSql.append(" usro.");sbSql.append(JdbcConstantes.USRO_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_USRO_ID);
		
		sbSql.append(" AND ");
		sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_TIPO);sbSql.append(" = ");sbSql.append(CarreraConstantes.TIPO_POSGRADO_VALUE);
		//verifico si selecciono todas las carreras o una sola
		if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
			sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" > ? ");	
		}else{//caso para una sola carrera
			sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
		}
		
		if(idPeriodo == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
			sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" > ? ");	
		}else{//caso para una sola carrera
			sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
		}
		
		sbSql.append(" ORDER BY ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(", prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(", prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		//FIN QUERY
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		pstmt.setInt(1, idCarrera); 
		pstmt.setInt(2, idPeriodo); 
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetADtoPosgradoDireccion(rs));
		}
	} catch (SQLException e) {
		e.printStackTrace();
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.periodo.posgrado.sql.exception")));
	} catch (Exception e) {
		e.printStackTrace();
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.periodo.posgrado.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
	if(retorno == null || retorno.size()<=0){
		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.crr.ttl.apellido.ind.no.result.exception")));
	}
	return retorno;
} 

@Override
public EstudianteJdbcDto buscarEstudianteMatriculaPosgrado(EstudianteJdbcDto estudiante,int idPeriodo, int idCarrera)
		throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException {
	EstudianteJdbcDto retorno = estudiante;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT ");
		
		sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ID);
		sbSql.append(" ,rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);
		sbSql.append(" FROM ");
		
		sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces, ");
		sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ");
		
		sbSql.append(" WHERE ");
		sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);
					
		sbSql.append(" AND ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
//					
		sbSql.append(" AND ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");sbSql.append(" ROWNUM <2");
		
		//FIN QUERY
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		pstmt.setInt(1, estudiante.getFcinId()); 
		rs = pstmt.executeQuery();
		while(rs.next()){
			retorno.setRcesId(rs.getInt(JdbcConstantes.RCES_ID));
			retorno.setRcesEstado(rs.getInt(JdbcConstantes.RCES_ESTADO));
			FichaMatricula fcmt = new FichaMatricula();
			StringBuffer sbsql = new StringBuffer();
			sbsql.append(" Select fcmt from FichaMatricula fcmt ");
			sbsql.append(" where fcmt.fcmtFichaEstudiante.fcesFichaInscripcion.fcinId= :fcinId ");
			Query q = em.createQuery(sbsql.toString());
			q.setParameter("fcinId", estudiante.getFcinId());
			fcmt = (FichaMatricula) q.getSingleResult();
			retorno.setFcmtFechaMatricula(fcmt.getFcmtFechaMatricula());
			
			ComprobantePago cmpa = new ComprobantePago();
			sbsql = new StringBuffer();
			sbsql.append(" Select cmpa from ComprobantePago cmpa ");
			sbsql.append(" where cmpa.cmpaFichaMatricula.fcmtId= :fcmtId ");
			q = em.createQuery(sbsql.toString());
			q.setParameter("fcmtId", fcmt.getFcmtId());
			
			cmpa = (ComprobantePago) q.getSingleResult();
			retorno.setCmpaTotalPago(cmpa.getCmpaTotalPago());
			retorno.setCmpaNumComprobante(cmpa.getCmpaNumComprobante());
		}
	} catch (SQLException e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.periodo.posgrado.sql.exception")));
	} catch (Exception e) {
		e.printStackTrace();
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.carrera.periodo.posgrado.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
	return retorno;
} 



public List<EstudianteJdbcDto> buscarEstudiantePorCarrerasSIIU(String parametro, List<String> carreras, int tipoBusqueda) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	
	try {
		
		StringBuilder sql = new StringBuilder();
		sql.append(" SELECT PRS.");sql.append(JdbcConstantes.PRS_ID);
		sql.append(" ,PRS.");sql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sql.append(" ,PRS.");sql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sql.append(" ,PRS.");sql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sql.append(" ,PRS.");sql.append(JdbcConstantes.PRS_NOMBRES);
		sql.append(" ,PRS.");sql.append(JdbcConstantes.PRS_SEXO);
		sql.append(" ,CRR.");sql.append(JdbcConstantes.CRR_ID);
		sql.append(" ,CRR.");sql.append(JdbcConstantes.CRR_DESCRIPCION);
		sql.append(" ,CRR.");sql.append(JdbcConstantes.CRR_ESPE_CODIGO);
		sql.append(" ,CRR.");sql.append(JdbcConstantes.DPN_ID);
		sql.append(" FROM PERSONA PRS, ");
		sql.append("   USUARIO USR, ");
		sql.append("   USUARIO_ROL USRO, ");
		sql.append("   FICHA_INSCRIPCION FCIN, ");
		sql.append("   CONFIGURACION_CARRERA CNCR, ");
		sql.append("   CARRERA CRR ");
		sql.append(" WHERE PRS.PRS_ID = USR.PRS_ID ");
		sql.append(" AND USR.USR_ID = USRO.USR_ID ");
		sql.append(" AND USRO.USRO_ID = FCIN.USRO_ID ");
		sql.append(" AND CRR.CRR_ID = CNCR.CRR_ID ");
		sql.append(" AND CNCR.CNCR_ID = FCIN.CNCR_ID ");
		
		String crrId = carreras.toString().replace("[", "").replace("]", "");
		if(crrId.equals(String.valueOf(GeneralesConstantes.APP_ID_BASE))){
			sql.append(" AND CRR.CRR_ID > ");sql.append(GeneralesConstantes.APP_ID_BASE);
		}else {
			sql.append(" AND CRR.CRR_ID IN  ( ");sql.append(crrId);sql.append(" ) ");
		}
		
		if (tipoBusqueda == 0) {
			sql.append(" AND PRS.PRS_IDENTIFICACION LIKE ? ");	
		}else {
			sql.append(" AND PRS.PRS_PRIMER_APELLIDO LIKE ? ");
		}

		sql.append(" ORDER BY ");sql.append(" prs.");sql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);

		con = ds.getConnection();
		pstmt = con.prepareStatement(sql.toString());
		pstmt.setString(1, GeneralesUtilidades.quitarEspaciosEnBlanco(parametro.toUpperCase())+"%"); 
		rs = pstmt.executeQuery();
		
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetADtoEstudianteDto(rs));
		}
		
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException("Error de conexión , comuníquese con el administrador del sistema.");
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
		}	
	}
	
	if(retorno == null || retorno.size()<=0){
		throw new EstudianteDtoJdbcNoEncontradoException("No se encontró registros con los parámetros ingresados.");
	}
	
	return retorno;
}

public List<EstudianteJdbcDto> buscarEstudiantePorCarrerasSAU(String parametro, List<String> carreras, int tipoBusqueda) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	
	try {
		
		StringBuilder sql = new StringBuilder();
		sql.append(" SELECT DISTINCT e.est_codigo ");sql.append(JdbcConstantes.PRS_ID);
		sql.append("   ,e.est_cedula                 AS  ");sql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sql.append("   ,trim(e.est_apellido_paterno) AS  ");sql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sql.append("   ,trim(e.est_apellido_materno) AS  ");sql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sql.append("   ,trim(e.est_nombres)          AS  ");sql.append(JdbcConstantes.PRS_NOMBRES);
		sql.append("   ,e.est_sexo                   AS  ");sql.append(JdbcConstantes.PRS_SEXO);
		sql.append("   ,ee.espe_codigo               AS  ");sql.append(JdbcConstantes.CRR_ID);
		sql.append("   ,ee.espe_nombre               AS  ");sql.append(JdbcConstantes.CRR_DESCRIPCION);
		sql.append("   ,ee.espe_codigo               AS  ");sql.append(JdbcConstantes.CRR_ESPE_CODIGO);
		sql.append("   ,f.id                         AS  ");sql.append(JdbcConstantes.DPN_ID);
		sql.append(" FROM registro_materias rm ");
		sql.append(" LEFT JOIN materias mat ");sql.append(" ON rm.mat_codigo = mat.mat_codigo ");
		sql.append(" LEFT JOIN matriculas mtr ");sql.append(" ON rm.per_codigo  = mtr.per_codigo ");sql.append(" AND rm.est_codigo = mtr.est_codigo ");
		sql.append(" LEFT JOIN periodos p ");sql.append(" ON mtr.per_codigo=p.per_codigo ");
		sql.append(" LEFT JOIN especialidades_escuela ee ");sql.append(" ON mtr.espe_codigo = ee.espe_codigo ");
		sql.append(" LEFT JOIN escuelas s ");sql.append(" ON ee.esc_codigo = s.esc_codigo ");sql.append(" AND p.esc_codigo = s.esc_codigo ");
		sql.append(" LEFT JOIN facultad f ");sql.append(" ON s.id_facultad = f.id ");
		sql.append(" LEFT JOIN estudiantes e ");sql.append(" ON mtr.est_codigo       = e.est_codigo ");
		sql.append(" WHERE s.esc_codigo NOT IN (-1, 5, 6, 60, 980, 1655) ");
		sql.append(" AND mtr.matr_curso  > 0 ");
		sql.append(" AND mtr.matr_estado > 0 ");
		
		String crrId = carreras.toString().replace("[", "").replace("]", "");
		if(crrId.equals(String.valueOf(GeneralesConstantes.APP_ID_BASE))){
			sql.append(" AND ee.espe_codigo > ");sql.append(GeneralesConstantes.APP_ID_BASE);
		}else {
			sql.append(" AND ee.espe_codigo IN  ( ");sql.append(crrId);sql.append(" ) ");
		}
		
		if (tipoBusqueda == 0) {
			sql.append(" AND e.est_cedula ilike '"+parametro+"%' ");
		}else {
			sql.append(" AND e.est_apellido_paterno ilike '"+parametro+"%' ");
		}

		sql.append(" GROUP BY  ");
		sql.append(" e.est_codigo ");
		sql.append(" ,e.est_cedula ");
		sql.append(" ,e.est_apellido_paterno ");
		sql.append(" ,e.est_apellido_materno ");
		sql.append(" ,e.est_nombres ");
		sql.append(" ,e.est_sexo ");
		sql.append(" ,ee.espe_codigo ");
		sql.append(" ,ee.espe_nombre ");
		sql.append(" ,ee.espe_codigo ");
		sql.append(" ,f.id ");
		
		sql.append(" ORDER BY  ");sql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);sql.append("   , ");
		sql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sql.append("   , ");
		sql.append(JdbcConstantes.PRS_NOMBRES);
		
		con = dsSau.getConnection();
		pstmt = con.prepareStatement(sql.toString());
		rs = pstmt.executeQuery();
		
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetADtoEstudianteDto(rs));
		}
		
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException("Error de conexión , comuníquese con el administrador del sistema.");
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
		}	
	}
	
	if(retorno == null || retorno.size()<=0){
		throw new EstudianteDtoJdbcNoEncontradoException("No se encontró registros con los parámetros ingresados.");
	}
	
	return retorno;
}

/**MQ
 * Método que busca un estudiante por identificación y carrera.
 * @param idPersona - id de persona seleccionado para visualizar los datos.
 * @param idCarrera - id de carrera seleccionado para visualizar los datos.
 * @return Lista EstudianteJdbcDto.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */

public List<EstudianteJdbcDto> buscarEstudianteXIdentificacionXCarrera(String identificacion, int idCarrera) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ID);
			
		sbSql.append(" ,CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_UNIV_ESTUD_PREV_ID);
		sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_UNIV_ESTUD_PREV_ID);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_UNIV_ESTUD_PREV_ID);
		
		sbSql.append(" ,CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_UNIV_ESTUD_PREV);
		sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_UNIV_ESTUD_PREV);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_UNIV_ESTUD_PREV);
		
		sbSql.append(" ,CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_ESTUD_PREV);
		sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_ESTUD_PREV);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_ESTUD_PREV);
		
		sbSql.append(" ,CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIT_ESTUD_PREV_ID);
		sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE);
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIT_ESTUD_PREV_ID);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIT_ESTUD_PREV_ID);
		
		sbSql.append(" ,CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REG_TITULO_PREV);
		sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REG_TITULO_PREV);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REG_TITULO_PREV);
				
		sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
		sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
		
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin, ");
		sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr, ");
		sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ");
		sbSql.append(" WHERE ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
		sbSql.append(" AND fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		sbSql.append(" AND cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
		//sbSql.append(" AND fcin.");sbSql.append(JdbcConstantes.FCIN_ESTADO);sbSql.append(" = ");sbSql.append(FichaInscripcionConstantes.ACTIVO_VALUE);
		sbSql.append(" AND prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" = ? ");
		if(idCarrera!=GeneralesConstantes.APP_ID_BASE){
		sbSql.append(" AND crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
		}
		//FIN QUERY
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		pstmt.setString(1, identificacion); //cargo el id del estudiante
		if(idCarrera!=GeneralesConstantes.APP_ID_BASE){
		pstmt.setInt(2, idCarrera); //cargo el id del periodo
		}
		rs = pstmt.executeQuery();

		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetBuscarEstudianteXIdentificacionXCarrera(rs));
		}
		
	} catch (SQLException e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
	if(retorno == null || retorno.size()<=0){
		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.no.result.exception")));
	}
	return retorno;
}


/**
 * Método que busca estudiantes por periodo, facultad, carrera, nivel. 
 * @param idPersona - id de persona seleccionado para visualizar los datos.
 * @param idCarrera - id de carrera seleccionado para visualizar los datos.
 * @return Lista EstudianteJdbcDto.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */

public List<EstudianteJdbcDto> buscarEstudianteXPeriodoXFacultadXCarreraXNivel(int pracId, int dpnId, int crrId, int nvlId) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT ");
		sbSql.append(" DISTINCT ");
		sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);	
		
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt, ");
		sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces, ");
		sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr, ");
		sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl, ");
		sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr, ");
		sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ");
				sbSql.append(" WHERE ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
		sbSql.append(" AND prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.PRL_ID);
		sbSql.append(" AND crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" AND dpn.");sbSql.append(JdbcConstantes.DPN_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" AND crr.");sbSql.append(JdbcConstantes.CRR_TIPO);sbSql.append(" = ");sbSql.append(CarreraConstantes.CRR_ESTADO_ACTIVO_VALUE);
		
		sbSql.append(" AND rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" not in ( ");
		sbSql.append(RecordEstudianteConstantes.ESTADO_INSCRITO_VALUE);sbSql.append(" , ");
		sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_VALUE);sbSql.append(" , ");
		sbSql.append(RecordEstudianteConstantes.ESTADO_ANULACION_MATRICULA_VALUE);sbSql.append(" , ");
		sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_FORTUITAS_VALUE);sbSql.append(" ) ");
		
		sbSql.append(" AND fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);sbSql.append(" = ? ");
		sbSql.append(" AND prl.");sbSql.append(JdbcConstantes.PRAC_ID);;sbSql.append(" = ? ");
		sbSql.append(" AND dpn.");sbSql.append(JdbcConstantes.DPN_ID);sbSql.append(" = ? ");
		if (crrId != GeneralesConstantes.APP_ID_BASE) {
			sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
			
		}else {
			sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" > ? ");
		}
		if (nvlId != GeneralesConstantes.APP_ID_BASE) {
			sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(" = ? ");
			
		}else {
			sbSql.append(" AND ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);sbSql.append(" > ? ");
		}
		sbSql.append(" AND fcmt.");sbSql.append(JdbcConstantes.FCMT_ESTADO);sbSql.append(" = ");sbSql.append(FichaMatriculaConstantes.ESTADO_ACTIVO_VALUE);
		sbSql.append(" ORDER BY ");
		sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_NIVEL_UBICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
	
		//FIN QUERY
	
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		pstmt.setInt(1, pracId); //cargo el id del periodo
		pstmt.setInt(2, pracId); //cargo el id del periodo
		pstmt.setInt(3, dpnId); //cargo el id de la facultad
		pstmt.setInt(4, crrId); //cargo el id de la carrera
		pstmt.setInt(5, nvlId); //cargo el id del nivel 
			
		rs = pstmt.executeQuery();

		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetBuscarEstudianteXPeriodoXFacultadXCarreraXNivel(rs));
		}
		
	} catch (SQLException e) {
		e.printStackTrace();
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.nivel.carrera.sql.exception")));
	} catch (Exception e) {
		e.printStackTrace();
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.nivel.carrera.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
	if(retorno == null || retorno.size()<=0){
		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.nivel.carrera.no.result.exception")));
	}
	return retorno;
}


/**
 * MQ:
 * Método que busca un estudiante por id del estudiante y por id de matrícula y por periodo academico para listar 
 *  asignaturas sin nota  o asistencia (segundo hemisemestre) en la matricula actual , en las cuales puede realizar un retiro  por Casos fortuitos.
 * 
 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
 * @return lista de asignaturas del estudiante.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */
public List<EstudianteJdbcDto> buscarEstudianteRetiroFortuitoMatriculaXprsIdXmtrIdXpracIdXdtmtEstado(int idPersona, int idMatricula, int idPrac, int estadoDtmt) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT DISTINCT");
		//FICHA ESTUDIANTE
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
		//PERSONA
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		//ETNIA
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
		//UBICACIÓN
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
		//CONFIGURACIÓN CARRERA
		sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		//CARRERA
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//		sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
		//DEPENDENCIA
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//		sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		//INSTITUCIÓN ACADÉMICA
		sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
		sbSql.append(" END AS universidadid ");
		sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
		sbSql.append(" END AS universidaddesc ");
		//NIVEL
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
		//MATERIA
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
		sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
		//PERIODO ACADÉMICO
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
		//PARALELO
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
		//RECORD ESTUDIANTE
		sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
		sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
		//DETALLE MATRICULA
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		
		//FICHA MATRICULA
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
		//MALLA CURRICULAR PARALELO
		sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
		sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
		sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
		sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
		sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//		sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
		sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
		sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CALIFICACION);sbSql.append(" clf ON");
		sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" = ");sbSql.append(" clf. ");sbSql.append(JdbcConstantes.CLF_RCES_ID);
		
		sbSql.append(" WHERE ");
		sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
		sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
		sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
								sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
		sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
								sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
								
		sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
		
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
		
//		sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
		//sbSql.append(" AND (( ");
		//						sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
		//						sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
		//						sbSql.append(" OR ");
		//						sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
		//sbSql.append(" AND ( ");
		//						sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
		//						sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
		//					sbSql.append(" OR ");
		//						sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
//		sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
								
								
								//MQ: 28/03/2019  Si puede tener nota en el primer Hemi
//								sbSql.append(" AND (");sbSql.append(" clf.");sbSql.append(JdbcConstantes.CLF_NOTA1);sbSql.append(" <= 0 ");
//								sbSql.append(" or ");sbSql.append(" clf.");sbSql.append(JdbcConstantes.CLF_NOTA1);sbSql.append(" is null ) ");
								
								//la segunda nota tiene que  ser cero o nulo
								sbSql.append(" AND (");sbSql.append(" clf.");sbSql.append(JdbcConstantes.CLF_NOTA2);sbSql.append(" <= 0 ");
								sbSql.append(" or ");sbSql.append(" clf.");sbSql.append(JdbcConstantes.CLF_NOTA2);sbSql.append(" is null )");
								
								sbSql.append(" AND ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
								sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
								sbSql.append(" AND ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
								sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
								
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
		sbSql.append(" AND ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
		
		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" not in (");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);
		                      sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_FORTUITAS_SOLICITADO_VALUE);
		                      sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_FORTUITAS_VERIFICADO_VALUE);sbSql.append(" )");
							  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" is null ) ");
		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" not in ( ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_APROBADO_VALUE);
							  sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_NEGADO_VALUE);sbSql.append(" ) ");
							  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" is null ) ");
		sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		//FIN QUERY
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
	
		pstmt.setInt(1, idPersona); //cargo el id del estudiante
		pstmt.setInt(2, idPersona); //cargo el id del estudiante
		pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
		pstmt.setInt(4, idPrac); //cargo el id del perido academico
		pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
//		
//		System.out.println(sbSql.toString());
//		System.out.println(" idPrs " +idPersona+ "idMtr " +  idMatricula +"idPrac" + idPrac +"estadoDtmt" +estadoDtmt);
	
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetADtoRetiroSol(rs));
		}
	} catch (SQLException e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
//	if(retorno == null || retorno.size()<=0){
//		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//	}
	return retorno;
}



/**
 * MQ:
 * Método que busca un estudiante para consultar estado de la solicitud de Retiro fortuito, por id del estudiante y por id de matrícula y por periodo academico para listar 
 *  asignaturas sin nota  o asistencia (segundo hemisemestre) en la matricula actual 
 * 
 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
 * @return lista de asignaturas del estudiante.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */

                              
public List<EstudianteJdbcDto> buscarEstudianteRetiroFortuitoMatriculaXprsIdXmtrIdXpracIdXdtmtParaEstado(int idPersona, int idMatricula, int idPrac, int estadoDtmt) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT DISTINCT");
		//FICHA ESTUDIANTE
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
		//PERSONA
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		//ETNIA
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
		//UBICACIÓN
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
		//CONFIGURACIÓN CARRERA
		sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		//CARRERA
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//		sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
		//DEPENDENCIA
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//		sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		//INSTITUCIÓN ACADÉMICA
		sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
		sbSql.append(" END AS universidadid ");
		sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
		sbSql.append(" END AS universidaddesc ");
		//NIVEL
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
		//MATERIA
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
		sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
		//PERIODO ACADÉMICO
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
		//PARALELO
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
		//RECORD ESTUDIANTE
		sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
		sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
		//DETALLE MATRICULA
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION);
		
		//sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
		
		sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD); sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		//sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
		sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA); sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
		
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		
		//FICHA MATRICULA
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
		//MALLA CURRICULAR PARALELO
		sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
		sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
		sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
		sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
		sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//		sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
		sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
		sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
		
		sbSql.append(" WHERE ");
		sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
		sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
		sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
								sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
		sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
								sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
								
		sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
		
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
		
//		sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
//		sbSql.append(" AND (( ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
//		sbSql.append(" AND ( ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
//		sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
		sbSql.append(" AND ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
		if(estadoDtmt!=GeneralesConstantes.APP_ID_BASE){
		sbSql.append(" AND ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
		}

		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" in (");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_FORTUITAS_VERIFICADO_VALUE);
		                      sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_FORTUITAS_SOLICITADO_VALUE);sbSql.append(" )");
							  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" is null ) ");
		
		sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		//FIN QUERY
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		
		
		pstmt.setInt(1, idPersona); //cargo el id del estudiante
		pstmt.setInt(2, idPersona); //cargo el id del estudiante
		pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
		pstmt.setInt(4, idPrac); //cargo el id del perido academico
		if(estadoDtmt!=GeneralesConstantes.APP_ID_BASE){
		pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
		}
//		
//		System.out.println(sbSql.toString());
//		System.out.println(" idPrs " +idPersona+ "idMtr " +  idMatricula +"idPrac" + idPrac +"estadoDtmt" +estadoDtmt);
	
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetADtoRetiroSol(rs));
		}
	} catch (SQLException e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
//	if(retorno == null || retorno.size()<=0){
//		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//	}
	return retorno;
}

/**
 * MQ:  12 dic 2018
 * Método que busca las asignaturas de una matricula por id del estudiante y por id de matrícula y por periodo academico 
 * con solicitudes de retiro fortuito realizado
 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
 * @return lista del estudiante.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */
public List<EstudianteJdbcDto> buscarAsignaturasValidarRetiroFortuitoXprsIdXmtrIdXpracIdXdtmtEstado(int idPersona, int idMatricula, int idPrac, int estadoDtmt) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT DISTINCT");
		//FICHA ESTUDIANTE
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
		//PERSONA
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		//ETNIA
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
		//UBICACIÓN
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
		//CONFIGURACIÓN CARRERA
		sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		//CARRERA
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//		sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
		//DEPENDENCIA
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//		sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		//INSTITUCIÓN ACADÉMICA
		sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
		sbSql.append(" END AS universidadid ");
		sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
		sbSql.append(" END AS universidaddesc ");
		//NIVEL
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
		//MATERIA
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
		sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
		//PERIODO ACADÉMICO
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
		//PARALELO
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
		//RECORD ESTUDIANTE
		sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
		sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
		//DETALLE MATRICULA
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_CSL_RETIRO_ID);
		sbSql.append(" ,csl.");sbSql.append(JdbcConstantes.CSL_ID);
		sbSql.append(" ,csl.");sbSql.append(JdbcConstantes.CSL_CODIGO);
		sbSql.append(" ,csl.");sbSql.append(JdbcConstantes.CSL_DESCRIPCION);
		
		//FICHA MATRICULA
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
		//MALLA CURRICULAR PARALELO
		sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
		sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
		sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
		sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
		sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//		sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
		sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
		sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CAUSAL);sbSql.append(" csl ON");
		sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CSL_RETIRO_ID);sbSql.append(" = ");sbSql.append(" csl. ");sbSql.append(JdbcConstantes.CSL_ID);
		
		
		sbSql.append(" WHERE ");
		sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
		sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
		sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
								sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
		sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
								sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
								
		sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
		
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
		
//		sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
//		sbSql.append(" AND ( ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
//		sbSql.append(" AND ( ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
			//2 feb 2019					
//		sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
								
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
//		sbSql.append(" AND ");
//		sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_SOLICITADO_VALUE);
		sbSql.append(" AND ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
		
//		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);sbSql.append(" ) ");
		
		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_FORTUITAS_SOLICITADO_VALUE);
		sbSql.append(" ) ");
		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" not in ( ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_APROBADO_VALUE);
							  sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_NEGADO_VALUE);sbSql.append(" ) ");
							  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" is null ) ");
		sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		//FIN QUERY
		
		//System.out.println(sbSql.toString());
		
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		pstmt.setInt(1, idPersona); //cargo el id del estudiante
		pstmt.setInt(2, idPersona); //cargo el id del estudiante
		pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
		pstmt.setInt(4, idPrac); //cargo el id del perido academico
		pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
		
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetADtoRetiroFortuitoSol(rs));
		}
	} catch (SQLException e) {
		e.printStackTrace();
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
//	if(retorno == null || retorno.size()<=0){
//		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//	}
	return retorno;
}

/**
 * MQ:  19 dic 2018
 * Método que busca las asignaturas de una matricula por id del estudiante y por id de matrícula y por periodo academico 
 * con solicitudes de retiro fortuito realizado
 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
 * @return lista del estudiante.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */
public List<EstudianteJdbcDto> buscarAsignaturasAprobarRetiroFortuitoXprsIdXmtrIdXpracIdXdtmtEstado(int idPersona, int idMatricula, int idPrac, int estadoDtmt) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT DISTINCT");
		//FICHA ESTUDIANTE
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
		//PERSONA
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		//ETNIA
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
		//UBICACIÓN
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
		//CONFIGURACIÓN CARRERA
		sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		//CARRERA
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//		sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
		//DEPENDENCIA
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//		sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		//INSTITUCIÓN ACADÉMICA
		sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
		sbSql.append(" END AS universidadid ");
		sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
		sbSql.append(" END AS universidaddesc ");
		//NIVEL
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
		//MATERIA
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
		sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
		//PERIODO ACADÉMICO
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
		//PARALELO
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
		//RECORD ESTUDIANTE
		sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
		sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
		//DETALLE MATRICULA
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_CSL_RETIRO_ID);
		sbSql.append(" ,csl.");sbSql.append(JdbcConstantes.CSL_ID);
		sbSql.append(" ,csl.");sbSql.append(JdbcConstantes.CSL_CODIGO);
		sbSql.append(" ,csl.");sbSql.append(JdbcConstantes.CSL_DESCRIPCION);
		
		//FICHA MATRICULA
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
		//MALLA CURRICULAR PARALELO
		sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
		sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
		sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
		sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
		sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//		sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
		sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
		sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CAUSAL);sbSql.append(" csl ON");
		sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CSL_RETIRO_ID);sbSql.append(" = ");sbSql.append(" csl. ");sbSql.append(JdbcConstantes.CSL_ID);
		
		
		sbSql.append(" WHERE ");
		sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
		sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
		sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
								sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
		sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
								sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
								
		sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
		
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
		
//		sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
//		sbSql.append(" AND ( ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
//		sbSql.append(" AND ( ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
								
								//1 feb 2019
//		sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
//		sbSql.append(" AND ");
//		sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_SOLICITADO_VALUE);
		sbSql.append(" AND ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
		
//		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);sbSql.append(" ) ");
		
		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_FORTUITAS_VERIFICADO_VALUE);
		sbSql.append(" ) ");
		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" not in ( ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_APROBADO_VALUE);
							  sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_NEGADO_VALUE);sbSql.append(" ) ");
							  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" is null ) ");
		sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		//FIN QUERY
		
		//System.out.println(sbSql.toString());
		
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		pstmt.setInt(1, idPersona); //cargo el id del estudiante
		pstmt.setInt(2, idPersona); //cargo el id del estudiante
		pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
		pstmt.setInt(4, idPrac); //cargo el id del perido academico
		pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
		
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetADtoRetiroFortuitoSol(rs));
		}
	} catch (SQLException e) {
		e.printStackTrace();
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
//	if(retorno == null || retorno.size()<=0){
//		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//	}
	return retorno;
}

/** 
 * MQ:7 ene 2018
 * Método que busca un estudiante por id del estudiante y por id de matrícula y por periodo academico para listar con todos los parametros de busqueda.
 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
 * @param estadoDtmt - estadoDtmt estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
 * @param estadoCambio - estadoCambio estado solicitud retiro del destalle matrícula aprobado o negado seleccionado para visualizar los datos.
 * @return lista del estudiante.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */
public List<EstudianteJdbcDto> buscarEstudianteMateriaInactivasRetiroAprobadoXIdEstudianteXIdMatriculaXidPeriodoxEstados(int idEstudiante, int idMatricula, int idPrac, int estadoDtmt, int estadoCambio) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT DISTINCT");
		//FICHA ESTUDIANTE
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_INICIO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_ACTA_GRADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_REFRENDACION);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NUM_REFRENDACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_DURAC_REC);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE);			
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_TITULO_BACHILLER);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_NOTA_TRAB_TITULACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_LINK_TESIS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_LINK_TESIS);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
		//PERSONA
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		//ETNIA
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
		//UBICACIÓN
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
		//CONFIGURACIÓN CARRERA
		sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		//CARRERA
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
//		sbSql.append(" ,initcap( ");sbSql.append("crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.CRR_DETALLE);
		//DEPENDENCIA
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
//		sbSql.append(" ,initcap ( dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);sbSql.append(" )");sbSql.append(" AS ");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		//INSTITUCIÓN ACADÉMICA
		sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_ID); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_ID); 
		sbSql.append(" END AS universidadid ");
		sbSql.append(" , CASE WHEN inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE inacu.");sbSql.append(JdbcConstantes.INAC_DESCRIPCION); 
		sbSql.append(" END AS universidaddesc ");
		//NIVEL
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
		//MATERIA
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
		sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
		//PERIODO ACADÉMICO
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
		//PARALELO
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
		//RECORD ESTUDIANTE
		sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
		sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
		//DETALLE MATRICULA
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
		//FICHA MATRICULA
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
		
		sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
		sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
		sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
		sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
		sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//		sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
		sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
		sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
		
		sbSql.append(" WHERE ");
		sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
		sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
		sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
								sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
		sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
								sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
								
		sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
		
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
		
		
//		sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
//		sbSql.append(" AND ( ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
//		sbSql.append(" AND ( ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
								
//		sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
								
//		sbSql.append(" AND ");
//		sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_RETIRADO_SOLICITADO_VALUE);
		sbSql.append(" AND ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);sbSql.append(" = ? ");
		if(estadoCambio != GeneralesConstantes.APP_ID_BASE){
//			sbSql.append(" AND ");
//			sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" = ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_FORTUITAS_VERIFICADO_VALUE);
			sbSql.append(" AND ");
			sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" = ? ");
		}
		sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		//FIN QUERY
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		//System.out.println(sbSql.toString());
		
		pstmt.setInt(1, idEstudiante); //cargo el id del estudiante
		pstmt.setInt(2, idEstudiante); //cargo el id del estudiante
		pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
		pstmt.setInt(4, idPrac); //cargo el id del perido academico
		pstmt.setInt(5, estadoDtmt); //cargo el el estado del detalle matricula
		if(estadoCambio != GeneralesConstantes.APP_ID_BASE){
			pstmt.setInt(6, estadoCambio); //cargo el el estado cambio del detalle matricula
		}
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetADtoAlternoUno(rs));
		}
	} catch (SQLException e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
//	if(retorno == null || retorno.size()<=0){
//		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//	}
	return retorno;
}


/**MQ:  14 ene 2019
 * Método que busca un estudiante por identificación y carrera.
 * @param identificacion - id de persona seleccionado para visualizar los datos.
 * @param idCarrera - id de carrera seleccionado para visualizar los datos.
 * @param idPeriodo - id de periodo seleccionado para visualizar los datos.
 * @param listCarrera - lista de carreras para visualizar los datos.
 * @param listPeriodo - lista de periodos para visualizar los datos.
 * @return Lista EstudianteJdbcDto.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */

public List<EstudianteJdbcDto> buscarEstudianteXIdentificacionXCarreraXPeriodo(String identificacion, int idCarrera, int idPeriodo, List<CarreraDto> listCarrera, List<PeriodoAcademico> listPeriodo) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_ID);
				
		sbSql.append(" ,fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
		sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
		
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ESTADO);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		
		
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin, ");
		sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr, ");
		sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ,");
		sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ,");
		sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ");
		sbSql.append(" WHERE ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
		sbSql.append(" AND fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		sbSql.append(" AND cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
		sbSql.append(" AND fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" AND prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" = ? ");
		
		//verifico si selecciono todas las carreras o una sola
		if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
			sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" in ( ");
			for (int i = 0; i < listCarrera.size(); i++) {
				sbSql.append(" ? ");
				if(i != listCarrera.size() -1) {
		         sbSql.append(","); 
		        }
			}
			sbSql.append(" ) ");
		}else{//caso para una sola carrera
			sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
		}
		
		if(idPeriodo == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
			sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" in ( ");
			for (int i = 0; i < listPeriodo.size(); i++) {
				sbSql.append(" ? ");
				if(i != listPeriodo.size() -1) {
		         sbSql.append(","); 
		        }
			}
			sbSql.append(" ) ");
		}else{//caso para una sola carrera
			sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
		}
		
		//FIN QUERY
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		pstmt.setString(1, identificacion); //cargo el id del estudiante
		
	//	System.out.println(sbSql.toString());
		int contador = 1;
				
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para setear la lista de carreras
				for (CarreraDto item : listCarrera) {
					contador++;
					pstmt.setInt(contador, item.getCrrId()); //cargo las carreras ids
				}
			}else{//caso para setear una sola carrrera
				contador++;
				pstmt.setInt(contador, idCarrera); //cargo el id de carrera
			}
		
				
			
			if(idPeriodo == GeneralesConstantes.APP_ID_BASE){ // caso para setear la lista de carreras
				for (PeriodoAcademico item : listPeriodo) {
					contador++;
					pstmt.setInt(contador, item.getPracId()); //cargo los periodos id
				}
			}else{//caso para setear un solo periodo
				contador++;
				pstmt.setInt(contador, idPeriodo); //cargo el id de periodo
			}
		
		
		rs = pstmt.executeQuery();

		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetBuscarEstudianteXIdentificacionXCarreraXPeriodo(rs)); 
		}
		
	} catch (SQLException e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
	if(retorno == null || retorno.size()<=0){
		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.no.result.exception")));
	}
	return retorno;
}


/**
 * MQ: 14 ene 2019
 * Método que busca  las asignaturas de la matricula un estudiante por id del estudiante y por id de matrícula y por periodo academico para anular matricula
 *  
 * @param idEstudiante - id del estudiante seleccionano para visualizar los datos.
 * @param idMatrícula - id de la matrícula seleccionada para visualizar los datos.
 * @param idPrac - id del periodo academcico seleccionado para visualizar los datos.
 * @param estadoDetalleMatricula - estadoDetalleMatricula estado del destalle matrícula activo o inactivo seleccionado para visualizar los datos.
 * @return lista de asignaturas del estudiante.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */
public List<EstudianteJdbcDto> buscarAsignaturasMatriculaXprsIdXmtrIdXpracIdXdtmtEstado(int idPersona, int idMatricula, int idPrac) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT DISTINCT");
		//FICHA ESTUDIANTE
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);		
	
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_FECHA_CREACION);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO);
		sbSql.append(" , CASE WHEN fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE fces.");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.FCES_ESTADO_MATRICULA);
		sbSql.append(" ,fces.");sbSql.append(JdbcConstantes.FCES_OBSERVACION);
		//PERSONA
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_SEXO_SNIESE);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_PERSONAL);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_MAIL_INSTITUCIONAL);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_TELEFONO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		//ETNIA
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_ID);
		sbSql.append(" ,etn.");sbSql.append(JdbcConstantes.ETN_DESCRIPCION);
		//UBICACIÓN
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS paisid ");
		sbSql.append(" ,ubcp.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS paisdesc ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_ID);sbSql.append(" AS cantonid ");
		sbSql.append(" ,ubcc.");sbSql.append(JdbcConstantes.UBC_DESCRIPCION);sbSql.append(" AS cantondesc ");
		//CONFIGURACIÓN CARRERA
		sbSql.append(" ,cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		//CARRERA
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
		//DEPENDENCIA
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
				
		//NIVEL
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_ID);
		sbSql.append(" ,nvl.");sbSql.append(JdbcConstantes.NVL_DESCRIPCION);
		//MATERIA
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_CODIGO);
		sbSql.append(" , CASE WHEN mtr.");sbSql.append(JdbcConstantes.MTR_HORAS); sbSql.append(" IS NULL THEN ");sbSql.append(0);
		sbSql.append(" ELSE mtr.");sbSql.append(JdbcConstantes.MTR_HORAS);
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.MTR_HORAS);
		//PERIODO ACADÉMICO
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ESTADO);
		//PARALELO
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
		//RECORD ESTUDIANTE
		sbSql.append(" , (select rces1." );sbSql.append(JdbcConstantes.RCES_ID);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces1 where  rces1." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces1." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_id ");
		sbSql.append(" , (select rces2." );sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" from " );sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);
		sbSql.append(" rces2 where  rces2." );sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = fces." );sbSql.append(JdbcConstantes.FCES_ID);
		sbSql.append(" AND rces2." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = mlcrpr." );sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(") as rces_estado ");
		//DETALLE MATRICULA
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ID);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
		sbSql.append(" ,dtmt." );sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_NUMERO);
		//sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
		
		sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
		
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		//sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
		
		sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
		
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ARCHIVO_RESPUESTA);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ANULACION);
		
		sbSql.append(" , CASE WHEN dtmt.");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION); sbSql.append(" IS NULL THEN ");sbSql.append(GeneralesConstantes.APP_ID_BASE.intValue());
		sbSql.append(" ELSE dtmt.");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION);
		
		//FICHA MATRICULA
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);
		sbSql.append(" ,fcmt.");sbSql.append(JdbcConstantes.FCMT_FECHA_MATRICULA);
		//MALLA CURRICULAR PARALELO
		sbSql.append(" ,mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ");
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ON ");
		sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr ON ");
		sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ON ");
		sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_ETNIA);sbSql.append(" etn ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ETN_ID);sbSql.append(" = ");sbSql.append(" etn.");sbSql.append(JdbcConstantes.ETN_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_INSTITUCION_ACADEMICA);sbSql.append(" inacu ON ");
		sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_INAC_ID);sbSql.append(" = ");sbSql.append(" inacu.");sbSql.append(JdbcConstantes.INAC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcp ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_NACIMIENTO);sbSql.append(" = ");sbSql.append(" ubcp.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_UBICACION);sbSql.append(" ubcc ON ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_UBC_RESIDENCIA);sbSql.append(" = ");sbSql.append(" ubcc.");sbSql.append(JdbcConstantes.UBC_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt ON ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON ");
		sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr ON ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_ID);			

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt ON ");
		sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_NIVEL);sbSql.append(" nvl ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_NVL_ID);sbSql.append(" = ");sbSql.append(" nvl.");sbSql.append(JdbcConstantes.NVL_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);

		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR);sbSql.append(" mlcr ON ");
		sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MLCR_ID);sbSql.append(" = ");sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);

//		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_MALLA_PERIODO);sbSql.append(" mlpr ON ");
//		sbSql.append(" mlcr.");sbSql.append(JdbcConstantes.MLCR_ID);sbSql.append(" = ");sbSql.append(" mlpr.");sbSql.append(JdbcConstantes.MLPR_MLCR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac ON ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_PRAC_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ON");
		sbSql.append(" rces. ");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);sbSql.append(" = ");sbSql.append(" mlcrpr. ");sbSql.append(JdbcConstantes.MLCRPR_ID);
		
		sbSql.append(" LEFT JOIN ");sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa ON");
		sbSql.append(" dtmt. ");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);sbSql.append(" = ");sbSql.append(" cmpa. ");sbSql.append(JdbcConstantes.CMPA_ID);
		
		sbSql.append(" WHERE ");
		sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" in ( ");
		sbSql.append(" SELECT ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" FROM ");sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces1 ");
		sbSql.append(" , ");sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces1 ");
		sbSql.append(" WHERE ");sbSql.append(" mtr1.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");
								sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
		sbSql.append(" AND ");sbSql.append(" mlcrmt1.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");
								sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
								
		sbSql.append(" AND ");sbSql.append(" mlcrpr1.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
		
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");
								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
		
//		sbSql.append(" AND ");sbSql.append(" (( ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA);sbSql.append(" is null ) ");
//		sbSql.append(" AND (( ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA2);sbSql.append(" is null ) ");
//		sbSql.append(" AND ( ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" <> ");
//								sbSql.append(RecordEstudianteConstantes.ESTADO_NOTA_GUARDADO_FINAL_VALUE);
//								sbSql.append(" OR ");
//								sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_INGRESO_NOTA3);sbSql.append(" is null ) ");sbSql.append(" ) ");
//		sbSql.append(" AND ");sbSql.append(" rces1.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" = ");sbSql.append(RecordEstudianteConstantes.ESTADO_MATRICULADO_VALUE);
		sbSql.append(" AND ");sbSql.append(" fces1.");sbSql.append(JdbcConstantes.FCES_PRS_ID);sbSql.append(" = ? ");sbSql.append(" ) ");
		sbSql.append(" AND ");
		sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ? ");
		sbSql.append(" AND ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ? ");
				
//		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" not in (");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);
//		                      sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_FORTUITAS_SOLICITADO_VALUE);sbSql.append(" )");
//							  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" is null ) ");
//		sbSql.append(" AND ");sbSql.append(" ( dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" not in ( ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_APROBADO_VALUE);
//							  sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_NEGADO_VALUE);sbSql.append(" ) ");
//							  sbSql.append(" or ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" is null ) ");
		sbSql.append(" ORDER BY ");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		//FIN QUERY
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
	
		pstmt.setInt(1, idPersona); //cargo el id del estudiante
		pstmt.setInt(2, idPersona); //cargo el id del estudiante
		pstmt.setInt(3, idMatricula); //cargo el id de la matrícula
		pstmt.setInt(4, idPrac); //cargo el id del perido academico
//		
//		System.out.println(sbSql.toString());
//		System.out.println(" idPrs " +idPersona+ "idMtr " +  idMatricula +"idPrac" + idPrac +"estadoDtmt" +estadoDtmt);
	
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetADtoBuscarAsignaturasMatriculaXprsIdXmtrIdXpracIdXdtmtEstado(rs));
		
		}
	} catch (SQLException e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
//	if(retorno == null || retorno.size()<=0){
//		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.persona.matricula.periodo.estado.estadoCambio.no.result.exception")));
//	}
	return retorno;
}


/**
 * Método que busca un estudiantes retirados por
 * @param idPeriodo - id de periodo seleccionado para visualizar los datos.
 * @param idCarrera - id de carrera seleccionado para visualizar los datos.
 * @param apellido - apellido del estudiante
 * @param identificacion - identificacion del estudiante
 * @return Lista EstudianteJdbcDto, lista de retirados.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */
public List<EstudianteJdbcDto> buscarEstudianteRetiradoXperiodoXcarreraXapellidoXidentificacion( int idPeriodo, int idCarrera, String apellido, String identificacion, List<CarreraDto> listCarrera, Integer tipoCarrera, Integer idFacultad) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT distinct ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ID);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_OBSERVACION_CAMBIO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ARCHIVO_RESPUESTA);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_ID);
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac, ");
		sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt, ");
		sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ,");
		sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ,");
		sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr, ");
		sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl, ");
		sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr, ");
		sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt, ");
		sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr, ");
		sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs, ");
		sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ");
		sbSql.append(" WHERE ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);
		sbSql.append(" AND fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
		sbSql.append(" AND cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
		sbSql.append(" AND mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);
		sbSql.append(" AND mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
		sbSql.append(" AND prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
		sbSql.append(" AND mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
		sbSql.append(" AND mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
		sbSql.append(" AND crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_CRR_ID);
		sbSql.append(" AND prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
		sbSql.append(" AND dpn.");sbSql.append(JdbcConstantes.DPN_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);
		sbSql.append(" AND crr.");sbSql.append(JdbcConstantes.CRR_TIPO);sbSql.append(" = ?");
		
//		sbSql.append(" AND dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" not in ( ");sbSql.append(DetalleMatriculaConstantes.DTMT_ESTADO_RESPUESTA_RETIRO_NEGADO_VALUE);
//		sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_NEGADO_CONSEJO_DIRECTIVO_VALUE);sbSql.append(" ) ");
		
		sbSql.append(" AND (dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" is not null or ");
		sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" in (3,10,12))");
		if(idFacultad == GeneralesConstantes.APP_ID_BASE){
			//verifico si selecciono todas las carreras o una sola
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" in ( ");
				for (int i = 0; i < listCarrera.size(); i++) {
					sbSql.append(" ? ");
					if(i != listCarrera.size() -1) {
			         sbSql.append(","); 
			        }
				}
				sbSql.append(" ) ");
			}else{//caso para una sola carrera
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
			}
		}else if(idFacultad != 0){
			sbSql.append(" AND ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);sbSql.append(" = ? ");
			//verifico si selecciono todas las carreras o una sola
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" in ( ");
				for (int i = 0; i < listCarrera.size(); i++) {
					sbSql.append(" ? ");
					if(i != listCarrera.size() -1) {
			         sbSql.append(","); 
			        }
				}
				sbSql.append(" ) ");
			}else{//caso para una sola carrera
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
			}
		}
		if(!apellido.equals("")){
			sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(" = ?");
		}
		if(!identificacion.equals("")){
			sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" = ?");
		}
		if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
			sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ?");
		}
		sbSql.append(" order by ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		//FIN QUERY
		
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		//System.out.println(sbSql.toString());
		
		int contador = 1;
		pstmt.setInt(contador, tipoCarrera); //tipo de carrera
		if(idFacultad == GeneralesConstantes.APP_ID_BASE){
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para setear la lista de carreras
				for (CarreraDto item : listCarrera) {
					contador++;
					pstmt.setInt(contador, item.getCrrId()); //cargo las carreras ids
				}
			}else{//caso para setear una sola carrrera
				contador++;
				pstmt.setInt(contador, idCarrera); 
			}
		}else if(idFacultad != 0){
			contador++;
			pstmt.setInt(contador, idFacultad);
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para setear la lista de carreras
				for (CarreraDto item : listCarrera) {
					contador++;
					pstmt.setInt(contador, item.getCrrId()); //cargo las carreras ids
				}
			}else{//caso para setear una sola carrrera
				contador++;
				pstmt.setInt(contador, idCarrera); 
			}
		}
		if(!apellido.equals("")){
			contador++;
			pstmt.setString(contador, apellido.trim().toLowerCase()); 
		}
		if(!identificacion.equals("")){
			contador++;
			pstmt.setString(contador, identificacion.trim().toLowerCase());
		}
		if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
			contador++;
			pstmt.setInt(contador, idPeriodo);
		}
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetBuscarEstudianteRetiro(rs));
		}
	} catch (SQLException e) {
		e.printStackTrace();
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
	if(retorno == null || retorno.size()<=0){
		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.no.result.exception")));
	}
	return retorno;
}


/**
 * MQ: 5 jun 2019
 * Método que busca un estudiantes retirados por
 * @param idPeriodo - id de periodo seleccionado para visualizar los datos.
 * @param idCarrera - id de carrera seleccionado para visualizar los datos.
 * @param apellido - apellido del estudiante
 * @param identificacion - identificacion del estudiante
* @param tipo - tipo de retiro o anulacion
 * @return Lista EstudianteJdbcDto, lista de retirados.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */
public List<EstudianteJdbcDto> buscarEstudianteRetiradoXperiodoXcarreraXapellidoXidentificacionXtipo( int idPeriodo, int idCarrera, String apellido, String identificacion, List<CarreraDto> listCarrera, Integer tipoCarrera, Integer idFacultad, Integer tipo) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT distinct ");
		sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_ID);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_HISTORICO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_HISTORICO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_CAMBIO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_CAMBIO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_OBSERVACION_CAMBIO);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES);
		sbSql.append(" ,dtmt.");sbSql.append(JdbcConstantes.DTMT_ARCHIVO_RESPUESTA);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_ID);
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac, ");
		sbSql.append(JdbcConstantes.TABLA_DETALLE_MATRICULA);sbSql.append(" dtmt, ");
		sbSql.append(JdbcConstantes.TABLA_COMPROBANTE_PAGO);sbSql.append(" cmpa, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_MATRICULA);sbSql.append(" fcmt, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ,");
		sbSql.append(JdbcConstantes.TABLA_RECORD_ESTUDIANTE);sbSql.append(" rces ,");
		sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_PARALELO);sbSql.append(" mlcrpr, ");
		sbSql.append(JdbcConstantes.TABLA_PARALELO);sbSql.append(" prl, ");
		sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr, ");
		sbSql.append(JdbcConstantes.TABLA_MALLA_CURRICULAR_MATERIA);sbSql.append(" mlcrmt, ");
		sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr, ");
		sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs, ");
		sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ");
		sbSql.append(" WHERE ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_PRAC_ID);
		sbSql.append(" AND fcmt.");sbSql.append(JdbcConstantes.FCMT_ID);sbSql.append(" = ");sbSql.append(" cmpa.");sbSql.append(JdbcConstantes.CMPA_FCMT_ID);
		sbSql.append(" AND cmpa.");sbSql.append(JdbcConstantes.CMPA_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_CMPA_ID);
		sbSql.append(" AND mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");sbSql.append(" dtmt.");sbSql.append(JdbcConstantes.DTMT_MLCRPR_ID);
		sbSql.append(" AND mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_MLCRPR_ID);
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_FCES_ID);
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" fcmt.");sbSql.append(JdbcConstantes.FCMT_FCES_ID);
		sbSql.append(" AND prl.");sbSql.append(JdbcConstantes.PRL_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_PRL_ID);
		sbSql.append(" AND mtr.");sbSql.append(JdbcConstantes.MTR_ID);sbSql.append(" = ");sbSql.append(" mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_MTR_ID);
		sbSql.append(" AND mlcrmt.");sbSql.append(JdbcConstantes.MLCRMT_ID);sbSql.append(" = ");sbSql.append(" mlcrpr.");sbSql.append(JdbcConstantes.MLCRPR_MLCRMT_ID);
		sbSql.append(" AND crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ");sbSql.append(" prl.");sbSql.append(JdbcConstantes.PRL_CRR_ID);
		sbSql.append(" AND prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
		
        if(tipo==DetalleMatriculaConstantes.TIPO_RETIRO_VOLUNTARIO_VALUE){
			
			sbSql.append(" AND dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" in ( ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_SOLICITADO_VALUE);
			sbSql.append(" ) ");
				
		}
		if(tipo==DetalleMatriculaConstantes.TIPO_RETIRO_FORTUITO_VALUE){
			
			sbSql.append(" AND dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_SOLICITUD);sbSql.append(" in ( ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_FORTUITAS_SOLICITADO_VALUE);
			sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.ESTADO_CAMBIO_RETIRO_FORTUITAS_VERIFICADO_VALUE);sbSql.append(" ) ");
				
		}
		if(tipo==DetalleMatriculaConstantes.TIPO_ANULACION_VALUE){
			
			sbSql.append(" AND dtmt.");sbSql.append(JdbcConstantes.DTMT_TIPO_ANULACION);sbSql.append(" in ( ");sbSql.append(DetalleMatriculaConstantes.DTMT_TIPO_ANULACION_PROBLEMA_ADMINISTRATIVO_VALUE);
			sbSql.append(" , ");sbSql.append(DetalleMatriculaConstantes.DTMT_TIPO_ANULACION_SANCION_VALUE);sbSql.append(" ) ");
				
		}
		
		sbSql.append(" AND dpn.");sbSql.append(JdbcConstantes.DPN_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);
		sbSql.append(" AND crr.");sbSql.append(JdbcConstantes.CRR_TIPO);sbSql.append(" = ?");
		

		sbSql.append(" AND (dtmt.");sbSql.append(JdbcConstantes.DTMT_ESTADO_RESPUESTA);sbSql.append(" is not null or ");
		sbSql.append(" rces.");sbSql.append(JdbcConstantes.RCES_ESTADO);sbSql.append(" in (3,10,12,13))");
		
		if(idFacultad == GeneralesConstantes.APP_ID_BASE){
			//verifico si selecciono todas las carreras o una sola
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" in ( ");
				for (int i = 0; i < listCarrera.size(); i++) {
					sbSql.append(" ? ");
					if(i != listCarrera.size() -1) {
			         sbSql.append(","); 
			        }
				}
				sbSql.append(" ) ");
			}else{//caso para una sola carrera
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
			}
		}else if(idFacultad != 0){
			sbSql.append(" AND ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);sbSql.append(" = ? ");
			//verifico si selecciono todas las carreras o una sola
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" in ( ");
				for (int i = 0; i < listCarrera.size(); i++) {
					sbSql.append(" ? ");
					if(i != listCarrera.size() -1) {
			         sbSql.append(","); 
			        }
				}
				sbSql.append(" ) ");
			}else{//caso para una sola carrera
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
			}
		}
		if(!apellido.equals("")){
			sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(" = ?");
		}
		if(!identificacion.equals("")){
			sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" = ?");
		}
		if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
			sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ?");
		}
		sbSql.append(" order by ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DESCRIPCION);
		sbSql.append(" ,prl.");sbSql.append(JdbcConstantes.PRL_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		//FIN QUERY
		
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
	//	System.out.println(sbSql.toString());
		
		int contador = 1;
		pstmt.setInt(contador, tipoCarrera); //tipo de carrera
		if(idFacultad == GeneralesConstantes.APP_ID_BASE){
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para setear la lista de carreras
				for (CarreraDto item : listCarrera) {
					contador++;
					pstmt.setInt(contador, item.getCrrId()); //cargo las carreras ids
				}
			}else{//caso para setear una sola carrrera
				contador++;
				pstmt.setInt(contador, idCarrera); 
			}
		}else if(idFacultad != 0){
			contador++;
			pstmt.setInt(contador, idFacultad);
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para setear la lista de carreras
				for (CarreraDto item : listCarrera) {
					contador++;
					pstmt.setInt(contador, item.getCrrId()); //cargo las carreras ids
				}
			}else{//caso para setear una sola carrrera
				contador++;
				pstmt.setInt(contador, idCarrera); 
			}
		}
		if(!apellido.equals("")){
			contador++;
			pstmt.setString(contador, apellido.trim().toLowerCase()); 
		}
		if(!identificacion.equals("")){
			contador++;
			pstmt.setString(contador, identificacion.trim().toLowerCase());
		}
		if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
			contador++;
			pstmt.setInt(contador, idPeriodo);
		}
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetBuscarEstudianteRetiro(rs));
		}
	} catch (SQLException e) {
		e.printStackTrace();
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
	if(retorno == null || retorno.size()<=0){
		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.no.result.exception")));
	}
	return retorno;
}


/**
 * Método que busca  estudiantes con solicitudes de terceras matriculas
 * @param idPeriodo - id de periodo seleccionado para visualizar los datos.
 * @param idCarrera - id de carrera seleccionado para visualizar los datos.
 * @param apellido - apellido del estudiante
 * @param identificacion - identificacion del estudiante
 * @param tipoCarrera - tipo de carrera.
 * @param listCarrera - lista de carreras.
 * @return Lista EstudianteJdbcDto, lista de retirados.
 * @throws EstudianteDtoJdbcException - EstudianteDtoJdbcException excepción general
 * @throws EstudianteDtoJdbcNoEncontradoException - EstudianteDtoJdbcNoEncontradoException excepción cuando no encuentra estudiantes con los parametros ingresados
 */
public List<EstudianteJdbcDto> buscarEstudianteSltrmtXperiodoXcarreraXapellidoXidentificacion( int idPeriodo, int idCarrera, String apellido, String identificacion, List<CarreraDto> listCarrera, Integer tipoCarrera, Integer idFacultad) throws EstudianteDtoJdbcException, EstudianteDtoJdbcNoEncontradoException{
	List<EstudianteJdbcDto> retorno = null;
	PreparedStatement pstmt = null;
	Connection con = null;
	ResultSet rs = null;
	try {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append(" SELECT distinct ");

		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,prac.");sbSql.append(JdbcConstantes.PRAC_DESCRIPCION);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" ,dpn.");sbSql.append(JdbcConstantes.DPN_DESCRIPCION);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_ID);
		sbSql.append(" ,sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_FECHA_SOLICITUD);
		sbSql.append(" ,sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_FECHA_VERIF_SOLICITUD);
		sbSql.append(" ,sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_FECHA_RESP_SOLICITUD);
		sbSql.append(" ,sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_DOCUMENTO_SOLICITUD);
		sbSql.append(" ,sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_DOCUMENTO_RESOLUCION);
		sbSql.append(" ,sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_TIPO);
		sbSql.append(" ,sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_ESTADO);
		sbSql.append(" ,sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_ESTADO_REGISTRO);
		sbSql.append(" ,sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_OBSERVACION_FINAL);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_ID);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		sbSql.append(" , CASE WHEN prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" IS NULL THEN ");sbSql.append("''");
		sbSql.append(" ELSE prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO); 
		sbSql.append(" END AS ");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_NOMBRES);
		sbSql.append(" FROM ");
		sbSql.append(JdbcConstantes.TABLA_PERSONA);sbSql.append(" prs, ");
		sbSql.append(JdbcConstantes.TABLA_FICHA_ESTUDIANTE);sbSql.append(" fces ,");
		sbSql.append(JdbcConstantes.TABLA_FICHA_INSCRIPCION);sbSql.append(" fcin ,");
		sbSql.append(JdbcConstantes.TABLA_CONFIGURACION_CARRERA);sbSql.append(" cncr ,");
		sbSql.append(JdbcConstantes.TABLA_CARRERA);sbSql.append(" crr, ");
		sbSql.append(JdbcConstantes.TABLA_SOLICITUD_TERCERA_MATRICULA);sbSql.append(" sltrmt, ");
		sbSql.append(JdbcConstantes.TABLA_MATERIA);sbSql.append(" mtr, ");
		sbSql.append(JdbcConstantes.TABLA_PERIODO_ACADEMICO);sbSql.append(" prac, ");
		sbSql.append(JdbcConstantes.TABLA_DEPENDENCIA);sbSql.append(" dpn ");
		sbSql.append(" WHERE ");

		sbSql.append("  prs.");sbSql.append(JdbcConstantes.PRS_ID);sbSql.append(" = ");sbSql.append(" fces.");sbSql.append(JdbcConstantes.FCES_PRS_ID);
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_FCIN_ID);sbSql.append(" = ");sbSql.append(" fcin.");sbSql.append(JdbcConstantes.FCIN_ID);
		sbSql.append(" AND fcin.");sbSql.append(JdbcConstantes.FCIN_CNCR_ID);sbSql.append(" = ");sbSql.append(" cncr.");sbSql.append(JdbcConstantes.CNCR_ID);
		sbSql.append(" AND cncr.");sbSql.append(JdbcConstantes.CNCR_CRR_ID);sbSql.append(" = ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);
		
		sbSql.append(" AND fces.");sbSql.append(JdbcConstantes.FCES_ID);sbSql.append(" = ");sbSql.append(" sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_FCES_ID);
		sbSql.append(" AND sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_MTR_ID);sbSql.append(" = ");sbSql.append(" mtr.");sbSql.append(JdbcConstantes.MTR_ID);
		sbSql.append(" AND sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_PRAC_ID);sbSql.append(" = ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" AND crr.");sbSql.append(JdbcConstantes.CRR_DPN_ID);sbSql.append(" = ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);
		sbSql.append(" AND sltrmt.");sbSql.append(JdbcConstantes.SLTRMT_ESTADO_REGISTRO);sbSql.append(" = ");sbSql.append(SolicitudTerceraMatriculaConstantes.ESTADO_REGISTRO_ACTIVO_VALUE);
		
		sbSql.append(" AND crr.");sbSql.append(JdbcConstantes.CRR_TIPO);sbSql.append(" = ?");


		if(idFacultad == GeneralesConstantes.APP_ID_BASE){
			//verifico si selecciono todas las carreras o una sola
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" in ( ");
				for (int i = 0; i < listCarrera.size(); i++) {
					sbSql.append(" ? ");
					if(i != listCarrera.size() -1) {
			         sbSql.append(","); 
			        }
				}
				sbSql.append(" ) ");
			}else{//caso para una sola carrera
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
			}
		}else if(idFacultad != 0){
			sbSql.append(" AND ");sbSql.append(" dpn.");sbSql.append(JdbcConstantes.DPN_ID);sbSql.append(" = ? ");
			//verifico si selecciono todas las carreras o una sola
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para todas las carreras
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" in ( ");
				for (int i = 0; i < listCarrera.size(); i++) {
					sbSql.append(" ? ");
					if(i != listCarrera.size() -1) {
			         sbSql.append(","); 
			        }
				}
				sbSql.append(" ) ");
			}else{//caso para una sola carrera
				sbSql.append(" AND ");sbSql.append(" crr.");sbSql.append(JdbcConstantes.CRR_ID);sbSql.append(" = ? ");
			}
		}
		
		if(!apellido.equals("")){
			sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_SEGUNDO_APELLIDO);sbSql.append(" = ?");
		}
		if(!identificacion.equals("")){
			sbSql.append(" AND ");sbSql.append(" prs.");sbSql.append(JdbcConstantes.PRS_IDENTIFICACION);sbSql.append(" = ?");
		}
		if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
			sbSql.append(" AND ");sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);sbSql.append(" = ?");
		}
		sbSql.append(" order by ");
		sbSql.append(" prac.");sbSql.append(JdbcConstantes.PRAC_ID);
		sbSql.append(" ,crr.");sbSql.append(JdbcConstantes.CRR_DETALLE);
		sbSql.append(" ,mtr.");sbSql.append(JdbcConstantes.MTR_DESCRIPCION);
		sbSql.append(" ,prs.");sbSql.append(JdbcConstantes.PRS_PRIMER_APELLIDO);
		//FIN QUERY
		
		con = ds.getConnection();
		pstmt = con.prepareStatement(sbSql.toString());
		
	//System.out.println(sbSql.toString());
		int contador = 1;
		pstmt.setInt(contador, tipoCarrera); //tipo de carrera
		if(idFacultad == GeneralesConstantes.APP_ID_BASE){
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para setear la lista de carreras
				for (CarreraDto item : listCarrera) {
					contador++;
					pstmt.setInt(contador, item.getCrrId()); //cargo las carreras ids
				}
			}else{//caso para setear una sola carrrera
				contador++;
				pstmt.setInt(contador, idCarrera); 
			}
		}else if(idFacultad != 0){
			contador++;
			pstmt.setInt(contador, idFacultad);
			if(idCarrera == GeneralesConstantes.APP_ID_BASE){ // caso para setear la lista de carreras
				for (CarreraDto item : listCarrera) {
					contador++;
					pstmt.setInt(contador, item.getCrrId()); //cargo las carreras ids
				}
			}else{//caso para setear una sola carrrera
				contador++;
				pstmt.setInt(contador, idCarrera); 
			}
		}
		if(!apellido.equals("")){
			contador++;
			pstmt.setString(contador, apellido.trim().toLowerCase()); 
		}
		if(!identificacion.equals("")){
			contador++;
			pstmt.setString(contador, identificacion.trim().toLowerCase());
		}
		if(idPeriodo != GeneralesConstantes.APP_ID_BASE){
			contador++;
			pstmt.setInt(contador, idPeriodo);
		}
		rs = pstmt.executeQuery();
		retorno = new ArrayList<EstudianteJdbcDto>();
		while(rs.next()){
			retorno.add(transformarResultSetBuscarEstudianteSltrmt(rs));
		}
	} catch (SQLException e) {
		e.printStackTrace();
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.sql.exception")));
	} catch (Exception e) {
		throw new EstudianteDtoJdbcException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.exception")));
	} finally {
		try {
			if (rs != null) {
				rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (con != null) {
				con.close();
			}
		} catch (SQLException e) {
			}	
	}
	if(retorno == null || retorno.size()<=0){
		throw new EstudianteDtoJdbcNoEncontradoException(MensajeGeneradorUtilidades.getMsj(new MensajeGeneradorUtilidades("EstudianteJdbc.buscar.por.identificacion.carrera.no.result.exception")));
	}
	return retorno;
}

/* ********************************************************************************* *
 * ************************** METODOS DE TRANSFORMACION **************************** *
 * ********************************************************************************* */


private EstudianteJdbcDto transformarResultSetADtoEstudianteDto(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrEspeCodigo(rs.getInt(JdbcConstantes.CRR_ESPE_CODIGO));
	retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
	return retorno;
}

private EstudianteJdbcDto transformarResultSetADtoPosgrado(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();

	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
	retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
	retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));

	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
	retorno.setFcinMatriculado(rs.getInt(JdbcConstantes.FCIN_MATRICULADO));
	retorno.setFcmtNivelUbicacion(rs.getInt(JdbcConstantes.FCMT_NIVEL_UBICACION));
	retorno.setCmpaEstadoPago(rs.getInt(JdbcConstantes.CMPA_ESTADO_PAGO));
	return retorno;
} 

private EstudianteJdbcDto transformarResultSetADtoPosgradoDireccion(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();

	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
	retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
	retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
	
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setFcinId(rs.getInt(JdbcConstantes.FCIN_ID));
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
	return retorno;
} 

	private EstudianteJdbcDto transformarResultSetADto(ResultSet rs) throws SQLException{
		int valAux = 0;
		java.sql.Date fecha = null;
		Timestamp fechaTime = null;
		EstudianteJdbcDto retorno = new EstudianteJdbcDto();
		retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_INICIO);
		if(fecha != null ){
			retorno.setFcesFechaInicio(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		if(fecha != null ){
			retorno.setFcesFechaEgresamiento(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		if(fecha != null ){
			retorno.setFcesFechaActaGrado(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumActaGrado(rs.getString(JdbcConstantes.FCES_NUM_ACTA_GRADO));
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_REFRENDACION);
		if(fecha != null ){
			retorno.setFcesFechaRefrendacion(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumRefrendacion(rs.getString(JdbcConstantes.FCES_NUM_REFRENDACION));
		retorno.setFcesCrrEstudPrevios(rs.getString(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS));
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTiempoEstudRec(valAux);
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_DURAC_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoDuracRec(valAux);
			retorno.setFcesTipoDuracRecSt(FichaEstudianteConstantes.valueToLabelTipoDuracUce(valAux));
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_COLEGIO);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoColegio(valAux);
			retorno.setFcesTipoColegioSt(InstitucionAcademicaConstantes.valueToLabelTipoColegioUce(valAux));
		}
		
		retorno.setFcesTipoColegioSniese(rs.getString(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE));
		retorno.setFcesNotaPromAcumulado(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO));
		retorno.setFcesNotaTrabTitulacion(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_TRAB_TITULACION));
		retorno.setFcesLinkTesis(rs.getString(JdbcConstantes.FCES_LINK_TESIS));
		valAux = rs.getInt(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesRecEstuPrevios(valAux);
			retorno.setFcesRecEstuPreviosSt(FichaEstudianteConstantes.valueToLabelTipoRecUce(valAux));
		}else{
			retorno.setFcesRecEstuPreviosSt("");
		}
		
		retorno.setFcesRecEstudPrevSniese(rs.getString(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE));
		retorno.setFcesFechaCreacion(rs.getTimestamp(JdbcConstantes.FCES_FECHA_CREACION));
		retorno.setFcesEstadoUniversitario(rs.getInt(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO));
		retorno.setFcesEstadoMatricula(rs.getInt(JdbcConstantes.FCES_ESTADO_MATRICULA));		
		retorno.setFcesObservacion(rs.getString(JdbcConstantes.FCES_OBSERVACION));
		retorno.setFcesTituloBachiller(rs.getString(JdbcConstantes.FCES_TITULO_BACHILLER));
		
		valAux = rs.getInt("universidadid");
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setInacId(rs.getInt("universidadid"));
			retorno.setInacDescripcion(rs.getString("universidaddesc"));
		}
		
		retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
		retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
		retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
		retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
		retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
		retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
		retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
		retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
		retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
		retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
		retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
		retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
		retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
		retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
		fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		if(fecha != null ){
			retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
		}
		retorno.setEtnId(rs.getInt(JdbcConstantes.ETN_ID));
		retorno.setEtnDescripcion(rs.getString(JdbcConstantes.ETN_DESCRIPCION));
		retorno.setUbcPaisId(rs.getInt("paisid"));
		retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
		retorno.setUbcCantonId(rs.getInt("cantonid"));
		retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
		retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
		retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
		retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
		retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
		retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
		retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
		retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
		retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
//		retorno.setMtrHoras(rs.getInt(JdbcConstantes.MTR_HORAS));
		valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setMtrHoras(valAux);
		}else{
			retorno.setMtrHoras(0);
		}
		
		retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
		retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
		retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
		retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
		retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
		retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
		retorno.setDtmtId(rs.getInt(JdbcConstantes.DTMT_ID));
		retorno.setRcesId(rs.getInt("rces_id"));
		retorno.setRcesEstado(rs.getInt("rces_estado"));
		retorno.setDtmtEstado(rs.getInt(JdbcConstantes.DTMT_ESTADO));
		retorno.setDtmtEstadoCambio(rs.getInt(JdbcConstantes.DTMT_ESTADO_CAMBIO));
		retorno.setDtmtEstadoHistorico(rs.getInt(JdbcConstantes.DTMT_ESTADO_HISTORICO));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_CAMBIO);
		if(fechaTime != null ){
			retorno.setDtmtFechaCambio(fechaTime);
		}
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_HISTORICO);
		if(fechaTime != null ){
			retorno.setDtmtFechaHistorico(fechaTime);
		}
		retorno.setDtmtArchivoEstudiantes(rs.getString(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES));
		retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
		retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
		retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
		
		return retorno;
	} 
	
	
	private EstudianteJdbcDto transformarResultSetADtoRep(ResultSet rs) throws SQLException{
		int valAux = 0;
		java.sql.Date fecha = null;
		Timestamp fechaTime = null;
		EstudianteJdbcDto retorno = new EstudianteJdbcDto();
		retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_INICIO);
		if(fecha != null ){
			retorno.setFcesFechaInicio(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		if(fecha != null ){
			retorno.setFcesFechaEgresamiento(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		if(fecha != null ){
			retorno.setFcesFechaActaGrado(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumActaGrado(rs.getString(JdbcConstantes.FCES_NUM_ACTA_GRADO));
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_REFRENDACION);
		if(fecha != null ){
			retorno.setFcesFechaRefrendacion(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumRefrendacion(rs.getString(JdbcConstantes.FCES_NUM_REFRENDACION));
		retorno.setFcesCrrEstudPrevios(rs.getString(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS));
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTiempoEstudRec(valAux);
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_DURAC_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoDuracRec(valAux);
			retorno.setFcesTipoDuracRecSt(FichaEstudianteConstantes.valueToLabelTipoDuracUce(valAux));
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_COLEGIO);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoColegio(valAux);
			retorno.setFcesTipoColegioSt(InstitucionAcademicaConstantes.valueToLabelTipoColegioUce(valAux));
		}
		
		retorno.setFcesTipoColegioSniese(rs.getString(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE));
		retorno.setFcesNotaPromAcumulado(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO));
		retorno.setFcesNotaTrabTitulacion(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_TRAB_TITULACION));
		retorno.setFcesLinkTesis(rs.getString(JdbcConstantes.FCES_LINK_TESIS));
		valAux = rs.getInt(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesRecEstuPrevios(valAux);
			retorno.setFcesRecEstuPreviosSt(FichaEstudianteConstantes.valueToLabelTipoRecUce(valAux));
		}else{
			retorno.setFcesRecEstuPreviosSt("");
		}
		
		retorno.setFcesRecEstudPrevSniese(rs.getString(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE));
		retorno.setFcesFechaCreacion(rs.getTimestamp(JdbcConstantes.FCES_FECHA_CREACION));
		retorno.setFcesEstadoUniversitario(rs.getInt(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO));
		retorno.setFcesEstadoMatricula(rs.getInt(JdbcConstantes.FCES_ESTADO_MATRICULA));		
		retorno.setFcesObservacion(rs.getString(JdbcConstantes.FCES_OBSERVACION));
		retorno.setFcesTituloBachiller(rs.getString(JdbcConstantes.FCES_TITULO_BACHILLER));
		
		valAux = rs.getInt("universidadid");
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setInacId(rs.getInt("universidadid"));
			retorno.setInacDescripcion(rs.getString("universidaddesc"));
		}
		
		retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
		retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
		retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
		retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
		retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
		retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
		retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
		retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
		retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
		retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
		retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
		retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
		retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
		retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
		fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		if(fecha != null ){
			retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
		}
		retorno.setEtnId(rs.getInt(JdbcConstantes.ETN_ID));
		retorno.setEtnDescripcion(rs.getString(JdbcConstantes.ETN_DESCRIPCION));
		retorno.setUbcPaisId(rs.getInt("paisid"));
		retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
		retorno.setUbcCantonId(rs.getInt("cantonid"));
		retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
		retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
		retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
		retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
		retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
		retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
		retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
		retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
		retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
//		retorno.setMtrHoras(rs.getInt(JdbcConstantes.MTR_HORAS));
		valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setMtrHoras(valAux);
		}else{
			retorno.setMtrHoras(0);
		}
		
		retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
		retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
		retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
		retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
		retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
		retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
		retorno.setDtmtId(rs.getInt(JdbcConstantes.DTMT_ID));
		retorno.setRcesId(rs.getInt("rces_id"));
		retorno.setRcesEstado(rs.getInt("rces_estado"));
		retorno.setDtmtEstado(rs.getInt(JdbcConstantes.DTMT_ESTADO));
		retorno.setDtmtEstadoCambio(rs.getInt(JdbcConstantes.DTMT_ESTADO_CAMBIO));
		retorno.setDtmtEstadoHistorico(rs.getInt(JdbcConstantes.DTMT_ESTADO_HISTORICO));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_CAMBIO);
		if(fechaTime != null ){
			retorno.setDtmtFechaCambio(fechaTime);
		}
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_HISTORICO);
		if(fechaTime != null ){
			retorno.setDtmtFechaHistorico(fechaTime);
		}
		retorno.setDtmtArchivoEstudiantes(rs.getString(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES));
		retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
		retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
		retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
		retorno.setMlcrprId(rs.getInt(JdbcConstantes.MLCRPR_ID));
		
		return retorno;
	} 
	
	private EstudianteJdbcDto transformarResultSetADtoAlternoUno(ResultSet rs) throws SQLException{
		int valAux = 0;
		java.sql.Date fecha = null;
		Timestamp fechaTime = null;
		EstudianteJdbcDto retorno = new EstudianteJdbcDto();
		retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_INICIO);
		if(fecha != null ){
			retorno.setFcesFechaInicio(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		if(fecha != null ){
			retorno.setFcesFechaEgresamiento(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		if(fecha != null ){
			retorno.setFcesFechaActaGrado(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumActaGrado(rs.getString(JdbcConstantes.FCES_NUM_ACTA_GRADO));
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_REFRENDACION);
		if(fecha != null ){
			retorno.setFcesFechaRefrendacion(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumRefrendacion(rs.getString(JdbcConstantes.FCES_NUM_REFRENDACION));
		retorno.setFcesCrrEstudPrevios(rs.getString(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS));
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTiempoEstudRec(valAux);
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_DURAC_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoDuracRec(valAux);
			retorno.setFcesTipoDuracRecSt(FichaEstudianteConstantes.valueToLabelTipoDuracUce(valAux));
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_COLEGIO);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoColegio(valAux);
			retorno.setFcesTipoColegioSt(InstitucionAcademicaConstantes.valueToLabelTipoColegioUce(valAux));
		}
		
		retorno.setFcesTipoColegioSniese(rs.getString(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE));
		retorno.setFcesNotaPromAcumulado(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO));
		retorno.setFcesNotaTrabTitulacion(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_TRAB_TITULACION));
		retorno.setFcesLinkTesis(rs.getString(JdbcConstantes.FCES_LINK_TESIS));
		valAux = rs.getInt(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesRecEstuPrevios(valAux);
			retorno.setFcesRecEstuPreviosSt(FichaEstudianteConstantes.valueToLabelTipoRecUce(valAux));
		}else{
			retorno.setFcesRecEstuPreviosSt("");
		}
		
		retorno.setFcesRecEstudPrevSniese(rs.getString(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE));
		retorno.setFcesFechaCreacion(rs.getTimestamp(JdbcConstantes.FCES_FECHA_CREACION));
		retorno.setFcesEstadoUniversitario(rs.getInt(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO));
		retorno.setFcesEstadoMatricula(rs.getInt(JdbcConstantes.FCES_ESTADO_MATRICULA));		
		retorno.setFcesObservacion(rs.getString(JdbcConstantes.FCES_OBSERVACION));
		retorno.setFcesTituloBachiller(rs.getString(JdbcConstantes.FCES_TITULO_BACHILLER));
		
		valAux = rs.getInt("universidadid");
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setInacId(rs.getInt("universidadid"));
			retorno.setInacDescripcion(rs.getString("universidaddesc"));
		}
		
		retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
		retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
		retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
		retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
		retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
		retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
		retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
		retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
		retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
		retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
		retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
		retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
		retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
		retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
		fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		if(fecha != null ){
			retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
		}
		retorno.setEtnId(rs.getInt(JdbcConstantes.ETN_ID));
		retorno.setEtnDescripcion(rs.getString(JdbcConstantes.ETN_DESCRIPCION));
		retorno.setUbcPaisId(rs.getInt("paisid"));
		retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
		retorno.setUbcCantonId(rs.getInt("cantonid"));
		retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
		retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
		retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
		retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
		retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
		retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
		retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
		retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
		retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
//		retorno.setMtrHoras(rs.getInt(JdbcConstantes.MTR_HORAS));
		valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setMtrHoras(valAux);
		}else{
			retorno.setMtrHoras(0);
		}
		
		retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
		retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
		retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
		retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
		retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
		retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
		retorno.setDtmtId(rs.getInt(JdbcConstantes.DTMT_ID));
		retorno.setRcesId(rs.getInt("rces_id"));
		retorno.setRcesEstado(rs.getInt("rces_estado"));
		retorno.setDtmtEstado(rs.getInt(JdbcConstantes.DTMT_ESTADO));
		retorno.setDtmtEstadoCambio(rs.getInt(JdbcConstantes.DTMT_ESTADO_CAMBIO));
		retorno.setDtmtEstadoHistorico(rs.getInt(JdbcConstantes.DTMT_ESTADO_HISTORICO));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_CAMBIO);
		if(fechaTime != null ){
			retorno.setDtmtFechaCambio(fechaTime);
		}
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_HISTORICO);
		if(fechaTime != null ){
			retorno.setDtmtFechaHistorico(fechaTime);
		}
		retorno.setDtmtArchivoEstudiantes(rs.getString(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES));
		retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
		retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
		retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
		retorno.setMlcrprId(rs.getInt(JdbcConstantes.MLCRPR_ID));
		
		return retorno;
	} 
	
	private EstudianteJdbcDto transformarResultSetADtoRetiroSol(ResultSet rs) throws SQLException{
		int valAux = 0;
		java.sql.Date fecha = null;
		Timestamp fechaTime = null;
		EstudianteJdbcDto retorno = new EstudianteJdbcDto();
		retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_INICIO);
		if(fecha != null ){
			retorno.setFcesFechaInicio(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		if(fecha != null ){
			retorno.setFcesFechaEgresamiento(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		if(fecha != null ){
			retorno.setFcesFechaActaGrado(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumActaGrado(rs.getString(JdbcConstantes.FCES_NUM_ACTA_GRADO));
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_REFRENDACION);
		if(fecha != null ){
			retorno.setFcesFechaRefrendacion(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumRefrendacion(rs.getString(JdbcConstantes.FCES_NUM_REFRENDACION));
		retorno.setFcesCrrEstudPrevios(rs.getString(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS));
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTiempoEstudRec(valAux);
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_DURAC_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoDuracRec(valAux);
			retorno.setFcesTipoDuracRecSt(FichaEstudianteConstantes.valueToLabelTipoDuracUce(valAux));
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_COLEGIO);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoColegio(valAux);
			retorno.setFcesTipoColegioSt(InstitucionAcademicaConstantes.valueToLabelTipoColegioUce(valAux));
		}
		
		retorno.setFcesTipoColegioSniese(rs.getString(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE));
		retorno.setFcesNotaPromAcumulado(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO));
		retorno.setFcesNotaTrabTitulacion(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_TRAB_TITULACION));
		retorno.setFcesLinkTesis(rs.getString(JdbcConstantes.FCES_LINK_TESIS));
		valAux = rs.getInt(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesRecEstuPrevios(valAux);
			retorno.setFcesRecEstuPreviosSt(FichaEstudianteConstantes.valueToLabelTipoRecUce(valAux));
		}else{
			retorno.setFcesRecEstuPreviosSt("");
		}
		
		retorno.setFcesRecEstudPrevSniese(rs.getString(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE));
		retorno.setFcesFechaCreacion(rs.getTimestamp(JdbcConstantes.FCES_FECHA_CREACION));
		retorno.setFcesEstadoUniversitario(rs.getInt(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO));
		retorno.setFcesEstadoMatricula(rs.getInt(JdbcConstantes.FCES_ESTADO_MATRICULA));		
		retorno.setFcesObservacion(rs.getString(JdbcConstantes.FCES_OBSERVACION));
		retorno.setFcesTituloBachiller(rs.getString(JdbcConstantes.FCES_TITULO_BACHILLER));
		
		valAux = rs.getInt("universidadid");
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setInacId(rs.getInt("universidadid"));
			retorno.setInacDescripcion(rs.getString("universidaddesc"));
		}
		
		retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
		retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
		retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
		retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
		retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
		retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
		retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
		retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
		retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
		retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
		retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
		retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
		retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
		retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
		fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		if(fecha != null ){
			retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
		}
		retorno.setEtnId(rs.getInt(JdbcConstantes.ETN_ID));
		retorno.setEtnDescripcion(rs.getString(JdbcConstantes.ETN_DESCRIPCION));
		retorno.setUbcPaisId(rs.getInt("paisid"));
		retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
		retorno.setUbcCantonId(rs.getInt("cantonid"));
		retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
		retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
		retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
		retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
		retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
		retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
		retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
		retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
		retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
//		retorno.setMtrHoras(rs.getInt(JdbcConstantes.MTR_HORAS));
		valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setMtrHoras(valAux);
		}else{
			retorno.setMtrHoras(0);
		}
		
		retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
		retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
		retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
		retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
		retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
		retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
		retorno.setDtmtId(rs.getInt(JdbcConstantes.DTMT_ID));
		retorno.setRcesId(rs.getInt("rces_id"));
		retorno.setRcesEstado(rs.getInt("rces_estado"));
		retorno.setDtmtEstado(rs.getInt(JdbcConstantes.DTMT_ESTADO));
		retorno.setDtmtEstadoCambio(rs.getInt(JdbcConstantes.DTMT_ESTADO_CAMBIO));
		retorno.setDtmtEstadoHistorico(rs.getInt(JdbcConstantes.DTMT_ESTADO_HISTORICO));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_CAMBIO);
		if(fechaTime != null ){
			retorno.setDtmtFechaCambio(fechaTime);
		}
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_HISTORICO);
		if(fechaTime != null ){
			retorno.setDtmtFechaHistorico(fechaTime);
		}
		retorno.setDtmtArchivoEstudiantes(rs.getString(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES));
		retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
		retorno.setDtmtTipoAnulacion(rs.getInt(JdbcConstantes.DTMT_TIPO_ANULACION));
		retorno.setDtmtEstadoSolicitud(rs.getInt(JdbcConstantes.DTMT_ESTADO_SOLICITUD));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		if(fechaTime != null ){
			retorno.setDtmtFechaSolicitud(fechaTime);
		}
		retorno.setDtmtEstadoRespuesta(rs.getInt(JdbcConstantes.DTMT_ESTADO_RESPUESTA));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		if(fechaTime != null ){
			retorno.setDtmtFechaRespuesta(fechaTime);
		}
		retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
		retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
		retorno.setMlcrprId(rs.getInt(JdbcConstantes.MLCRPR_ID));
		
		return retorno;
	} 
	
	private EstudianteJdbcDto transformarResultSetADtoRetiroSolCtrlSolicitudTerceraMatr(ResultSet rs) throws SQLException{
		int valAux = 0;
		java.sql.Date fecha = null;
		Timestamp fechaTime = null;
		EstudianteJdbcDto retorno = new EstudianteJdbcDto();
		
		Integer solicitud = rs.getInt("retirotercera");
		
		if(solicitud != GeneralesConstantes.APP_CERO_VALUE){
			retorno.setDtmtRetiroSolicitudTercera(true);
		}else{
			retorno.setDtmtRetiroSolicitudTercera(false);
		}
		
		retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_INICIO);
		if(fecha != null ){
			retorno.setFcesFechaInicio(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		if(fecha != null ){
			retorno.setFcesFechaEgresamiento(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		if(fecha != null ){
			retorno.setFcesFechaActaGrado(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumActaGrado(rs.getString(JdbcConstantes.FCES_NUM_ACTA_GRADO));
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_REFRENDACION);
		if(fecha != null ){
			retorno.setFcesFechaRefrendacion(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumRefrendacion(rs.getString(JdbcConstantes.FCES_NUM_REFRENDACION));
		retorno.setFcesCrrEstudPrevios(rs.getString(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS));
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTiempoEstudRec(valAux);
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_DURAC_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoDuracRec(valAux);
			retorno.setFcesTipoDuracRecSt(FichaEstudianteConstantes.valueToLabelTipoDuracUce(valAux));
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_COLEGIO);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoColegio(valAux);
			retorno.setFcesTipoColegioSt(InstitucionAcademicaConstantes.valueToLabelTipoColegioUce(valAux));
		}
		
		retorno.setFcesTipoColegioSniese(rs.getString(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE));
		retorno.setFcesNotaPromAcumulado(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO));
		retorno.setFcesNotaTrabTitulacion(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_TRAB_TITULACION));
		retorno.setFcesLinkTesis(rs.getString(JdbcConstantes.FCES_LINK_TESIS));
		valAux = rs.getInt(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesRecEstuPrevios(valAux);
			retorno.setFcesRecEstuPreviosSt(FichaEstudianteConstantes.valueToLabelTipoRecUce(valAux));
		}else{
			retorno.setFcesRecEstuPreviosSt("");
		}
		
		retorno.setFcesRecEstudPrevSniese(rs.getString(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE));
		retorno.setFcesFechaCreacion(rs.getTimestamp(JdbcConstantes.FCES_FECHA_CREACION));
		retorno.setFcesEstadoUniversitario(rs.getInt(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO));
		retorno.setFcesEstadoMatricula(rs.getInt(JdbcConstantes.FCES_ESTADO_MATRICULA));		
		retorno.setFcesObservacion(rs.getString(JdbcConstantes.FCES_OBSERVACION));
		retorno.setFcesTituloBachiller(rs.getString(JdbcConstantes.FCES_TITULO_BACHILLER));
		
		valAux = rs.getInt("universidadid");
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setInacId(rs.getInt("universidadid"));
			retorno.setInacDescripcion(rs.getString("universidaddesc"));
		}
		
		retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
		retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
		retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
		retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
		retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
		retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
		retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
		retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
		retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
		retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
		retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
		retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
		retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
		retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
		fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		if(fecha != null ){
			retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
		}
		retorno.setEtnId(rs.getInt(JdbcConstantes.ETN_ID));
		retorno.setEtnDescripcion(rs.getString(JdbcConstantes.ETN_DESCRIPCION));
		retorno.setUbcPaisId(rs.getInt("paisid"));
		retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
		retorno.setUbcCantonId(rs.getInt("cantonid"));
		retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
		retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
		retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
		retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
		retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
		retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
		retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
		retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
		retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
//		retorno.setMtrHoras(rs.getInt(JdbcConstantes.MTR_HORAS));
		valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setMtrHoras(valAux);
		}else{
			retorno.setMtrHoras(0);
		}
		
		retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
		retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
		retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
		retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
		retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
		retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
		retorno.setDtmtId(rs.getInt(JdbcConstantes.DTMT_ID));
		retorno.setRcesId(rs.getInt("rces_id"));
		retorno.setRcesEstado(rs.getInt("rces_estado"));
		retorno.setDtmtEstado(rs.getInt(JdbcConstantes.DTMT_ESTADO));
		retorno.setDtmtEstadoCambio(rs.getInt(JdbcConstantes.DTMT_ESTADO_CAMBIO));
		retorno.setDtmtEstadoHistorico(rs.getInt(JdbcConstantes.DTMT_ESTADO_HISTORICO));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_CAMBIO);
		if(fechaTime != null ){
			retorno.setDtmtFechaCambio(fechaTime);
		}
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_HISTORICO);
		if(fechaTime != null ){
			retorno.setDtmtFechaHistorico(fechaTime);
		}
		retorno.setDtmtArchivoEstudiantes(rs.getString(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES));
		retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
		retorno.setDtmtTipoAnulacion(rs.getInt(JdbcConstantes.DTMT_TIPO_ANULACION));
		retorno.setDtmtEstadoSolicitud(rs.getInt(JdbcConstantes.DTMT_ESTADO_SOLICITUD));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		if(fechaTime != null ){
			retorno.setDtmtFechaSolicitud(fechaTime);
		}
		retorno.setDtmtEstadoRespuesta(rs.getInt(JdbcConstantes.DTMT_ESTADO_RESPUESTA));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		if(fechaTime != null ){
			retorno.setDtmtFechaRespuesta(fechaTime);
		}
		retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
		retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
		retorno.setMlcrprId(rs.getInt(JdbcConstantes.MLCRPR_ID));
		
		return retorno;
	} 
	
	
	private EstudianteJdbcDto transformarResultSetADtoBuscarAsignaturasMatriculaXprsIdXmtrIdXpracIdXdtmtEstado(ResultSet rs) throws SQLException{
		int valAux = 0;
		java.sql.Date fecha = null;
		Timestamp fechaTime = null;
		EstudianteJdbcDto retorno = new EstudianteJdbcDto();
		
		retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	
		retorno.setFcesFechaCreacion(rs.getTimestamp(JdbcConstantes.FCES_FECHA_CREACION));
		retorno.setFcesEstadoUniversitario(rs.getInt(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO));
		retorno.setFcesEstadoMatricula(rs.getInt(JdbcConstantes.FCES_ESTADO_MATRICULA));		
		retorno.setFcesObservacion(rs.getString(JdbcConstantes.FCES_OBSERVACION));
		
		retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
		retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
		//retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
		retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
		retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
		retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
		retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
		retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
		retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
		retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
		retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
		retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
		retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
		retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
		fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		if(fecha != null ){
			retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
		}
		retorno.setEtnId(rs.getInt(JdbcConstantes.ETN_ID));
		retorno.setEtnDescripcion(rs.getString(JdbcConstantes.ETN_DESCRIPCION));
		retorno.setUbcPaisId(rs.getInt("paisid"));
		retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
		retorno.setUbcCantonId(rs.getInt("cantonid"));
		retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
		retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
		retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
		retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
		retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
		retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
		retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
		retorno.setMtrId(rs.getInt(JdbcConstantes.MTR_ID));
		retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
		retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
//		retorno.setMtrHoras(rs.getInt(JdbcConstantes.MTR_HORAS));
		valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setMtrHoras(valAux);
		}else{
			retorno.setMtrHoras(0);
		}
		
		retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
		retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
		retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
		retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
		retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
		retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
		retorno.setDtmtId(rs.getInt(JdbcConstantes.DTMT_ID));
		retorno.setRcesId(rs.getInt("rces_id"));
		retorno.setRcesEstado(rs.getInt("rces_estado"));
		retorno.setDtmtEstado(rs.getInt(JdbcConstantes.DTMT_ESTADO));
		retorno.setDtmtEstadoCambio(rs.getInt(JdbcConstantes.DTMT_ESTADO_CAMBIO));
		retorno.setDtmtEstadoHistorico(rs.getInt(JdbcConstantes.DTMT_ESTADO_HISTORICO));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_CAMBIO);
		if(fechaTime != null ){
			retorno.setDtmtFechaCambio(fechaTime);
		}
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_HISTORICO);
		if(fechaTime != null ){
			retorno.setDtmtFechaHistorico(fechaTime);
		}
		retorno.setDtmtArchivoEstudiantes(rs.getString(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES));
		retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
		retorno.setDtmtEstadoSolicitud(rs.getInt(JdbcConstantes.DTMT_ESTADO_SOLICITUD));
		retorno.setDtmtArchivoAnulacion(rs.getString(JdbcConstantes.DTMT_ARCHIVO_ANULACION));
		retorno.setDtmtTipoAnulacion(rs.getInt(JdbcConstantes.DTMT_TIPO_ANULACION));
		
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		if(fechaTime != null ){
			retorno.setDtmtFechaSolicitud(fechaTime);
		}
		retorno.setDtmtEstadoRespuesta(rs.getInt(JdbcConstantes.DTMT_ESTADO_RESPUESTA));
		retorno.setDtmtArchivoRespuesta(rs.getString(JdbcConstantes.DTMT_ARCHIVO_RESPUESTA));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		if(fechaTime != null ){
			retorno.setDtmtFechaRespuesta(fechaTime);
		}
		retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
		retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
		retorno.setMlcrprId(rs.getInt(JdbcConstantes.MLCRPR_ID));
		
		return retorno;
	} 
	
	
	
	/**
	 * Método privado que sirve para trasformar los datos del resulset para solicitudes por casos fortuitos
	 * @param rs - rs parámetros de ingreso
	 * @return retorna el dto seteado con los datos correctos
	 * @throws SQLException - SQLException Excepción de error en la consulta sql
	 */	
	
	
	private EstudianteJdbcDto transformarResultSetADtoRetiroFortuitoSol(ResultSet rs) throws SQLException{
		int valAux = 0;
		java.sql.Date fecha = null;
		Timestamp fechaTime = null;
		EstudianteJdbcDto retorno = new EstudianteJdbcDto();
		retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_INICIO);
		if(fecha != null ){
			retorno.setFcesFechaInicio(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
		if(fecha != null ){
			retorno.setFcesFechaEgresamiento(new Date(fecha.getTime()));
		}
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
		if(fecha != null ){
			retorno.setFcesFechaActaGrado(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumActaGrado(rs.getString(JdbcConstantes.FCES_NUM_ACTA_GRADO));
		
		fecha = rs.getDate(JdbcConstantes.FCES_FECHA_REFRENDACION);
		if(fecha != null ){
			retorno.setFcesFechaRefrendacion(new Date(fecha.getTime()));
		}
		
		retorno.setFcesNumRefrendacion(rs.getString(JdbcConstantes.FCES_NUM_REFRENDACION));
		retorno.setFcesCrrEstudPrevios(rs.getString(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS));
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTiempoEstudRec(valAux);
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_DURAC_REC);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoDuracRec(valAux);
			retorno.setFcesTipoDuracRecSt(FichaEstudianteConstantes.valueToLabelTipoDuracUce(valAux));
		}
		
		valAux = rs.getInt(JdbcConstantes.FCES_TIPO_COLEGIO);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesTipoColegio(valAux);
			retorno.setFcesTipoColegioSt(InstitucionAcademicaConstantes.valueToLabelTipoColegioUce(valAux));
		}
		
		retorno.setFcesTipoColegioSniese(rs.getString(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE));
		retorno.setFcesNotaPromAcumulado(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO));
		retorno.setFcesNotaTrabTitulacion(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_TRAB_TITULACION));
		retorno.setFcesLinkTesis(rs.getString(JdbcConstantes.FCES_LINK_TESIS));
		valAux = rs.getInt(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setFcesRecEstuPrevios(valAux);
			retorno.setFcesRecEstuPreviosSt(FichaEstudianteConstantes.valueToLabelTipoRecUce(valAux));
		}else{
			retorno.setFcesRecEstuPreviosSt("");
		}
		
		retorno.setFcesRecEstudPrevSniese(rs.getString(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE));
		retorno.setFcesFechaCreacion(rs.getTimestamp(JdbcConstantes.FCES_FECHA_CREACION));
		retorno.setFcesEstadoUniversitario(rs.getInt(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO));
		retorno.setFcesEstadoMatricula(rs.getInt(JdbcConstantes.FCES_ESTADO_MATRICULA));		
		retorno.setFcesObservacion(rs.getString(JdbcConstantes.FCES_OBSERVACION));
		retorno.setFcesTituloBachiller(rs.getString(JdbcConstantes.FCES_TITULO_BACHILLER));
		
		valAux = rs.getInt("universidadid");
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setInacId(rs.getInt("universidadid"));
			retorno.setInacDescripcion(rs.getString("universidaddesc"));
		}
		
		retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
		retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
		retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
		retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
		retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
		retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
		retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
		retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
		retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
		retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
		retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
		retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
		retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
		retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
		fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
		if(fecha != null ){
			retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
		}
		retorno.setEtnId(rs.getInt(JdbcConstantes.ETN_ID));
		retorno.setEtnDescripcion(rs.getString(JdbcConstantes.ETN_DESCRIPCION));
		retorno.setUbcPaisId(rs.getInt("paisid"));
		retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
		retorno.setUbcCantonId(rs.getInt("cantonid"));
		retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
		retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
		retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
		retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
		retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
		retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
		retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
		retorno.setMtrId(rs.getInt(JdbcConstantes.MTR_ID));
		retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
		retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
//		retorno.setMtrHoras(rs.getInt(JdbcConstantes.MTR_HORAS));
		valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
		if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
			retorno.setMtrHoras(valAux);
		}else{
			retorno.setMtrHoras(0);
		}
		
		retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
		retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
		retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
		retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
		retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
		retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
		retorno.setDtmtId(rs.getInt(JdbcConstantes.DTMT_ID));
		retorno.setRcesId(rs.getInt("rces_id"));
		retorno.setRcesEstado(rs.getInt("rces_estado"));
		retorno.setDtmtEstado(rs.getInt(JdbcConstantes.DTMT_ESTADO));
		retorno.setDtmtEstadoCambio(rs.getInt(JdbcConstantes.DTMT_ESTADO_CAMBIO));
		retorno.setDtmtCslRetiroId(rs.getInt(JdbcConstantes.DTMT_CSL_RETIRO_ID));
		
		retorno.setCslId(rs.getInt(JdbcConstantes.CSL_ID));
		retorno.setCslCodigo(rs.getString(JdbcConstantes.CSL_CODIGO));
		retorno.setCslDescripcion(rs.getString(JdbcConstantes.CSL_DESCRIPCION));
		
		
		retorno.setDtmtEstadoHistorico(rs.getInt(JdbcConstantes.DTMT_ESTADO_HISTORICO));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_CAMBIO);
		if(fechaTime != null ){
			retorno.setDtmtFechaCambio(fechaTime);
		}
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_HISTORICO);
		if(fechaTime != null ){
			retorno.setDtmtFechaHistorico(fechaTime);
		}
		retorno.setDtmtArchivoEstudiantes(rs.getString(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES));
		retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
		retorno.setDtmtEstadoSolicitud(rs.getInt(JdbcConstantes.DTMT_ESTADO_SOLICITUD));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_SOLICITUD);
		if(fechaTime != null ){
			retorno.setDtmtFechaSolicitud(fechaTime);
		}
		retorno.setDtmtEstadoRespuesta(rs.getInt(JdbcConstantes.DTMT_ESTADO_RESPUESTA));
		fechaTime = rs.getTimestamp(JdbcConstantes.DTMT_FECHA_RESPUESTA);
		if(fechaTime != null ){
			retorno.setDtmtFechaRespuesta(fechaTime);
		}
		retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
		retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
		retorno.setMlcrprId(rs.getInt(JdbcConstantes.MLCRPR_ID));
		
		return retorno;
	} 
	

private EstudianteJdbcDto transformarResultSetADtoEstudiantesPeriodoCarreraNivel(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
//	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
	retorno.setUbcPaisId(rs.getInt("paisid"));
	retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
	retorno.setUbcCantonId(rs.getInt("cantonid"));
	retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
	return retorno;
	
}

private EstudianteJdbcDto transformarResultSetADtoEstudiantesPeriodoCarreraNivelInfo(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
	retorno.setUbcPaisId(rs.getInt("paisid"));
	retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
	retorno.setUbcCantonId(rs.getInt("cantonid"));
	retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
	return retorno;
	
}

private EstudianteJdbcDto transformarResultSetADtoEstudiantesPeriodoCarreraNivelInfoAux(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setFcinCarreraSiiuSt(rs.getString("carreranvl"));
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
	retorno.setUbcPaisId(rs.getInt("paisid"));
	retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
	retorno.setUbcCantonId(rs.getInt("cantonid"));
	retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
	return retorno;
	
}


private EstudianteJdbcDto transformarResultSetADtoEstudiantesPeriodoCarreraNivelInfoAuxReporte(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setFcinCarreraSiiuSt(rs.getString("carreranvl"));
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
	retorno.setUbcPaisId(rs.getInt("paisid"));
	retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
	retorno.setUbcCantonId(rs.getInt("cantonid"));
	retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
	retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
	retorno.setRcesEstado(rs.getInt(JdbcConstantes.RCES_ESTADO));
	return retorno;
	
}

private EstudianteJdbcDto transformarResultSetADtoEstudiantesPeriodoCarreraNivelAux(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
//	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setUbcPaisId(rs.getInt("paisid"));
	retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
	retorno.setUbcCantonId(rs.getInt("cantonid"));
	retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
	return retorno;
}

private EstudianteJdbcDto transformarResultSetADtoEstudiantesPeriodoCarreraNivelMatricula(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
//	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
//	retorno.setUbcPaisId(rs.getInt("paisid"));
//	retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
//	retorno.setUbcCantonId(rs.getInt("cantonid"));
//	retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
	return retorno;
}

private EstudianteJdbcDto transformarResultSetADtoEstudiantesPeriodoCarreraNivelMatriculaLista(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
//	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setCrrTipo(rs.getInt(JdbcConstantes.CRR_TIPO));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
//	retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
//	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
	retorno.setFcmtNivelUbicacion(rs.getInt(JdbcConstantes.FCMT_NIVEL_UBICACION));
	retorno.setFcmtPlcrId(rs.getInt(JdbcConstantes.FCMT_PLCR_ID));
//	retorno.setUbcPaisId(rs.getInt("paisid"));
//	retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
//	retorno.setUbcCantonId(rs.getInt("cantonid"));
//	retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
	return retorno;
}

private EstudianteJdbcDto transformarResultSetADtoEstudiantesPeriodoCarreraNivelMateria(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
//	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
	retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
	return retorno;
}

private EstudianteJdbcDto transformarResultSetADtoAlterno(ResultSet rs) throws SQLException{
	int valAux = 0;
	java.sql.Date fecha = null;
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	fecha = rs.getDate(JdbcConstantes.FCES_FECHA_INICIO);
	if(fecha != null ){
		retorno.setFcesFechaInicio(new Date(fecha.getTime()));
	}
	
	fecha = rs.getDate(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
	if(fecha != null ){
		retorno.setFcesFechaEgresamiento(new Date(fecha.getTime()));
	}
	
	fecha = rs.getDate(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
	if(fecha != null ){
		retorno.setFcesFechaActaGrado(new Date(fecha.getTime()));
	}
	
	retorno.setFcesNumActaGrado(rs.getString(JdbcConstantes.FCES_NUM_ACTA_GRADO));
	
	fecha = rs.getDate(JdbcConstantes.FCES_FECHA_REFRENDACION);
	if(fecha != null ){
		retorno.setFcesFechaRefrendacion(new Date(fecha.getTime()));
	}
	
	retorno.setFcesNumRefrendacion(rs.getString(JdbcConstantes.FCES_NUM_REFRENDACION));
	retorno.setFcesCrrEstudPrevios(rs.getString(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS));
	
	valAux = rs.getInt(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
	if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
		retorno.setFcesTiempoEstudRec(valAux);
	}
	
	valAux = rs.getInt(JdbcConstantes.FCES_TIPO_DURAC_REC);
	if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
		retorno.setFcesTipoDuracRec(valAux);
		retorno.setFcesTipoDuracRecSt(FichaEstudianteConstantes.valueToLabelTipoDuracUce(valAux));
	}
	
	valAux = rs.getInt(JdbcConstantes.FCES_TIPO_COLEGIO);
	if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
		retorno.setFcesTipoColegio(valAux);
		retorno.setFcesTipoColegioSt(InstitucionAcademicaConstantes.valueToLabelTipoColegioUce(valAux));
	}
	
	retorno.setFcesTipoColegioSniese(rs.getString(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE));
	retorno.setFcesNotaPromAcumulado(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO));
	retorno.setFcesNotaTrabTitulacion(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_TRAB_TITULACION));
	retorno.setFcesLinkTesis(rs.getString(JdbcConstantes.FCES_LINK_TESIS));
	valAux = rs.getInt(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
	if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
		retorno.setFcesRecEstuPrevios(valAux);
		retorno.setFcesRecEstuPreviosSt(FichaEstudianteConstantes.valueToLabelTipoRecUce(valAux));
	}else{
		retorno.setFcesRecEstuPreviosSt("");
	}
	
	retorno.setFcesRecEstudPrevSniese(rs.getString(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE));
	retorno.setFcesFechaCreacion(rs.getTimestamp(JdbcConstantes.FCES_FECHA_CREACION));
	retorno.setFcesEstadoUniversitario(rs.getInt(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO));
	retorno.setFcesEstadoMatricula(rs.getInt(JdbcConstantes.FCES_ESTADO_MATRICULA));		
	retorno.setFcesObservacion(rs.getString(JdbcConstantes.FCES_OBSERVACION));
	retorno.setFcesTituloBachiller(rs.getString(JdbcConstantes.FCES_TITULO_BACHILLER));
	
	valAux = rs.getInt("universidadid");
	if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
		retorno.setInacId(rs.getInt("universidadid"));
		retorno.setInacDescripcion(rs.getString("universidaddesc"));
	}
	
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
	retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
	retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
	retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
	retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
	retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
	retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
	retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
	fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
	if(fecha != null ){
		retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
	}
	retorno.setEtnId(rs.getInt(JdbcConstantes.ETN_ID));
	retorno.setEtnDescripcion(rs.getString(JdbcConstantes.ETN_DESCRIPCION));
	retorno.setUbcPaisId(rs.getInt("paisid"));
	retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
	retorno.setUbcCantonId(rs.getInt("cantonid"));
	retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	
	return retorno;
} 

private EstudianteJdbcDto transformarResultSetADtoEstudiantesIdPersonaXIdMatriculaNuevo(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	
	retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));		
	retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
	return retorno;
}


private EstudianteJdbcDto transformarPromeResultSetADto(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setProme(rs.getBigDecimal("notaProme"));
	return retorno;
}

private EstudianteJdbcDto transformarResultSetADtoListaEstudiantesNivelacion(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
//	retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
//	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
//	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
//	retorno.setCrrIdArea(rs.getInt("crrIdArea"));
//	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
//	retorno.setCrrDescripcionArea(rs.getString("crrDescripcionArea"));
//	retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
//	retorno.setFcinId(rs.getInt(JdbcConstantes.FCIN_ID));
//	retorno.setFcinMatriculado(rs.getInt(JdbcConstantes.FCIN_MATRICULADO));
//	retorno.setFcinEstado(rs.getInt(JdbcConstantes.FCIN_ESTADO));
//	retorno.setFcinPeriodoAcademico(rs.getInt(JdbcConstantes.FCIN_PRAC_ID));
//	retorno.setFcinConfiguracionCarrera(rs.getInt(JdbcConstantes.FCIN_CNCR_ID));
//	retorno.setFcinCarrera(rs.getInt(JdbcConstantes.FCIN_CARRERA));
//	retorno.setFcinCarreraSiiu(rs.getInt(JdbcConstantes.FCIN_CARRERA_SIIU));
//	retorno.setFcinTipo(rs.getInt(JdbcConstantes.FCIN_TIPO));
//	retorno.setFcinUsroId(rs.getInt(JdbcConstantes.FCIN_USRO_ID));
//	retorno.setFcinNotaEnes(rs.getFloat(JdbcConstantes.FCIN_NOTA_ENES));
//	retorno.setFcinCncrArea(rs.getInt(JdbcConstantes.FCIN_CNCR_AREA));
//	retorno.setFcesId(rs.getInt("FCES_ID"));
	return retorno;
} 
private EstudianteJdbcDto transformarResultSetADtoListaEstudiantesNivelacionTercera(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setFcinCarreraSiiu(rs.getInt(JdbcConstantes.FCIN_CARRERA_SIIU));
	retorno.setFcinCncrArea(rs.getInt(JdbcConstantes.FCIN_CNCR_AREA));
	return retorno;
} 
private EstudianteJdbcDto transformarResultSetADtoListaMatriculasXidentificacionXfcmt(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	int valAux = 0;
	retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
	retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
	valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
	if(valAux != 0){
		retorno.setMtrHoras(valAux);
	}else{
		retorno.setMtrHoras(0);
	}
	valAux = rs.getInt(JdbcConstantes.MTR_CREDITOS);
	if(valAux != 0){
		retorno.setMtrCreditos(valAux);
	}else{
		retorno.setMtrCreditos(0);
	}
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
	retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	retorno.setNvlNumeral(rs.getInt(JdbcConstantes.NVL_NUMERAL));
	
	retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
	
	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
	
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	

	BigDecimal valorMatricula = rs.getBigDecimal(JdbcConstantes.FCMT_VALOR_TOTAL);;
	int aux = valorMatricula.compareTo(BigDecimal.ZERO);
	if(aux>=0){
		retorno.setFcmtValorTotal(rs.getBigDecimal(JdbcConstantes.FCMT_VALOR_TOTAL));
	}else{
		retorno.setFcmtValorTotal(BigDecimal.ZERO);
	}
	retorno.setRcesEstado(rs.getInt(JdbcConstantes.RCES_ESTADO));
	
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	
	retorno.setFcmtNivelUbicacion(rs.getInt(JdbcConstantes.FCMT_NIVEL_UBICACION));
	
	return retorno;
} 

/**
 * Tranformacion ResultSet al Dto
 * @param rs .- ResultSet a transformar
 * @return ResultSet tranformado
 * @throws SQLException Error de tipo sql
 */
private EstudianteJdbcDto transformarResultSetADtoListaMatriculasXidentificacionXfcmtFull(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	int valAux = 0;
	retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
	retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
	valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
	if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
		retorno.setMtrHoras(valAux);
	}else{
		retorno.setMtrHoras(0);
	}
	retorno.setMtrCreditos(rs.getInt(JdbcConstantes.MTR_CREDITOS));
	retorno.setMtrHorasPAE(rs.getInt(JdbcConstantes.MTR_HORAS_PRAC_SEMA));
	retorno.setMtrHorasCien(rs.getInt(JdbcConstantes.MTR_HORAS_CIEN));
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
	retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	retorno.setNvlNumeral(rs.getInt(JdbcConstantes.NVL_NUMERAL));
	
	retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
	retorno.setDtmtValorPorMateria(rs.getBigDecimal("DTMT_VALOR_POR_MATERIA"));
	
	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
	
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	

	BigDecimal valorMatricula = rs.getBigDecimal(JdbcConstantes.FCMT_VALOR_TOTAL);;
	int aux = valorMatricula.compareTo(BigDecimal.ZERO);
	if(aux>=0){
		retorno.setFcmtValorTotal(rs.getBigDecimal(JdbcConstantes.FCMT_VALOR_TOTAL));
	}else{
		retorno.setFcmtValorTotal(BigDecimal.ZERO);
	}
	retorno.setRcesEstado(rs.getInt(JdbcConstantes.RCES_ESTADO));
	
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	
	return retorno;
} 



private EstudianteJdbcDto transformarNotasResultSetADto(ResultSet rs) throws SQLException{
	int valAux = 0;
	java.sql.Date fecha = null;
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
				
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
	retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
	retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
	retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
	retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
	retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
	retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
	retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
	fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
	if(fecha != null ){
		retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
	}
	
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	
	retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	
	retorno.setMtrId(rs.getInt(JdbcConstantes.MTR_ID));
	retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
	retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
//	retorno.setMtrHoras(rs.getInt(JdbcConstantes.MTR_HORAS));
	valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
	if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
		retorno.setMtrHoras(valAux);
	}else{
		retorno.setMtrHoras(0);
	}
	
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
	
	retorno.setPrlId(rs.getInt(JdbcConstantes.PRL_ID));
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
	
	retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	
	retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
	
	retorno.setRcesEstado(rs.getInt(JdbcConstantes.RCES_ESTADO));
	
	int asistencia1Aux=0;
	asistencia1Aux =  rs.getInt(JdbcConstantes.CLF_ASISTENCIA1);
	if(asistencia1Aux!=-99){
		retorno.setClfAsistenciaEstudiante1(rs.getInt(JdbcConstantes.CLF_ASISTENCIA1));
	}else{
		retorno.setClfAsistenciaEstudiante1(null);
	}
	
	int asistencia2Aux = rs.getInt(JdbcConstantes.CLF_ASISTENCIA2);
	if(asistencia2Aux != -99){
		retorno.setClfAsistenciaEstudiante2(rs.getInt(JdbcConstantes.CLF_ASISTENCIA2));
	}else{
		retorno.setClfAsistenciaEstudiante2(null);
	}
	
	int asistenciaDocente1 = rs.getInt(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);
	if(asistenciaDocente1 != -99){
		retorno.setClfAsistenciaDocente1(rs.getInt(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1));
	}else{
		retorno.setClfAsistenciaDocente1(null);
	}
	
	int asistenciaDocente2 = rs.getInt(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);
	if(asistenciaDocente2 != -99){
		retorno.setClfAsistenciaDocente2(rs.getInt(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2));
	}else{
		retorno.setClfAsistenciaDocente2(null);
	}
	
	int nota1 = rs.getInt(JdbcConstantes.CLF_NOTA1);
	if(nota1 != -99){
		retorno.setClfNota1(rs.getBigDecimal(JdbcConstantes.CLF_NOTA1));
	}else{
		retorno.setClfNota1(null);
	}
	
	int nota2 = rs.getInt(JdbcConstantes.CLF_NOTA2);
	if(nota2 != -99){
		retorno.setClfNota2(rs.getBigDecimal(JdbcConstantes.CLF_NOTA2));
	}else{
		retorno.setClfNota2(null);
	}
	
	int promedioAsistenciaAux = rs.getInt(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);
	if(promedioAsistenciaAux != -99){
		retorno.setClfPromedioAsistencia(rs.getBigDecimal(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA));
	}else{
		retorno.setClfPromedioAsistencia(null);
	}
	
	int proemdioNotasAux = rs.getInt(JdbcConstantes.CLF_PROMEDIO_NOTAS);
	if(proemdioNotasAux != -99){
		retorno.setClfPromedioNotas(rs.getBigDecimal(JdbcConstantes.CLF_PROMEDIO_NOTAS));
	}else{
		retorno.setClfPromedioNotas(null);
	}
	
	int supletorioAux = rs.getInt(JdbcConstantes.CLF_SUPLETORIO);
	if(supletorioAux != -99){
		retorno.setClfSupletorio(rs.getBigDecimal(JdbcConstantes.CLF_SUPLETORIO));
	}else{
		retorno.setClfSupletorio(null);
	}
	
	int totalAsistenciaAux = rs.getInt(JdbcConstantes.CLF_ASISTENCIA_TOTAL);
	if(totalAsistenciaAux != -99){
		retorno.setClfAsistenciaTotal(rs.getBigDecimal(JdbcConstantes.CLF_ASISTENCIA_TOTAL));
	}else{
		retorno.setClfAsistenciaTotal(null);
	}
	
	int paramRecuperacion1Aux = rs.getInt(JdbcConstantes.CLF_PARAM_RECUPERACION1);
	if(paramRecuperacion1Aux != -99){
		retorno.setClfParamRecuperacion1(rs.getBigDecimal(JdbcConstantes.CLF_PARAM_RECUPERACION1));
	}else{
		retorno.setClfParamRecuperacion1(null);
	}
	
	int paramRecuperacion2Aux = rs.getInt(JdbcConstantes.CLF_PARAM_RECUPERACION2);
	if(paramRecuperacion2Aux != -99){
		retorno.setClfParamRecuperacion2(rs.getBigDecimal(JdbcConstantes.CLF_PARAM_RECUPERACION2));
	}else{
		retorno.setClfParamRecuperacion2(null);
	}
	
	int notaFinalSemestreAux = rs.getInt(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);
	if(notaFinalSemestreAux != -99){
		retorno.setClfNotalFinalSemestre(rs.getBigDecimal(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE));
	}else{
		retorno.setClfNotalFinalSemestre(null);
	}
	
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	
	
	return retorno;
}


/**
 * Método privado que sirve para trasformar los datos del resulset
 * @param rs - rs parámetros de ingreso
 * @return retorna el dto seteado con los datos correctos
 * @throws SQLException - SQLException Excepción de error en la consulta sql
 */
private EstudianteJdbcDto transformarResultSetADtobuscarEstudianteNotasXIdentificacionXMatriculaXPeriodoXCarrera(ResultSet rs) throws SQLException{
	int valAux = 0;
	java.sql.Date fecha = null;
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
				
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
	retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
	retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
	retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
	retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
	retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
	retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
	retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
	fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
	if(fecha != null ){
		retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
	}
	
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	
	retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	
	retorno.setMtrId(rs.getInt(JdbcConstantes.MTR_ID));
	retorno.setMtrCodigo(rs.getString(JdbcConstantes.MTR_CODIGO));
	retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
//	retorno.setMtrHoras(rs.getInt(JdbcConstantes.MTR_HORAS));
	valAux = rs.getInt(JdbcConstantes.MTR_HORAS);
	if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
		retorno.setMtrHoras(valAux);
	}else{
		retorno.setMtrHoras(0);
	}
	
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setPracEstado(rs.getInt(JdbcConstantes.PRAC_ESTADO));
	
	retorno.setPrlId(rs.getInt(JdbcConstantes.PRL_ID));
	retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
	
	retorno.setNvlId(rs.getInt(JdbcConstantes.NVL_ID));
	retorno.setNvlDescripcion(rs.getString(JdbcConstantes.NVL_DESCRIPCION));
	
	retorno.setDtmtNumero(rs.getInt(JdbcConstantes.DTMT_NUMERO));
	
	retorno.setRcesEstado(rs.getInt(JdbcConstantes.RCES_ESTADO));
	
	int asistencia1Aux=0;
	asistencia1Aux =  rs.getInt(JdbcConstantes.CLF_ASISTENCIA1);
	if(asistencia1Aux!=-99){
		retorno.setClfAsistenciaEstudiante1(rs.getInt(JdbcConstantes.CLF_ASISTENCIA1));
	}else{
		retorno.setClfAsistenciaEstudiante1(null);
	}
	
	int asistencia2Aux = rs.getInt(JdbcConstantes.CLF_ASISTENCIA2);
	if(asistencia2Aux != -99){
		retorno.setClfAsistenciaEstudiante2(rs.getInt(JdbcConstantes.CLF_ASISTENCIA2));
	}else{
		retorno.setClfAsistenciaEstudiante2(null);
	}
	
	int asistenciaDocente1 = rs.getInt(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1);
	if(asistenciaDocente1 != -99){
		retorno.setClfAsistenciaDocente1(rs.getInt(JdbcConstantes.CLF_ASISTENCIA_DOCENTE1));
	}else{
		retorno.setClfAsistenciaDocente1(null);
	}
	
	int asistenciaDocente2 = rs.getInt(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2);
	if(asistenciaDocente2 != -99){
		retorno.setClfAsistenciaDocente2(rs.getInt(JdbcConstantes.CLF_ASISTENCIA_DOCENTE2));
	}else{
		retorno.setClfAsistenciaDocente2(null);
	}
	
	int nota1 = rs.getInt(JdbcConstantes.CLF_NOTA1);
	if(nota1 != -99){
		retorno.setClfNota1(rs.getBigDecimal(JdbcConstantes.CLF_NOTA1));
	}else{
		retorno.setClfNota1(null);
	}
	
	int nota2 = rs.getInt(JdbcConstantes.CLF_NOTA2);
	if(nota2 != -99){
		retorno.setClfNota2(rs.getBigDecimal(JdbcConstantes.CLF_NOTA2));
	}else{
		retorno.setClfNota2(null);
	}
	
	int promedioAsistenciaAux = rs.getInt(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA);
	if(promedioAsistenciaAux != -99){
		retorno.setClfPromedioAsistencia(rs.getBigDecimal(JdbcConstantes.CLF_PROMEDIO_ASISTENCIA));
	}else{
		retorno.setClfPromedioAsistencia(null);
	}
	
	int proemdioNotasAux = rs.getInt(JdbcConstantes.CLF_PROMEDIO_NOTAS);
	if(proemdioNotasAux != -99){
		retorno.setClfPromedioNotas(rs.getBigDecimal(JdbcConstantes.CLF_PROMEDIO_NOTAS));
	}else{
		retorno.setClfPromedioNotas(null);
	}
	
	int supletorioAux = rs.getInt(JdbcConstantes.CLF_SUPLETORIO);
	if(supletorioAux != -99){
		retorno.setClfSupletorio(rs.getBigDecimal(JdbcConstantes.CLF_SUPLETORIO));
	}else{
		retorno.setClfSupletorio(null);
	}
	
	int totalAsistenciaAux = rs.getInt(JdbcConstantes.CLF_ASISTENCIA_TOTAL);
	if(totalAsistenciaAux != -99){
		retorno.setClfAsistenciaTotal(rs.getBigDecimal(JdbcConstantes.CLF_ASISTENCIA_TOTAL));
	}else{
		retorno.setClfAsistenciaTotal(null);
	}
	
	int paramRecuperacion1Aux = rs.getInt(JdbcConstantes.CLF_PARAM_RECUPERACION1);
	if(paramRecuperacion1Aux != -99){
		retorno.setClfParamRecuperacion1(rs.getBigDecimal(JdbcConstantes.CLF_PARAM_RECUPERACION1));
	}else{
		retorno.setClfParamRecuperacion1(null);
	}
	
	int paramRecuperacion2Aux = rs.getInt(JdbcConstantes.CLF_PARAM_RECUPERACION2);
	if(paramRecuperacion2Aux != -99){
		retorno.setClfParamRecuperacion2(rs.getBigDecimal(JdbcConstantes.CLF_PARAM_RECUPERACION2));
	}else{
		retorno.setClfParamRecuperacion2(null);
	}
	
	int notaFinalSemestreAux = rs.getInt(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE);
	if(notaFinalSemestreAux != -99){
		retorno.setClfNotalFinalSemestre(rs.getBigDecimal(JdbcConstantes.CLF_NOTA_FINAL_SEMESTRE));
	}else{
		retorno.setClfNotalFinalSemestre(null);
	}
	
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtNivelUbicacion(rs.getInt(JdbcConstantes.FCMT_NIVEL_UBICACION));
	
	
	return retorno;
}

private EstudianteJdbcDto transformarResultSetADtoEstudiantesPeriodoxCarreraxNivel(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
//	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtFechaMatricula(rs.getTimestamp(JdbcConstantes.FCMT_FECHA_MATRICULA));
	retorno.setUbcPaisId(rs.getInt("paisid"));
	retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
	retorno.setUbcCantonId(rs.getInt("cantonid"));
	retorno.setUbcCantonDescripcion(rs.getString("cantondesc"));
	retorno.setFcmtNivelUbicacion(rs.getInt(JdbcConstantes.FCMT_NIVEL_UBICACION));
	return retorno;
}

private EstudianteJdbcDto transformarResultSetADtoEstudiantesPeriodoxCarreraxNivelPosgrado(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
//	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	return retorno;
}

/**
 * Método privado que sirve para trasformar los datos del resulset
 * @param rs - rs parámetros de ingreso
 * @return retorna el dto seteado con los datos correctos
 * @throws SQLException - SQLException Excepción de error en la consulta sql
 */		

private EstudianteJdbcDto transformarResultSetADtoEstudianteReingreso(ResultSet rs) throws SQLException{
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setFcinId(rs.getInt(JdbcConstantes.FCIN_ID));
	retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
	retorno.setPrsCelular(rs.getString(JdbcConstantes.PRS_CELULAR));
	retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
	retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	return retorno;
	
}

/**
 * Método privado que sirve para trasformar los datos del resulset para reingreso
 * @param rs - rs parámetros de ingreso
 * @return retorna el dto seteado con los datos correctos
 * @throws SQLException - SQLException Excepción de error en la consulta sql
 */		


//private EstudianteJdbcDto transformarResultSetADtoEstudianteXPeriodocarreraXNivelxParaleloxIdentificacionXApellido(ResultSet rs) throws SQLException{
//	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
//	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
//	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
//	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
//	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
//	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
//	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
//	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
//	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
//	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
//	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
//	retorno.setFcinId(rs.getInt(JdbcConstantes.FCIN_ID));
//	retorno.setUsroId(rs.getInt(JdbcConstantes.USRO_ID));
//	return retorno;
//	
//}


/**
* Método privado que sirve para trasformar los datos del resulset
* @param rs - rs parámetros de ingreso
* @return retorna el dto seteado con los datos correctos
* @throws SQLException - SQLException Excepción de error en la consulta sql
*/		
private EstudianteJdbcDto transformarResultSetADtobuscarEstudianteXIdFichaEstudiante(ResultSet rs) throws SQLException{
int valAux = 0;
Float valFloatAux =null;

java.sql.Date fecha = null;
EstudianteJdbcDto retorno = new EstudianteJdbcDto();
retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
fecha = rs.getDate(JdbcConstantes.FCES_FECHA_INICIO);
if(fecha != null ){
retorno.setFcesFechaInicio(new Date(fecha.getTime()));
}

fecha = rs.getDate(JdbcConstantes.FCES_FECHA_EGRESAMIENTO);
if(fecha != null ){
retorno.setFcesFechaEgresamiento(new Date(fecha.getTime()));
}

fecha = rs.getDate(JdbcConstantes.FCES_FECHA_ACTA_GRADO);
if(fecha != null ){
retorno.setFcesFechaActaGrado(new Date(fecha.getTime()));
}

retorno.setFcesNumActaGrado(rs.getString(JdbcConstantes.FCES_NUM_ACTA_GRADO));

fecha = rs.getDate(JdbcConstantes.FCES_FECHA_REFRENDACION);
if(fecha != null ){
retorno.setFcesFechaRefrendacion(new Date(fecha.getTime()));
}

retorno.setFcesNumRefrendacion(rs.getString(JdbcConstantes.FCES_NUM_REFRENDACION));
retorno.setFcesCrrEstudPrevios(rs.getString(JdbcConstantes.FCES_CRR_ESTUD_PREVIOS));

valAux = rs.getInt(JdbcConstantes.FCES_TIEMPO_ESTUD_REC);
if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
retorno.setFcesTiempoEstudRec(valAux);
}

valAux = rs.getInt(JdbcConstantes.FCES_TIPO_DURAC_REC);
if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
retorno.setFcesTipoDuracRec(valAux);
retorno.setFcesTipoDuracRecSt(FichaEstudianteConstantes.valueToLabelTipoDuracUce(valAux));
}

valAux = rs.getInt(JdbcConstantes.FCES_TIPO_COLEGIO);
if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
retorno.setFcesTipoColegio(valAux);
retorno.setFcesTipoColegioSt(InstitucionAcademicaConstantes.valueToLabelTipoColegioUce(valAux));
}

retorno.setFcesTipoColegioSniese(rs.getString(JdbcConstantes.FCES_TIPO_COLEGIO_SNIESE));
retorno.setFcesNotaPromAcumulado(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_PROM_ACUMULADO));
retorno.setFcesNotaTrabTitulacion(rs.getBigDecimal(JdbcConstantes.FCES_NOTA_TRAB_TITULACION));
retorno.setFcesLinkTesis(rs.getString(JdbcConstantes.FCES_LINK_TESIS));

valAux = rs.getInt(JdbcConstantes.FCES_REC_ESTUD_PREVIOS);
if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
retorno.setFcesRecEstuPrevios(valAux);
retorno.setFcesRecEstuPreviosSt(FichaEstudianteConstantes.valueToLabelTipoRecUce(valAux));
}else{
retorno.setFcesRecEstuPreviosSt("");
}

retorno.setFcesRecEstudPrevSniese(rs.getString(JdbcConstantes.FCES_REC_ESTUD_PREV_SNIESE));
retorno.setFcesFechaCreacion(rs.getTimestamp(JdbcConstantes.FCES_FECHA_CREACION));
retorno.setFcesEstadoUniversitario(rs.getInt(JdbcConstantes.FCES_ESTADO_UNIVERSITARIO));
retorno.setFcesEstadoMatricula(rs.getInt(JdbcConstantes.FCES_ESTADO_MATRICULA));		
retorno.setFcesObservacion(rs.getString(JdbcConstantes.FCES_OBSERVACION));
retorno.setFcesFechaActualizacionDatos(rs.getTimestamp(JdbcConstantes.FCES_FECHA_ACTUALIZACION_DATOS));
retorno.setFcesInacTtlId(rs.getInt(JdbcConstantes.FCES_INAC_TTL_ID));
retorno.setFcesColegioId(rs.getInt(JdbcConstantes.FCES_COLEGIO_ID));
retorno.setFcesUbcColegio(rs.getInt(JdbcConstantes.FCES_UBC_COLEGIO));
retorno.setFcesTituloBachiller(rs.getString(JdbcConstantes.FCES_TITULO_BACHILLER));
retorno.setFcesNotaGradoSecundaria(rs.getFloat(JdbcConstantes.FCES_NOTA_GRADO_SECUNDARIA));

valFloatAux = rs.getFloat(JdbcConstantes.FCES_NOTA_GRADO_SECUNDARIA);
if(valFloatAux != GeneralesConstantes.APP_ID_BASE.intValue()){
retorno.setFcesNotaGradoSecundaria(valFloatAux);
}else{
retorno.setFcesNotaGradoSecundaria(null);
}
valAux = rs.getInt("colegioid");
if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
retorno.setInacId(rs.getInt("colegioid"));
retorno.setInacDescripcion(rs.getString("colegiodesc"));
}
retorno.setInacNivel(rs.getInt(JdbcConstantes.INAC_NIVEL));
retorno.setInacTipo(rs.getInt(JdbcConstantes.INAC_TIPO));	
retorno.setUbcCantonColegioId(rs.getInt("cantoncolegioid"));
retorno.setUbcCantonColegioDescripcion(rs.getString("cantoncolegiodesc"));
retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
retorno.setPrsCelular(rs.getString(JdbcConstantes.PRS_CELULAR));
retorno.setPrsEstadoCivil(rs.getInt(JdbcConstantes.PRS_ESTADO_CIVIL));
retorno.setPrsFechaActualizacionDatos(rs.getTimestamp(JdbcConstantes.PRS_FECHA_ACTUALIZACION_DATOS));

fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
if(fecha != null ){
retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
}	

retorno.setPrsDiscapacidad(rs.getInt(JdbcConstantes.PRS_DISCAPACIDAD));
retorno.setPrsTipoDiscapacidad(rs.getInt(JdbcConstantes.PRS_TIPO_DISCAPACIDAD));

valAux = rs.getInt(JdbcConstantes.PRS_PORCE_DISCAPACIDAD);
if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
retorno.setPrsPorceDiscapacidad(valAux);
}else{
retorno.setPrsPorceDiscapacidad(null);

}

retorno.setPrsCarnetConadis(rs.getInt(JdbcConstantes.PRS_CARNET_CONADIS));
retorno.setPrsNumCarnetConadis(rs.getString(JdbcConstantes.PRS_NUM_CARNET_CONADIS));
retorno.setPrsCallePrincipal(rs.getString(JdbcConstantes.PRS_CALLE_PRINCIPAL));
retorno.setPrsCalleSecundaria(rs.getString(JdbcConstantes.PRS_CALLE_SECUNDARIA));
retorno.setPrsNumeroCasa(rs.getString(JdbcConstantes.PRS_NUMERO_CASA));
retorno.setPrsSectorDomicilio(rs.getString(JdbcConstantes.PRS_SECTOR_DOMICILIO));
retorno.setPrsReferenciaDomicilio(rs.getString(JdbcConstantes.PRS_REFERENCIA_DOMICILIO));
retorno.setEtnId(rs.getInt(JdbcConstantes.ETN_ID));
retorno.setEtnDescripcion(rs.getString(JdbcConstantes.ETN_DESCRIPCION));
retorno.setUbcPaisId(rs.getInt("paisid"));
retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
retorno.setUbcParroquiaId(rs.getInt("parroquiaid"));
retorno.setUbcParroquiaDescripcion(rs.getString("parroquiadesc"));
retorno.setUbcGentilicio(rs.getString(JdbcConstantes.UBC_GENTILICIO));
retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
retorno.setTtlId(rs.getInt(JdbcConstantes.TTL_ID));
retorno.setTtlDescripcion(rs.getString(JdbcConstantes.TTL_DESCRIPCION));
retorno.setTtlTipo(rs.getInt(JdbcConstantes.TTL_TIPO));
retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
return retorno;
} 



/**
 * Método privado que sirve para trasformar los datos del resulset
 * @param rs - rs parámetros de ingreso
 * @return retorna el dto seteado con los datos correctos
 * @throws SQLException - SQLException Excepción de error en la consulta sql
 */		
private EstudianteJdbcDto transformarResultSetADtobuscarEstudianteXIdPersona(ResultSet rs) throws SQLException{
	int valAux = 0;

	java.sql.Date fecha = null;
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsTipoIdentificacion(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION));
	retorno.setPrsTipoIdentificacionSt(PersonaConstantes.valueToLabelTipoIdentificacionUce(retorno.getPrsTipoIdentificacion()));
	retorno.setPrsTipoIdentificacionSniese(rs.getInt(JdbcConstantes.PRS_TIPO_IDENTIFICACION_SNIESE));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsSexo(rs.getInt(JdbcConstantes.PRS_SEXO));
	retorno.setPrsSexoSt(PersonaConstantes.valueToLabelTipoSexoUce(retorno.getPrsSexo()));
	retorno.setPrsSexoSniese(rs.getInt(JdbcConstantes.PRS_SEXO_SNIESE));
	retorno.setPrsMailPersonal(rs.getString(JdbcConstantes.PRS_MAIL_PERSONAL));
	retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
	retorno.setPrsTelefono(rs.getString(JdbcConstantes.PRS_TELEFONO));
	retorno.setPrsCelular(rs.getString(JdbcConstantes.PRS_CELULAR));
	retorno.setPrsEstadoCivil(rs.getInt(JdbcConstantes.PRS_ESTADO_CIVIL));
	retorno.setPrsFechaActualizacionDatos(rs.getTimestamp(JdbcConstantes.PRS_FECHA_ACTUALIZACION_DATOS));

	fecha = rs.getDate(JdbcConstantes.PRS_FECHA_NACIMIENTO);
	if(fecha != null ){
		retorno.setPrsFechaNacimiento(new Date(fecha.getTime()));
	}	

	retorno.setPrsDiscapacidad(rs.getInt(JdbcConstantes.PRS_DISCAPACIDAD));
	retorno.setPrsTipoDiscapacidad(rs.getInt(JdbcConstantes.PRS_TIPO_DISCAPACIDAD));

	valAux = rs.getInt(JdbcConstantes.PRS_PORCE_DISCAPACIDAD);
	if(valAux != GeneralesConstantes.APP_ID_BASE.intValue()){
		retorno.setPrsPorceDiscapacidad(valAux);
	}else{
		retorno.setPrsPorceDiscapacidad(null);

	}

	retorno.setPrsCarnetConadis(rs.getInt(JdbcConstantes.PRS_CARNET_CONADIS));
	retorno.setPrsNumCarnetConadis(rs.getString(JdbcConstantes.PRS_NUM_CARNET_CONADIS));
	retorno.setPrsCallePrincipal(rs.getString(JdbcConstantes.PRS_CALLE_PRINCIPAL));
	retorno.setPrsCalleSecundaria(rs.getString(JdbcConstantes.PRS_CALLE_SECUNDARIA));
	retorno.setPrsNumeroCasa(rs.getString(JdbcConstantes.PRS_NUMERO_CASA));
	retorno.setPrsSectorDomicilio(rs.getString(JdbcConstantes.PRS_SECTOR_DOMICILIO));
	retorno.setPrsReferenciaDomicilio(rs.getString(JdbcConstantes.PRS_REFERENCIA_DOMICILIO));
	retorno.setEtnId(rs.getInt(JdbcConstantes.ETN_ID));
	retorno.setEtnDescripcion(rs.getString(JdbcConstantes.ETN_DESCRIPCION));
	retorno.setUbcPaisId(rs.getInt("paisid"));
	retorno.setUbcPaisDescripcion(rs.getString("paisdesc"));	
	retorno.setUbcParroquiaId(rs.getInt("parroquiaid"));
	retorno.setUbcParroquiaDescripcion(rs.getString("parroquiadesc"));
	retorno.setUbcGentilicio(rs.getString(JdbcConstantes.UBC_GENTILICIO));
	retorno.setPrsFechaVinculacionSeguro(rs.getDate(JdbcConstantes.PRS_FECHA_VINCULACION_SEGURO));
	retorno.setPrsFormularioSeguro(rs.getString(JdbcConstantes.PRS_FORMULARIO_SEGURO));
	retorno.setPrsFechaFormularioSeguro(rs.getTimestamp(JdbcConstantes.PRS_FECHA_FORMULARIO_SEGURO));

	return retorno;
} 
/**
* Método privado que sirve para trasformar los datos del resulset
* @param rs - rs parámetros de ingreso
* @return retorna el dto seteado con los datos correctos
* @throws SQLException - SQLException Excepción de error en la consulta sql
*/		
private EstudianteJdbcDto transformarResultSetADTOFicha(ResultSet rs) throws SQLException{

EstudianteJdbcDto retorno = new EstudianteJdbcDto();
retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));

retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
retorno.setFcmtEstado(rs.getInt(JdbcConstantes.FCMT_ESTADO));
retorno.setPracId(rs.getInt(JdbcConstantes.FCMT_PRAC_ID));

return retorno;
}



/**
 * Método privado que sirve para trasformar los datos del resulset
 * @param rs - rs parámetros de ingreso
 * @return retorna el dto seteado con los datos correctos
 * @throws SQLException - SQLException Excepción de error en la consulta sql
 */		
private EstudianteJdbcDto transformarResultSetBuscarEstudianteXIdentificacionXCarrera(ResultSet rs) throws SQLException{

	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	//Integer enteroAux;
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setFcesUnivEstudPrevId(rs.getInt(JdbcConstantes.FCES_UNIV_ESTUD_PREV_ID)); 
	retorno.setFcesTipoUnivEstudPrev(rs.getInt(JdbcConstantes.FCES_TIPO_UNIV_ESTUD_PREV)); 
	retorno.setFcesEstadoEstudPrev(rs.getInt(JdbcConstantes.FCES_ESTADO_ESTUD_PREV)); 
	retorno.setFcesTitEstudPrevId(rs.getInt(JdbcConstantes.FCES_TIT_ESTUD_PREV_ID)); 
	retorno.setFcesRegTituloPrev(rs.getString(JdbcConstantes.FCES_REG_TITULO_PREV)); 
	retorno.setFcinId(rs.getInt(JdbcConstantes.FCIN_ID));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	return retorno;
}




/**
 * Método privado que sirve para trasformar los datos del resulset
 * @param rs - rs parámetros de ingreso
 * @return retorna el dto seteado con los datos correctos
 * @throws SQLException - SQLException Excepción de error en la consulta sql
 */		
private EstudianteJdbcDto transformarResultSetBuscarEstudianteXIdentificacionXCarreraXPeriodo(ResultSet rs) throws SQLException{

	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	//Integer enteroAux;
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setPrsMailInstitucional(rs.getString(JdbcConstantes.PRS_MAIL_INSTITUCIONAL));
	retorno.setFcesId(rs.getInt(JdbcConstantes.FCES_ID));
	retorno.setFcinId(rs.getInt(JdbcConstantes.FCIN_ID));
	retorno.setCncrId(rs.getInt(JdbcConstantes.CNCR_ID));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_ID));
	retorno.setFcmtEstado(rs.getInt(JdbcConstantes.FCMT_ESTADO));
	retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));	
	retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
	
	
	return retorno;
}


/**
 * Método privado que sirve para trasformar los datos del resulset
 * @param rs - rs parámetros de ingreso
 * @return retorna el dto seteado con los datos correctos
 * @throws SQLException - SQLException Excepción de error en la consulta sql
 */		
	private EstudianteJdbcDto transformarResultSetBuscarEstudianteXPeriodoXFacultadXCarreraXNivel (ResultSet rs) throws SQLException{
	
	EstudianteJdbcDto retorno = new EstudianteJdbcDto();
	//Integer enteroAux;
	retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
	retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
	retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
	retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
	retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
	retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
	retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
//	retorno.setFcmtId(rs.getInt(JdbcConstantes.FCMT_NIVEL_UBICACION));
	retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
	retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
	retorno.setFcmtNivelUbicacion(rs.getInt(JdbcConstantes.FCMT_NIVEL_UBICACION));
   return retorno;
}
	private EstudianteJdbcDto transformarResultSetBuscarEstudianteRetiro(ResultSet rs) throws SQLException{
		EstudianteJdbcDto retorno = new EstudianteJdbcDto();
		retorno.setDtmtId(rs.getInt(JdbcConstantes.DTMT_ID));
		retorno.setDtmtEstado(rs.getInt(JdbcConstantes.DTMT_ESTADO));
		retorno.setDtmtEstadoHistorico(rs.getInt(JdbcConstantes.DTMT_ESTADO_HISTORICO));
		retorno.setDtmtFechaHistorico(rs.getTimestamp(JdbcConstantes.DTMT_FECHA_HISTORICO));
		retorno.setDtmtEstadoCambio(rs.getInt(JdbcConstantes.DTMT_ESTADO_CAMBIO));
		retorno.setDtmtFechaCambio(rs.getTimestamp(JdbcConstantes.DTMT_FECHA_CAMBIO));
		retorno.setDtmtEstadoSolicitud(rs.getInt(JdbcConstantes.DTMT_ESTADO_SOLICITUD));
		retorno.setDtmtFechaSolicitud(rs.getTimestamp(JdbcConstantes.DTMT_FECHA_SOLICITUD));
		retorno.setDtmtEstadoRespuesta(rs.getInt(JdbcConstantes.DTMT_ESTADO_RESPUESTA));
		retorno.setDtmtFechaRespuesta(rs.getTimestamp(JdbcConstantes.DTMT_FECHA_RESPUESTA));
		retorno.setDtmtObservacionCambio(rs.getString(JdbcConstantes.DTMT_OBSERVACION_CAMBIO));
		retorno.setDtmtArchivoEstudiantes(rs.getString(JdbcConstantes.DTMT_ARCHIVO_ESTUDIANTES));
		retorno.setDtmtArchivoRespuesta(rs.getString(JdbcConstantes.DTMT_ARCHIVO_RESPUESTA));
		retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
		retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
		retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
		retorno.setCrrDescripcion(rs.getString(JdbcConstantes.CRR_DESCRIPCION));
		retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
		retorno.setMtrId(rs.getInt(JdbcConstantes.MTR_ID));
		retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
		retorno.setPrlId(rs.getInt(JdbcConstantes.PRL_ID));
		retorno.setPrlDescripcion(rs.getString(JdbcConstantes.PRL_DESCRIPCION));
		retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
		retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
		retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
		retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
		retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
		return retorno;
	}
	
	
	
	/**
	 * Método privado que sirve para trasformar los datos del resulset
	 * @param rs - rs parámetros de ingreso
	 * @return retorna el dto seteado con los datos correctos
	 * @throws SQLException - SQLException Excepción de error en la consulta sql
	 */		
	private EstudianteJdbcDto transformarResultSetBuscarEstudianteSltrmt(ResultSet rs) throws SQLException{
		EstudianteJdbcDto retorno = new EstudianteJdbcDto();

		retorno.setPracId(rs.getInt(JdbcConstantes.PRAC_ID));
		retorno.setPracDescripcion(rs.getString(JdbcConstantes.PRAC_DESCRIPCION));
		retorno.setCrrId(rs.getInt(JdbcConstantes.CRR_ID));
		retorno.setCrrDetalle(rs.getString(JdbcConstantes.CRR_DETALLE));
		retorno.setDpnId(rs.getInt(JdbcConstantes.DPN_ID));
		retorno.setDpnDescripcion(rs.getString(JdbcConstantes.DPN_DESCRIPCION));
		retorno.setMtrId(rs.getInt(JdbcConstantes.MTR_ID));
		retorno.setMtrDescripcion(rs.getString(JdbcConstantes.MTR_DESCRIPCION));
		retorno.setSltrmtId(rs.getInt(JdbcConstantes.SLTRMT_ID));
		retorno.setSltrmtFechaSolicitud(rs.getTimestamp(JdbcConstantes.SLTRMT_FECHA_SOLICITUD));
		retorno.setSltrmtFechaVerificacion(rs.getTimestamp(JdbcConstantes.SLTRMT_FECHA_VERIF_SOLICITUD));
		retorno.setSltrmtFechaRespSolicitud(rs.getTimestamp(JdbcConstantes.SLTRMT_FECHA_RESP_SOLICITUD));
		retorno.setSltrmtDocumentoSolicitud(rs.getString(JdbcConstantes.SLTRMT_DOCUMENTO_SOLICITUD));
		retorno.setSltrmtDocumentoResolucion(rs.getString(JdbcConstantes.SLTRMT_DOCUMENTO_RESOLUCION));
		retorno.setSltrmtTipo(rs.getInt(JdbcConstantes.SLTRMT_TIPO));
		retorno.setSltrmtEstado(rs.getInt(JdbcConstantes.SLTRMT_ESTADO));
		retorno.setSltrmtEstadoRegistro(rs.getInt(JdbcConstantes.SLTRMT_ESTADO_REGISTRO));
		retorno.setSltrmtObservacionFinal(rs.getString(JdbcConstantes.SLTRMT_OBSERVACION_FINAL));
		retorno.setPrsId(rs.getInt(JdbcConstantes.PRS_ID));
		retorno.setPrsIdentificacion(rs.getString(JdbcConstantes.PRS_IDENTIFICACION));
		retorno.setPrsPrimerApellido(rs.getString(JdbcConstantes.PRS_PRIMER_APELLIDO));
		retorno.setPrsSegundoApellido(rs.getString(JdbcConstantes.PRS_SEGUNDO_APELLIDO));
		retorno.setPrsNombres(rs.getString(JdbcConstantes.PRS_NOMBRES));
		
		return retorno;
	}
}

