package managedBeans;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.Serializable;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.bean.ViewScoped;
import javax.faces.context.FacesContext;
import javax.imageio.ImageIO;
import org.primefaces.model.DefaultStreamedContent;
import org.primefaces.model.StreamedContent;

import lector.JSDCLocal;

@ManagedBean(name = "huella")
@SessionScoped
public class Huella implements Serializable {

	@EJB
	private JSDCLocal jsdcBean;

	public StreamedContent graphic1;
	public StreamedContent graphic2;
	public int quality1;
	public int quality2;

	@PostConstruct
	public void init() {
		jsdcBean.inicializar();
	}

	public void capturar1() throws IOException {
		BufferedImage bimg = jsdcBean.capturar();
		quality1 = jsdcBean.calidad();
		ByteArrayOutputStream baos = null;
		try {
			baos = new ByteArrayOutputStream();
			ImageIO.write(bimg, "png", baos);
		} finally {
			try {
				baos.close();
			} catch (Exception e) {
			}
		}
		graphic1 = new DefaultStreamedContent(new ByteArrayInputStream(baos.toByteArray()));
	}

	public void capturar2() throws IOException {
		BufferedImage bimg = jsdcBean.capturar();
		quality2 = jsdcBean.calidad();
		ByteArrayOutputStream baos = null;
		try {
			baos = new ByteArrayOutputStream();
			ImageIO.write(bimg, "png", baos);
		} finally {
			try {
				baos.close();
			} catch (Exception e) {
			}
		}
		graphic2 = new DefaultStreamedContent(new ByteArrayInputStream(baos.toByteArray()));
	}

	public void verificar() {
		boolean ver = true;
		ver = jsdcBean.verificar();
		if (ver) {
		} else {
			System.out.println("Huella no ingresada o registrada");
		}
	}

	public void registrar() {

	}

	// getters and setters
	public StreamedContent getGraphic1() {
		return graphic1;
	}

	public void setGraphic1(StreamedContent graphic1) {
		this.graphic1 = graphic1;
	}

	public StreamedContent getGraphic2() {
		return graphic2;
	}

	public void setGraphic2(StreamedContent graphic2) {
		this.graphic2 = graphic2;
	}

	public int getQuality1() {
		return quality1;
	}

	public void setQuality1(int quality1) {
		this.quality1 = quality1;
	}

	public int getQuality2() {
		return quality2;
	}

	public void setQuality2(int quality2) {
		this.quality2 = quality2;
	}

}
