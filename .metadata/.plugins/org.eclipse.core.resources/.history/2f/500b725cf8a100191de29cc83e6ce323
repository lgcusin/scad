package ec.uce.edu.biometrico.jpa;
// Generated 08/07/2019 20:53:07 by Hibernate Tools 4.3.5.Final

import java.math.Integer;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Dependencia generated by hbm2java
 */
@Entity
@Table(name = "DEPENDENCIA")
public class Dependencia implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer dpnId;
	private Dependencia dependencia;
	private Ubicacion ubicacion;
	private String dpnDescripcion;
	private Integer dpnJerarquia;
	private Integer dpnEstado;
	private Integer dpnCampus;
	private String dpnCodSori;
	private String dpnUej;
	private Integer dpnFacCodigo;
	private List<Dependencia> dependencias = new ArrayList<Dependencia>(0);
	private List<Carrera> carreras = new ArrayList<Carrera>(0);
	private List<Edificio> edificios = new ArrayList<Edificio>(0);

	public Dependencia() {
	}

	public Dependencia(Integer dpnId) {
		this.dpnId = dpnId;
	}

	public Dependencia(Integer dpnId, Dependencia dependencia, Ubicacion ubicacion, String dpnDescripcion,
			Integer dpnJerarquia, Integer dpnEstado, Integer dpnCampus, String dpnCodSori, String dpnUej,
			Integer dpnFacCodigo, List<Dependencia> dependencias, List<Carrera> carreras, List<Edificio> edificios) {
		this.dpnId = dpnId;
		this.dependencia = dependencia;
		this.ubicacion = ubicacion;
		this.dpnDescripcion = dpnDescripcion;
		this.dpnJerarquia = dpnJerarquia;
		this.dpnEstado = dpnEstado;
		this.dpnCampus = dpnCampus;
		this.dpnCodSori = dpnCodSori;
		this.dpnUej = dpnUej;
		this.dpnFacCodigo = dpnFacCodigo;
		this.dependencias = dependencias;
		this.carreras = carreras;
		this.edificios = edificios;
	}

	@Id

	@Column(name = "DPN_ID", unique = true, nullable = false, precision = 6, scale = 0)
	public Integer getDpnId() {
		return this.dpnId;
	}

	public void setDpnId(Integer dpnId) {
		this.dpnId = dpnId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DPN_SUB_ID")
	public Dependencia getDependencia() {
		return this.dependencia;
	}

	public void setDependencia(Dependencia dependencia) {
		this.dependencia = dependencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UBC_ID")
	public Ubicacion getUbicacion() {
		return this.ubicacion;
	}

	public void setUbicacion(Ubicacion ubicacion) {
		this.ubicacion = ubicacion;
	}

	@Column(name = "DPN_DESCRIPCION", length = 512)
	public String getDpnDescripcion() {
		return this.dpnDescripcion;
	}

	public void setDpnDescripcion(String dpnDescripcion) {
		this.dpnDescripcion = dpnDescripcion;
	}

	@Column(name = "DPN_JERARQUIA", precision = 38, scale = 0)
	public Integer getDpnJerarquia() {
		return this.dpnJerarquia;
	}

	public void setDpnJerarquia(Integer dpnJerarquia) {
		this.dpnJerarquia = dpnJerarquia;
	}

	@Column(name = "DPN_ESTADO", precision = 38, scale = 0)
	public Integer getDpnEstado() {
		return this.dpnEstado;
	}

	public void setDpnEstado(Integer dpnEstado) {
		this.dpnEstado = dpnEstado;
	}

	@Column(name = "DPN_CAMPUS", precision = 38, scale = 0)
	public Integer getDpnCampus() {
		return this.dpnCampus;
	}

	public void setDpnCampus(Integer dpnCampus) {
		this.dpnCampus = dpnCampus;
	}

	@Column(name = "DPN_COD_SORI", length = 4)
	public String getDpnCodSori() {
		return this.dpnCodSori;
	}

	public void setDpnCodSori(String dpnCodSori) {
		this.dpnCodSori = dpnCodSori;
	}

	@Column(name = "DPN_UEJ", length = 4)
	public String getDpnUej() {
		return this.dpnUej;
	}

	public void setDpnUej(String dpnUej) {
		this.dpnUej = dpnUej;
	}

	@Column(name = "DPN_FAC_CODIGO", precision = 38, scale = 0)
	public Integer getDpnFacCodigo() {
		return this.dpnFacCodigo;
	}

	public void setDpnFacCodigo(Integer dpnFacCodigo) {
		this.dpnFacCodigo = dpnFacCodigo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dependencia")
	public List<Dependencia> getDependencias() {
		return this.dependencias;
	}

	public void setDependencias(List<Dependencia> dependencias) {
		this.dependencias = dependencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dependencia")
	public List<Carrera> getCarreras() {
		return this.carreras;
	}

	public void setCarreras(List<Carrera> carreras) {
		this.carreras = carreras;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dependencia")
	public List<Edificio> getEdificios() {
		return this.edificios;
	}

	public void setEdificios(List<Edificio> edificios) {
		this.edificios = edificios;
	}

}
