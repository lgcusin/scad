package ec.uce.edu.biometrico.jpa;
// Generated 15/01/2019 9:06:49 by Hibernate Tools 4.3.5.Final

import java.math.Integer;
import java.sql.Blob;
import java.util.ArrayList;
import java.util.ArrayList;
import java.util.ArrayList;
import java.util.List;
import java.util.List;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import model.Asistencia;
import model.DetallePuesto;
import model.Horario;
import model.HuellaDactilar;
import model.Permiso;
import model.Persona;
import model.Usuario;

/**
 * FichaDocente generated by hbm2java
 */
@Entity
@Table(name = "FICHA_DOCENTE")
@NamedQueries({
		@NamedQuery(name = "Docente.findByHdId", query = "select hd.fichaDocente from HuellaDactilar as hd where hd.hldcId=:hdId"),
		@NamedQuery(name = "Docente.findByUsrId", query = "select u.fichaDocente from Usuario as u where u.ursId=:usrId"),
		@NamedQuery(name = "Docente.findAllByCrrId", query = "select dp.fichaDocente from DetallePuesto as dp where dp.carrera.crrId=:crId") })

public class FichaDocente implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer fcdcId;
	private Persona persona;
	private List<HuellaDactilar> huellaDactilars = new ArrayList<HuellaDactilar>(0);
	private List<Permiso> permisos = new ArrayList<Permiso>(0);
	private List<DetallePuesto> detallePuestos = new ArrayList<DetallePuesto>(0);
	private List<Asistencia> asistencias = new ArrayList<Asistencia>(0);
	private List<Horario> horarios = new ArrayList<Horario>(0);
	private List<Usuario> usuarios = new ArrayList<Usuario>(0);

	public FichaDocente() {
	}

	public FichaDocente(Integer fcdcId) {
		this.fcdcId = fcdcId;
	}

	public FichaDocente(Integer fcdcId, Persona persona,List<HuellaDactilar> huellaDactilars,
			List<Permiso> permisos, List<DetallePuesto> detallePuestos, List<Asistencia> asistencias,
			List<Horario> horarios, List<Usuario> usuarios) {
		this.fcdcId = fcdcId;
		this.persona = persona;
		this.huellaDactilars = huellaDactilars;
		this.permisos = permisos;
		this.detallePuestos = detallePuestos;
		this.asistencias = asistencias;
		this.horarios = horarios;
		this.usuarios = usuarios;
	}

	@Id

	@Column(name = "FCDC_ID", unique = true, nullable = false, precision = 6, scale = 0)
	public Integer getFcdcId() {
		return this.fcdcId;
	}

	public void setFcdcId(Integer fcdcId) {
		this.fcdcId = fcdcId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRS_ID")
	public Persona getPersona() {
		return this.persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@Column(name = "FCDC_IDENTIFICACION", precision = 22, scale = 0)
	public Integer getFcdcIdentificacion() {
		return this.fcdcIdentificacion;
	}

	public void setFcdcIdentificacion(Integer fcdcIdentificacion) {
		this.fcdcIdentificacion = fcdcIdentificacion;
	}

	@Column(name = "FCDC_PRIMER_NOMBRE", length = 200)
	public String getFcdcPrimerNombre() {
		return this.fcdcPrimerNombre;
	}

	public void setFcdcPrimerNombre(String fcdcPrimerNombre) {
		this.fcdcPrimerNombre = fcdcPrimerNombre;
	}

	@Column(name = "FCDC_SEGUNDO_NOMBRE", length = 200)
	public String getFcdcSegundoNombre() {
		return this.fcdcSegundoNombre;
	}

	public void setFcdcSegundoNombre(String fcdcSegundoNombre) {
		this.fcdcSegundoNombre = fcdcSegundoNombre;
	}

	@Column(name = "FCDC_APELLIDOS", length = 400)
	public String getFcdcApellidos() {
		return this.fcdcApellidos;
	}

	public void setFcdcApellidos(String fcdcApellidos) {
		this.fcdcApellidos = fcdcApellidos;
	}

	@Column(name = "FCDC_ESTADO", precision = 38, scale = 0)
	public Integer getFcdcEstado() {
		return this.fcdcEstado;
	}

	public void setFcdcEstado(Integer fcdcEstado) {
		this.fcdcEstado = fcdcEstado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fichaDocente")
	public List<HuellaDactilar> getHuellaDactilars() {
		return this.huellaDactilars;
	}

	public void setHuellaDactilars(List<HuellaDactilar> huellaDactilars) {
		this.huellaDactilars = huellaDactilars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fichaDocente")
	public List<Permiso> getPermisos() {
		return this.permisos;
	}

	public void setPermisos(List<Permiso> permisos) {
		this.permisos = permisos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fichaDocente")
	public List<DetallePuesto> getDetallePuestos() {
		return this.detallePuestos;
	}

	public void setDetallePuestos(List<DetallePuesto> detallePuestos) {
		this.detallePuestos = detallePuestos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fichaDocente")
	public List<Asistencia> getAsistencias() {
		return this.asistencias;
	}

	public void setAsistencias(List<Asistencia> asistencias) {
		this.asistencias = asistencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fichaDocente")
	public List<Horario> getHorarios() {
		return this.horarios;
	}

	public void setHorarios(List<Horario> horarios) {
		this.horarios = horarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fichaDocente")
	public List<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(List<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

}
